/*!--------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
(function() {
    var ge = ["exports", "require", "vs/base/common/lifecycle", "vs/nls", "vs/platform/instantiation/common/instantiation", "vs/base/common/event", "vs/platform/contextkey/common/contextkey", "vs/base/browser/dom", "vs/platform/configuration/common/configuration", "vs/base/common/uri", "vs/platform/actions/common/actions", "vs/base/common/async", "vs/base/common/platform", "vs/base/common/arrays", "vs/base/common/errors", "vs/editor/common/core/range", "vs/workbench/services/editor/common/editorService", "vs/base/common/keyCodes", "vs/base/common/types", "vs/base/common/network", "vs/platform/registry/common/platform", "vs/platform/storage/common/storage", "vs/platform/log/common/log", "vs/base/common/resources", "vs/platform/files/common/files", "vs/css!vs/workbench/workbench.desktop.main", "vs/base/common/codicons", "vs/platform/commands/common/commands", "vs/platform/telemetry/common/telemetry", "vs/base/common/cancellation", "vs/platform/theme/common/themeService", "vs/base/common/strings", "vs/base/common/themables", "vs/platform/notification/common/notification", "vs/platform/instantiation/common/extensions", "vs/editor/common/config/editorOptions", "vs/platform/keybinding/common/keybinding", "vs/platform/workspace/common/workspace", "vs/platform/keybinding/common/keybindingsRegistry", "vs/base/common/actions", "vs/workbench/common/editor", "vs/platform/contextview/browser/contextView", "vs/workbench/services/extensions/common/extensions", "vs/platform/theme/common/colorRegistry", "vs/workbench/services/lifecycle/common/lifecycle", "vs/editor/common/core/position", "vs/editor/browser/editorExtensions", "vs/platform/opener/common/opener", "vs/platform/dialogs/common/dialogs", "vs/platform/quickinput/common/quickInput", "vs/workbench/common/contributions", "vs/workbench/common/views", "vs/platform/product/common/productService", "vs/editor/common/languages/language", "vs/platform/uriIdentity/common/uriIdentity", "vs/workbench/contrib/notebook/common/notebookCommon", "vs/base/common/map", "vs/editor/common/model", "vs/platform/label/common/label", "vs/editor/browser/editorBrowser", "vs/editor/common/services/model", "vs/base/common/observable", "vs/workbench/services/editor/common/editorGroupsService", "vs/workbench/services/environment/common/environmentService", "vs/platform/hover/browser/hover", "vs/base/common/objects", "vs/platform/configuration/common/configurationRegistry", "vs/base/common/path", "vs/editor/common/languages", "vs/editor/common/editorContextKeys", "vs/base/common/buffer", "vs/editor/common/services/resolverService", "vs/platform/theme/common/iconRegistry", "vs/editor/browser/services/codeEditorService", "vs/editor/common/services/languageFeatures", "vs/workbench/api/common/extHost.protocol", "vs/platform/progress/common/progress", "vs/workbench/services/host/browser/host", "vs/base/browser/window", "vs/platform/actions/browser/menuEntryActionViewItem", "vs/base/common/htmlContent", "vs/platform/action/common/actionCommonCategories", "vs/workbench/services/views/common/viewsService", "vs/platform/accessibility/common/accessibility", "vs/platform/list/browser/listService", "vs/workbench/common/contextkeys", "vs/workbench/services/extensions/common/extHostCustomers", "vs/base/common/uuid", "vs/platform/theme/browser/defaultStyles", "vs/base/common/iterator", "vs/base/browser/ui/hover/hoverDelegateFactory", "vs/editor/common/editorCommon", "vs/base/common/color", "vs/base/browser/ui/actionbar/actionbar", "vs/platform/extensions/common/extensions", "vs/workbench/services/layout/browser/layoutService", "vs/base/common/severity", "vs/platform/instantiation/common/descriptors", "vs/editor/common/core/selection", "vs/workbench/contrib/debug/common/debug", "vs/base/browser/keyboardEvent", "vs/platform/terminal/common/terminal", "vs/workbench/contrib/notebook/browser/notebookBrowser", "vs/platform/environment/common/environment", "vs/workbench/services/textfile/common/textfiles", "vs/base/common/charCode", "vs/platform/extensionManagement/common/extensionManagement", "vs/platform/clipboard/common/clipboardService", "vs/editor/common/model/textModel", "vs/workbench/contrib/terminal/browser/terminal", "vs/base/browser/ui/aria/aria", "vs/platform/native/common/native", "vs/platform/userDataProfile/common/userDataProfile", "vs/workbench/contrib/accessibility/browser/accessibilityConfiguration", "vs/workbench/services/userDataProfile/common/userDataProfile", "vs/base/common/filters", "vs/workbench/services/preferences/common/preferences", "vs/editor/common/services/textResourceConfiguration", "vs/platform/instantiation/common/serviceCollection", "vs/base/common/decorators", "vs/base/browser/browser", "vs/workbench/services/remote/common/remoteAgentService", "vs/workbench/common/theme", "vs/workbench/contrib/chat/common/chatAgents", "vs/workbench/services/panecomposite/browser/panecomposite", "vs/platform/userDataSync/common/userDataSync", "vs/platform/extensionManagement/common/extensionManagementUtil", "vs/workbench/contrib/extensions/common/extensions", "vs/workbench/contrib/terminal/common/terminal", "vs/workbench/services/extensionManagement/common/extensionManagement", "vs/platform/editor/common/editor", "vs/base/common/hash", "vs/base/common/errorMessage", "vs/editor/common/languages/languageConfigurationRegistry", "vs/base/browser/mouseEvent", "vs/workbench/services/path/common/pathService", "vs/workbench/browser/parts/views/viewPane", "vs/base/browser/ui/button/button", "vs/platform/markers/common/markers", "vs/editor/common/languages/modesRegistry", "vs/workbench/contrib/notebook/common/notebookService", "vs/workbench/services/extensions/common/extensionsRegistry", "vs/base/common/stopwatch", "vs/platform/accessibility/browser/accessibleView", "vs/platform/workspace/common/workspaceTrust", "vs/workbench/services/filesConfiguration/common/filesConfigurationService", "vs/workbench/contrib/notebook/common/notebookContextKeys", "vs/base/common/lazy", "vs/base/browser/ui/iconLabel/iconLabels", "vs/platform/actions/browser/toolbar", "vs/workbench/contrib/testing/common/testTypes", "vs/editor/common/encodedTokenAttributes", "vs/platform/accessibilitySignal/browser/accessibilitySignalService", "vs/workbench/contrib/notebook/common/notebookExecutionStateService", "vs/workbench/services/environment/electron-sandbox/environmentService", "vs/base/browser/fastDomNode", "vs/base/common/marshalling", "vs/editor/common/core/editOperation", "vs/base/browser/ui/actionbar/actionViewItems", "vs/platform/contextkey/common/contextkeys", "vs/workbench/services/statusbar/browser/statusbar", "vs/base/common/json", "vs/base/browser/touch", "vs/editor/browser/services/bulkEditService", "vs/platform/terminal/common/capabilities/capabilities", "vs/base/browser/ui/scrollbar/scrollableElement", "vs/workbench/contrib/chat/browser/chat", "vs/base/common/numbers", "vs/base/common/uint", "vs/platform/remote/common/remoteAuthorityResolver", "vs/workbench/common/configuration", "vs/base/common/arraysFind", "vs/workbench/contrib/chat/common/chatService", "vs/workbench/contrib/files/common/files", "vs/base/common/marshallingIds", "vs/base/common/scrollable", "vs/base/common/labels", "vs/platform/theme/common/theme", "vs/workbench/services/workingCopy/common/workingCopyService", "vs/workbench/browser/editor", "vs/base/common/assert", "vs/workbench/services/editor/common/editorResolverService", "vs/base/browser/ui/widget", "vs/base/common/glob", "vs/platform/ipc/electron-sandbox/services", "vs/platform/undoRedo/common/undoRedo", "vs/base/browser/ui/hover/hoverWidget", "vs/base/common/performance", "vs/editor/browser/widget/codeEditor/codeEditorWidget", "vs/workbench/contrib/terminal/common/terminalContextKey", "vs/workbench/services/search/common/search", "vs/workbench/browser/labels", "vs/workbench/browser/parts/views/viewPaneContainer", "vs/editor/common/services/editorWorker", "vs/platform/telemetry/common/telemetryUtils", "vs/platform/window/common/window", "vs/workbench/contrib/chat/common/chatContextKeys", "vs/workbench/services/extensionManagement/common/extensionFeatures", "vs/workbench/contrib/notebook/browser/controller/coreActions", "vs/workbench/browser/parts/editor/editorCommands", "vs/base/browser/markdownRenderer", "vs/editor/common/core/lineRange", "vs/platform/jsonschemas/common/jsonContributionRegistry", "vs/workbench/browser/parts/editor/editorPane", "vs/workbench/contrib/notebook/common/notebookKernelService", "vs/workbench/contrib/testing/common/testId", "vs/workbench/services/configuration/common/configuration", "vs/base/common/mime", "vs/base/common/extpath", "vs/base/browser/ui/toggle/toggle", "vs/platform/layout/browser/layoutService", "vs/editor/browser/widget/markdownRenderer/browser/markdownRenderer", "vs/editor/contrib/snippet/browser/snippetController2", "vs/workbench/common/editor/editorInput", "vs/workbench/services/activity/common/activity", "vs/base/browser/ui/tree/tree", "vs/base/common/linkedList", "vs/base/browser/event", "vs/base/browser/ui/sash/sash", "vs/base/browser/ui/list/listWidget", "vs/base/browser/ui/splitview/splitview", "vs/editor/browser/widget/codeEditor/embeddedCodeEditorWidget", "vs/workbench/common/memento", "vs/workbench/contrib/inlineChat/common/inlineChat", "vs/base/common/functional", "vs/base/common/iconLabels", "vs/editor/common/cursorEvents", "vs/base/browser/ui/inputbox/inputBox", "vs/base/common/date", "vs/editor/contrib/peekView/browser/peekView", "vs/workbench/contrib/chat/common/chatViewModel", "vs/workbench/contrib/notebook/browser/notebookIcons", "vs/workbench/contrib/notebook/browser/view/cellPart", "vs/workbench/services/environment/browser/environmentService", "vs/workbench/services/output/common/output", "vs/base/parts/ipc/common/ipc", "vs/base/browser/ui/contextview/contextview", "vs/editor/common/core/offsetRange", "vs/editor/browser/view/viewPart", "vs/editor/common/services/getIconClasses", "vs/workbench/contrib/notebook/browser/services/notebookEditorService", "vs/workbench/common/editor/sideBySideEditorInput", "vs/workbench/services/extensionRecommendations/common/extensionRecommendations", "vs/workbench/services/history/common/history", "vs/workbench/contrib/debug/common/debugModel", "vs/workbench/services/themes/common/workbenchThemeService", "vs/workbench/services/workingCopy/common/workingCopyBackup", "vs/base/common/hierarchicalKind", "vs/base/common/observableInternal/derived", "vs/base/common/process", "vs/base/browser/dnd", "vs/editor/common/viewModel", "vs/editor/contrib/codeAction/common/types", "vs/platform/request/common/request", "vs/platform/theme/common/colorUtils", "vs/editor/common/core/editorColorRegistry", "vs/workbench/contrib/chat/common/chatParserTypes", "vs/workbench/contrib/webview/browser/webview", "vs/workbench/common/editor/diffEditorInput", "vs/workbench/services/workingCopy/common/workingCopy", "vs/workbench/services/workingCopy/common/workingCopyFileService", "vs/workbench/contrib/terminal/browser/terminalActions", "vs/platform/quickinput/common/quickAccess", "vs/platform/workspace/common/virtualWorkspace", "vs/platform/workspaces/common/workspaces", "vs/workbench/contrib/debug/browser/debugIcons", "vs/workbench/contrib/notebook/browser/notebookEditorExtensions", "vs/workbench/contrib/scm/common/scm", "vs/workbench/contrib/testing/common/constants", "vs/workbench/services/authentication/common/authentication", "vs/workbench/services/configurationResolver/common/configurationResolver", "vs/workbench/browser/dnd", "vs/base/browser/ui/hover/hoverDelegate2", "vs/base/browser/pixelRatio", "vs/base/parts/sandbox/electron-sandbox/globals", "vs/base/browser/ui/iconLabel/iconLabel", "vs/editor/browser/config/domFontInfo", "vs/editor/browser/widget/diffEditor/utils", "vs/editor/contrib/hover/browser/hoverTypes", "vs/platform/dnd/browser/dnd", "vs/platform/tunnel/common/tunnel", "vs/editor/contrib/suggest/browser/suggestController", "vs/workbench/contrib/search/common/constants", "vs/workbench/contrib/terminal/browser/terminalExtensions", "vs/workbench/contrib/testing/common/testService", "vs/workbench/contrib/testing/common/testingContextKeys", "vs/workbench/contrib/testing/common/testResultService", "vs/workbench/contrib/notebook/common/notebookEditorInput", "vs/workbench/services/extensions/common/extensionManifestPropertiesService", "vs/base/common/ternarySearchTree", "vs/editor/contrib/snippet/browser/snippetParser", "vs/editor/common/cursorCommon", "vs/editor/common/services/languageFeatureDebounce", "vs/platform/observable/common/platformObservableUtils", "vs/platform/quickinput/browser/pickerQuickAccess", "vs/workbench/contrib/debug/common/debugUtils", "vs/workbench/contrib/files/browser/files", "vs/workbench/contrib/chat/browser/actions/chatActions", "vs/workbench/services/workingCopy/common/workingCopyEditorService", "vs/workbench/contrib/search/browser/searchModel", "vs/base/common/observableInternal/base", "vs/base/browser/canIUse", "vs/base/common/stream", "vs/base/browser/ui/highlightedlabel/highlightedLabel", "vs/base/browser/ui/tree/abstractTree", "vs/platform/accessibility/browser/accessibleViewRegistry", "vs/platform/history/browser/contextScopedHistoryWidget", "vs/editor/contrib/suggest/browser/suggest", "vs/platform/update/common/update", "vs/workbench/common/editor/editorModel", "vs/workbench/contrib/accessibility/common/accessibilityCommands", "vs/workbench/contrib/issue/common/issue", "vs/workbench/contrib/testing/common/testProfileService", "vs/workbench/contrib/testing/common/testResult", "vs/workbench/services/configuration/common/jsonEditing", "vs/workbench/services/editor/common/customEditorLabelService", "vs/workbench/contrib/tasks/common/tasks", "vs/workbench/contrib/debug/browser/debugCommands", "vs/workbench/contrib/extensions/browser/extensionsActions", "vs/base/browser/ui/list/list", "vs/base/common/equals", "vs/base/common/marked/marked", "vs/base/common/keybindings", "vs/editor/common/core/cursorColumns", "vs/editor/common/diff/rangeMapping", "vs/base/browser/ui/keybindingLabel/keybindingLabel", "vs/platform/ipc/common/mainProcessService", "vs/platform/keybinding/common/keybindingResolver", "vs/platform/remote/common/remoteHosts", "vs/editor/contrib/message/browser/messageController", "vs/editor/contrib/hover/browser/hoverController", "vs/workbench/contrib/chat/common/chatModel", "vs/workbench/contrib/notebook/common/notebookRange", "vs/workbench/contrib/tasks/common/taskService", "vs/workbench/contrib/testing/common/configuration", "vs/workbench/services/editor/common/editorGroupColumn", "vs/workbench/contrib/comments/browser/commentService", "vs/base/common/collections", "vs/base/common/observableInternal/utils", "vs/editor/common/core/textLength", "vs/editor/common/core/wordHelper", "vs/editor/common/tokens/lineTokens", "vs/base/browser/ui/dropdown/dropdownActionViewItem", "vs/base/browser/ui/toolbar/toolbar", "vs/platform/opener/browser/link", "vs/editor/contrib/editorState/browser/editorState", "vs/editor/contrib/codeAction/browser/codeAction", "vs/editor/contrib/contextmenu/browser/contextmenu", "vs/editor/browser/widget/diffEditor/diffEditorWidget", "vs/workbench/contrib/extensions/browser/extensionsIcons", "vs/workbench/contrib/preferences/common/preferences", "vs/workbench/contrib/terminal/common/terminalStrings", "vs/workbench/contrib/testing/browser/icons", "vs/workbench/browser/quickaccess", "vs/workbench/services/languageDetection/common/languageDetectionWorkerService", "vs/workbench/services/outline/browser/outline", "vs/workbench/contrib/inlineChat/browser/inlineChatController", "vs/workbench/contrib/search/browser/searchActionsBase", "vs/base/browser/trustedTypes", "vs/base/common/linkedText", "vs/base/common/dataTransfer", "vs/base/browser/ui/countBadge/countBadge", "vs/editor/common/core/stringBuilder", "vs/editor/common/core/textEdit", "vs/editor/browser/stableEditorScroll", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length", "vs/editor/common/viewEvents", "vs/editor/common/config/fontInfo", "vs/platform/product/common/product", "vs/editor/browser/coreCommands", "vs/workbench/contrib/codeEditor/browser/menuPreventer", "vs/workbench/contrib/codeEditor/browser/selectionClipboard", "vs/workbench/contrib/comments/common/commentContextKeys", "vs/workbench/contrib/mergeEditor/browser/model/lineRange", "vs/workbench/contrib/mergeEditor/browser/utils", "vs/workbench/contrib/snippets/browser/snippets", "vs/workbench/contrib/speech/common/speechService", "vs/workbench/contrib/terminalContrib/links/browser/links", "vs/workbench/contrib/terminal/browser/terminalIcon", "vs/workbench/contrib/testing/common/storedValue", "vs/workbench/services/decorations/common/decorations", "vs/workbench/services/extensions/common/extensionHostKind", "vs/workbench/browser/actions/widgetNavigationCommands", "vs/workbench/services/remote/common/remoteExplorerService", "vs/workbench/services/search/common/queryBuilder", "vs/workbench/common/editor/textResourceEditorInput", "vs/workbench/services/timer/browser/timerService", "vs/workbench/contrib/codeEditor/browser/simpleEditorOptions", "vs/workbench/services/userDataSync/common/userDataSync", "vs/workbench/services/workspaces/common/workspaceEditing", "vs/workbench/contrib/chat/browser/chatWidget", "vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel", "vs/base/common/comparers", "vs/base/browser/formattedTextRenderer", "vs/base/browser/ui/progressbar/progressbar", "vs/base/browser/ui/list/listView", "vs/editor/common/core/eolCounter", "vs/editor/common/languages/languageConfiguration", "vs/editor/browser/observableCodeEditor", "vs/editor/contrib/documentSymbols/browser/outlineModel", "vs/base/common/semver/semver", "vs/platform/theme/common/colors/baseColors", "vs/editor/contrib/codeAction/browser/codeActionController", "vs/editor/contrib/find/browser/findModel", "vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController", "vs/platform/extensionResourceLoader/common/extensionResourceLoader", "vs/workbench/browser/parts/editor/editor", "vs/workbench/browser/part", "vs/workbench/contrib/chat/browser/chatEditorInput", "vs/workbench/contrib/chat/common/chatVariables", "vs/workbench/contrib/extensions/browser/extensionRecommendations", "vs/workbench/contrib/inlineChat/browser/inlineChatSessionService", "vs/workbench/contrib/notebook/common/notebookEditorModelResolverService", "vs/workbench/contrib/search/browser/searchIcons", "vs/workbench/contrib/terminal/common/terminalColorRegistry", "vs/workbench/contrib/terminalContrib/links/browser/terminalLinkHelpers", "vs/workbench/contrib/testing/common/testingStates", "vs/workbench/contrib/webviewPanel/browser/webviewEditorInput", "vs/workbench/contrib/search/common/search", "vs/workbench/contrib/tasks/common/problemMatcher", "vs/workbench/contrib/bulkEdit/browser/bulkCellEdits", "vs/base/common/jsonFormatter", "vs/base/common/jsonEdit", "vs/amdX", "vs/editor/common/model/prefixSumComputer", "vs/editor/common/model/textModelSearch", "vs/editor/common/textModelEvents", "vs/editor/browser/view/dynamicViewOverlay", "vs/base/browser/ui/selectBox/selectBox", "vs/base/common/keybindingLabels", "vs/editor/common/languages/textToHtmlTokenizer", "vs/platform/action/common/action", "vs/editor/contrib/hover/browser/hoverOperation", "vs/editor/common/config/editorConfigurationSchema", "vs/platform/remote/common/remoteAgentConnection", "vs/platform/theme/common/colors/editorColors", "vs/editor/browser/widget/diffEditor/registrations.contribution", "vs/editor/contrib/folding/browser/folding", "vs/platform/url/common/url", "vs/platform/actions/browser/dropdownWithPrimaryActionViewItem", "vs/workbench/common/editor/editorOptions", "vs/workbench/common/notifications", "vs/workbench/contrib/files/browser/fileConstants", "vs/workbench/contrib/markers/common/markers", "vs/workbench/contrib/preferences/browser/preferencesIcons", "vs/workbench/contrib/preferences/common/settingsEditorColorRegistry", "vs/workbench/contrib/searchEditor/browser/constants", "vs/workbench/services/authentication/browser/authenticationAccessService", "vs/workbench/services/extensions/common/proxyIdentifier", "vs/workbench/browser/actions/windowActions", "vs/workbench/contrib/webviewPanel/browser/webviewWorkbenchService", "vs/workbench/services/log/common/logConstants", "vs/workbench/contrib/customEditor/common/customEditor", "vs/workbench/services/untitled/common/untitledTextEditorInput", "vs/workbench/contrib/debug/browser/baseDebugView", "vs/workbench/contrib/testing/common/testCoverageService", "vs/workbench/services/untitled/common/untitledTextEditorService", "vs/base/common/idGenerator", "vs/base/common/history", "vs/base/common/observableInternal/debugName", "vs/base/browser/fonts", "vs/base/common/symbols", "vs/base/browser/ui/mouseCursor/mouseCursor", "vs/editor/browser/config/tabFocus", "vs/editor/common/core/characterClassifier", "vs/editor/common/commands/replaceCommand", "vs/editor/common/editorFeatures", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/smallImmutableSet", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/ast", "vs/editor/common/viewLayout/lineDecorations", "vs/editor/common/standaloneStrings", "vs/editor/common/viewLayout/viewLineRenderer", "vs/editor/contrib/gotoSymbol/browser/referencesModel", "vs/platform/history/browser/historyWidgetKeybindingHint", "vs/editor/browser/config/fontMeasurements", "vs/platform/download/common/download", "vs/platform/extensionRecommendations/common/extensionRecommendations", "vs/platform/languagePacks/common/languagePacks", "vs/platform/severityIcon/browser/severityIcon", "vs/editor/contrib/format/browser/format", "vs/platform/terminal/common/capabilities/terminalCapabilityStore", "vs/platform/window/electron-sandbox/window", "vs/platform/extensionManagement/common/extensionStorage", "vs/platform/externalServices/common/serviceMachineId", "vs/workbench/browser/parts/notifications/notificationsCommands", "vs/workbench/contrib/comments/browser/commentsTreeViewer", "vs/workbench/contrib/editSessions/common/editSessions", "vs/workbench/contrib/mergeEditor/browser/model/mapping", "vs/workbench/contrib/mergeEditor/common/mergeEditor", "vs/workbench/contrib/notebook/browser/controller/chat/notebookChatContext", "vs/workbench/contrib/notebook/browser/diff/notebookDiffEditorBrowser", "vs/workbench/contrib/notebook/common/notebookExecutionService", "vs/workbench/contrib/terminal/browser/terminalContextMenu", "vs/workbench/contrib/terminal/browser/terminalIcons", "vs/workbench/contrib/terminal/browser/terminalUri", "vs/workbench/contrib/terminal/common/terminalStorageKeys", "vs/workbench/contrib/terminalContrib/chat/browser/terminalChat", "vs/workbench/services/extensions/common/extensionDevOptions", "vs/workbench/contrib/tasks/common/taskDefinitionRegistry", "vs/workbench/services/files/common/elevatedFileService", "vs/workbench/services/language/common/languageService", "vs/workbench/common/editor/textEditorModel", "vs/workbench/services/localization/common/locale", "vs/workbench/contrib/notebook/browser/controller/cellOperations", "vs/workbench/services/assignment/common/assignmentService", "vs/workbench/contrib/files/common/explorerModel", "vs/workbench/contrib/mergeEditor/browser/mergeEditorInput", "vs/workbench/services/title/browser/titleService", "vs/workbench/contrib/snippets/browser/tabCompletion", "vs/workbench/browser/actions/layoutActions", "vs/workbench/services/workingCopy/common/workingCopyHistory", "vs/workbench/services/textfile/common/textEditorService", "vs/workbench/browser/actions/workspaceCommands", "vs/workbench/browser/actions/workspaceActions", "vs/base/common/observableInternal/logging", "vs/base/common/prefixTree", "vs/base/common/cache", "vs/base/common/hotReloadHelpers", "vs/base/common/diff/diff", "vs/base/common/fuzzyScorer", "vs/base/browser/globalPointerMoveMonitor", "vs/base/browser/ui/iconLabel/simpleIconLabel", "vs/base/common/worker/simpleWorker", "vs/base/parts/ipc/common/ipc.net", "vs/base/browser/ui/grid/grid", "vs/css!vs/workbench/contrib/scm/browser/media/scm", "vs/editor/browser/view/renderingContext", "vs/editor/common/core/wordCharacterClassifier", "vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm", "vs/editor/common/languages/supports", "vs/editor/common/languages/supports/tokenization", "vs/editor/common/services/treeViewsDnd", "vs/editor/common/viewEventHandler", "vs/editor/contrib/folding/browser/foldingRanges", "vs/base/common/jsonErrorMessages", "vs/platform/files/browser/webFileSystemAccess", "vs/editor/common/services/treeViewsDndService", "vs/platform/debug/common/extensionHostDebug", "vs/platform/diagnostics/common/diagnostics", "vs/platform/issue/common/issue", "vs/editor/common/commands/shiftCommand", "vs/editor/common/services/languagesAssociations", "vs/platform/remote/common/remoteSocketFactoryService", "vs/platform/terminal/common/environmentVariableShared", "vs/platform/terminal/common/terminalEnvironment", "vs/platform/terminal/common/terminalStrings", "vs/editor/browser/editorDom", "vs/editor/contrib/hover/browser/markdownHoverParticipant", "vs/platform/theme/common/tokenClassificationRegistry", "vs/editor/common/model/editStack", "vs/editor/contrib/colorPicker/browser/colorDetector", "vs/editor/contrib/find/browser/findState", "vs/editor/contrib/zoneWidget/browser/zoneWidget", "vs/platform/workspace/common/editSessions", "vs/editor/contrib/dropOrPasteInto/browser/copyPasteController", "vs/editor/contrib/clipboard/browser/clipboard", "vs/editor/contrib/find/browser/findController", "vs/editor/browser/widget/diffEditor/embeddedDiffEditorWidget", "vs/platform/secrets/common/secrets", "vs/platform/userDataProfile/common/userDataProfileStorageService", "vs/workbench/contrib/chat/common/chatWordCounter", "vs/workbench/contrib/comments/common/commentsConfiguration", "vs/workbench/contrib/debug/browser/callStackEditorContribution", "vs/workbench/contrib/debug/common/disassemblyViewInput", "vs/workbench/contrib/markers/browser/messages", "vs/workbench/contrib/notebook/browser/view/cellParts/cellActionView", "vs/workbench/contrib/notebook/common/notebookLoggingService", "vs/workbench/contrib/outline/browser/outline", "vs/workbench/contrib/scm/browser/util", "vs/workbench/contrib/scm/common/quickDiff", "vs/workbench/contrib/search/browser/replace", "vs/workbench/contrib/snippets/browser/snippetsFile", "vs/workbench/contrib/terminal/browser/terminalStatusList", "vs/workbench/contrib/terminal/common/environmentVariable", "vs/workbench/contrib/terminalContrib/stickyScroll/common/terminalStickyScrollConfiguration", "vs/workbench/contrib/terminalContrib/suggest/common/terminalSuggestConfiguration", "vs/workbench/contrib/testing/common/observableValue", "vs/workbench/contrib/testing/browser/explorerProjections/index", "vs/workbench/contrib/testing/common/testingPeekOpener", "vs/workbench/contrib/testing/common/testingUri", "vs/workbench/contrib/timeline/common/timeline", "vs/workbench/services/authentication/browser/authenticationUsageService", "vs/workbench/services/banner/browser/bannerService", "vs/workbench/browser/codeeditor", "vs/workbench/browser/parts/editor/sideBySideEditor", "vs/workbench/contrib/debug/common/debugSource", "vs/workbench/services/extensionRecommendations/common/workspaceExtensionsConfig", "vs/workbench/contrib/chat/common/chatSlashCommands", "vs/workbench/services/authentication/browser/authenticationService", "vs/workbench/api/browser/mainThreadWebviews", "vs/workbench/contrib/terminal/browser/terminalEditorInput", "vs/workbench/services/auxiliaryWindow/browser/auxiliaryWindowService", "vs/workbench/contrib/notebook/browser/diff/diffElementViewModel", "vs/workbench/services/preferences/common/preferencesModels", "vs/workbench/contrib/debug/browser/linkDetector", "vs/workbench/services/remote/common/tunnelModel", "vs/workbench/services/textfile/common/encoding", "vs/workbench/contrib/debug/common/replModel", "vs/workbench/contrib/chat/browser/codeBlockPart", "vs/workbench/contrib/comments/browser/simpleCommentEditor", "vs/workbench/services/workingCopy/common/fileWorkingCopy", "vs/workbench/contrib/customEditor/browser/customEditorInput", "vs/workbench/browser/parts/views/treeView", "vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel", "vs/workbench/contrib/notebook/browser/notebookEditorWidget", "vs/workbench/contrib/terminalContrib/chat/browser/terminalChatController", "vs/base/common/keybindingParser", "vs/base/common/processes", "vs/base/common/range", "vs/base/common/codiconsUtil", "vs/base/browser/ui/tree/objectTreeModel", "vs/base/browser/defaultWorkerFactory", "vs/base/parts/ipc/electron-sandbox/ipc.mp", "vs/base/browser/ui/resizable/resizable", "vs/css!vs/workbench/contrib/searchEditor/browser/media/searchEditor", "vs/editor/common/config/editorZoom", "vs/editor/common/core/textModelDefaults", "vs/editor/common/languageSelector", "vs/editor/common/languages/supports/indentRules", "vs/editor/common/languages/supports/richEditBrackets", "vs/editor/common/languageFeatureRegistry", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/beforeEditPositionMapper", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/tokenizer", "vs/editor/common/model/intervalTree", "vs/editor/common/viewModelEventDispatcher", "vs/editor/contrib/inlineCompletions/browser/ghostText", "vs/editor/contrib/inlineCompletions/browser/utils", "vs/base/browser/ui/findinput/findInput", "vs/editor/contrib/hover/browser/hoverActionIds", "vs/editor/common/services/markerDecorations", "vs/editor/contrib/inlineCompletions/browser/inlineCompletionContextKeys", "vs/editor/common/cursor/cursorWordOperations", "vs/editor/contrib/gotoSymbol/browser/link/clickLinkGesture", "vs/platform/files/common/watcher", "vs/platform/keybinding/common/resolvedKeybindingItem", "vs/editor/browser/controller/textAreaInput", "vs/platform/markers/common/markerService", "vs/platform/policy/common/policy", "vs/platform/profiling/common/profiling", "vs/editor/browser/services/editorWorkerService", "vs/editor/common/cursor/cursorTypeEditOperations", "vs/platform/configuration/common/configurationModels", "vs/platform/remote/common/remoteExtensionsScanner", "vs/platform/extensions/common/extensionValidator", "vs/platform/sign/common/sign", "vs/editor/browser/widget/diffEditor/diffProviderFactoryService", "vs/editor/browser/widget/diffEditor/diffEditorViewModel", "vs/platform/terminal/common/terminalProfiles", "vs/editor/common/services/modelService", "vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController", "vs/editor/contrib/wordHighlighter/browser/wordHighlighter", "vs/platform/userDataSync/common/ignoredExtensions", "vs/platform/extensionManagement/common/extensionsScannerService", "vs/editor/contrib/find/browser/findWidget", "vs/editor/contrib/gotoError/browser/gotoError", "vs/editor/contrib/gotoSymbol/browser/goToCommands", "vs/platform/extensionManagement/common/extensionEnablementService", "vs/platform/userDataSync/common/userDataSyncMachines", "vs/platform/userDataSync/common/userDataSyncStoreService", "vs/workbench/browser/actions", "vs/workbench/common/activity", "vs/workbench/common/resources", "vs/workbench/contrib/callHierarchy/common/callHierarchy", "vs/workbench/contrib/chat/browser/chatContentParts/chatCollections", "vs/workbench/contrib/chat/common/chatColors", "vs/workbench/contrib/chat/common/chatParticipantContribTypes", "vs/workbench/contrib/chat/common/annotations", "vs/workbench/contrib/debug/browser/debugColors", "vs/workbench/contrib/extensions/common/extensionsInput", "vs/workbench/contrib/extensions/common/runtimeExtensionsInput", "vs/workbench/contrib/interactive/browser/interactiveCommon", "vs/workbench/contrib/interactive/browser/interactiveHistoryService", "vs/workbench/contrib/markers/browser/markersModel", "vs/workbench/contrib/mergeEditor/browser/view/colors", "vs/workbench/contrib/notebook/browser/notebookViewEvents", "vs/workbench/contrib/notebook/common/notebookCellStatusBarService", "vs/workbench/contrib/snippets/browser/commands/abstractSnippetsActions", "vs/workbench/contrib/terminalContrib/accessibility/common/terminal.accessibility", "vs/workbench/contrib/terminalContrib/accessibility/common/terminalAccessibilityConfiguration", "vs/workbench/contrib/terminalContrib/links/browser/terminalLinkParsing", "vs/workbench/contrib/terminalContrib/quickFix/browser/quickFix", "vs/workbench/contrib/testing/browser/testMessageColorizer", "vs/workbench/contrib/testing/common/testCoverage", "vs/workbench/contrib/testing/common/testExplorerFilterState", "vs/workbench/contrib/testing/browser/testResultsView/testResultsSubject", "vs/workbench/contrib/typeHierarchy/common/typeHierarchy", "vs/workbench/services/accessibility/common/accessibleViewInformationService", "vs/workbench/services/aiRelatedInformation/common/aiRelatedInformation", "vs/workbench/browser/parts/editor/editorCommandsContext", "vs/workbench/contrib/terminal/browser/terminalMenus", "vs/workbench/contrib/url/browser/trustedDomains", "vs/workbench/contrib/logs/common/defaultLogLevels", "vs/workbench/services/environment/electron-sandbox/shellEnvironmentService", "vs/workbench/services/extensions/common/extensionHostProtocol", "vs/workbench/contrib/chat/common/chatRequestParser", "vs/workbench/contrib/chat/common/languageModelToolsService", "vs/workbench/contrib/chat/common/languageModels", "vs/workbench/services/languageStatus/common/languageStatusService", "vs/workbench/contrib/webviewPanel/browser/webviewEditor", "vs/workbench/contrib/codeEditor/browser/toggleWordWrap", "vs/workbench/services/notebook/common/notebookDocumentService", "vs/workbench/api/browser/mainThreadNotebookDto", "vs/workbench/api/common/extHostTypes", "vs/workbench/contrib/notebook/browser/notebookOptions", "vs/workbench/contrib/notebook/common/model/notebookCellTextModel", "vs/workbench/contrib/notebook/browser/contrib/find/findModel", "vs/workbench/contrib/notebook/browser/controller/foldingController", "vs/workbench/contrib/accessibility/browser/accessibleViewActions", "vs/workbench/contrib/externalUriOpener/common/configuration", "vs/workbench/contrib/externalUriOpener/common/externalUriOpenerService", "vs/workbench/services/textMate/browser/textMateTokenizationFeature", "vs/workbench/contrib/debug/common/debugVisualizers", "vs/workbench/contrib/files/browser/editors/fileEditorInput", "vs/workbench/contrib/multiDiffEditor/browser/multiDiffEditorInput", "vs/workbench/services/userActivity/common/userActivityService", "vs/workbench/services/userData/browser/userDataInit", "vs/workbench/contrib/preferences/browser/settingsTreeModels", "vs/workbench/contrib/codeEditor/browser/suggestEnabledInput/suggestEnabledInput", "vs/workbench/services/userDataProfile/common/remoteUserDataProfiles", "vs/workbench/contrib/chat/browser/actions/chatExecuteActions", "vs/workbench/contrib/comments/browser/commentsController", "vs/workbench/contrib/debug/browser/breakpointsView", "vs/workbench/contrib/debug/browser/repl", "vs/workbench/browser/parts/editor/textEditor", "vs/workbench/contrib/mergeEditor/browser/view/mergeEditor", "vs/workbench/services/workingCopy/common/storedFileWorkingCopy", "vs/workbench/browser/parts/editor/editorTabsControl", "vs/workbench/contrib/files/browser/fileActions", "vs/workbench/contrib/files/browser/explorerViewlet", "vs/workbench/contrib/remote/browser/remoteExplorer", "vs/workbench/contrib/terminal/browser/terminalInstance", "vs/workbench/services/workspaces/common/workspaceTrust", "vs/workbench/contrib/chat/browser/contrib/chatDynamicVariables", "vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/executionStatusBarItemController", "vs/workbench/contrib/searchEditor/browser/searchEditorSerialization", "vs/workbench/contrib/search/browser/searchView", "vs/base/browser/iframe", "vs/base/browser/performance", "vs/base/browser/ui/scrollbar/scrollbarState", "vs/base/common/controlFlow", "vs/base/common/observableInternal/autorun", "vs/base/browser/hash", "vs/base/browser/dompurify/dompurify", "vs/base/browser/ui/tree/indexTreeModel", "vs/base/browser/ui/scrollbar/scrollbarArrow", "vs/base/common/resourceTree", "vs/base/common/uriIpc", "vs/base/parts/ipc/common/ipc.mp", "vs/base/parts/storage/common/storage", "vs/base/browser/ui/codicons/codiconStyles", "vs/css!vs/editor/contrib/colorPicker/browser/colorPicker", "vs/css!vs/editor/contrib/hover/browser/hover", "vs/css!vs/platform/quickinput/browser/media/quickInput", "vs/css!vs/workbench/contrib/comments/browser/media/review", "vs/css!vs/workbench/contrib/terminalContrib/stickyScroll/browser/media/stickyScroll", "vs/editor/browser/viewParts/minimap/minimapCharSheet", "vs/editor/common/core/indentation", "vs/editor/common/diff/defaultLinesDiffComputer/utils", "vs/editor/common/diff/linesDiffComputer", "vs/editor/common/commands/trimTrailingWhitespaceCommand", "vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer", "vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder", "vs/editor/common/model/utils", "vs/editor/common/textModelGuides", "vs/editor/common/tokenizationTextModelPart", "vs/editor/common/languages/supports/indentationLineProcessor", "vs/editor/common/tokens/contiguousMultilineTokensBuilder", "vs/editor/contrib/folding/browser/syntaxRangeProvider", "vs/editor/contrib/inlayHints/browser/inlayHints", "vs/editor/contrib/inlineCompletions/browser/commandIds", "vs/editor/contrib/inlineCompletions/browser/singleTextEdit", "vs/editor/contrib/semanticTokens/common/semanticTokensConfig", "vs/base/browser/ui/menu/menu", "vs/base/browser/ui/tree/objectTree", "vs/base/browser/ui/tree/asyncDataTree", "vs/editor/common/languages/nullTokenize", "vs/platform/environment/common/environmentService", "vs/platform/extensions/common/extensionsApiProposals", "vs/editor/common/services/semanticTokensStyling", "vs/editor/contrib/dropOrPasteInto/browser/edit", "vs/editor/contrib/parameterHints/browser/provideSignatureHelp", "vs/editor/browser/view/viewLayer", "vs/editor/browser/viewParts/glyphMargin/glyphMargin", "vs/editor/common/cursor/cursorMoveOperations", "vs/editor/common/cursor/cursorDeleteOperations", "vs/editor/common/cursor/cursorMoveCommands", "vs/editor/common/languages/autoIndent", "vs/editor/contrib/placeholderText/browser/placeholderTextContribution", "vs/platform/encryption/common/encryptionService", "vs/platform/keybinding/common/baseResolvedKeybinding", "vs/platform/keyboardLayout/common/keyboardLayout", "vs/platform/quickinput/browser/quickInput", "vs/editor/browser/dnd", "vs/editor/common/languages/enterAction", "vs/editor/common/cursor/cursorTypeOperations", "vs/platform/extensionManagement/common/implicitActivationEvents", "vs/editor/contrib/gotoSymbol/browser/goToSymbol", "vs/platform/terminal/common/terminalPlatformConfiguration", "vs/platform/terminal/common/xterm/shellIntegrationAddon", "vs/platform/theme/common/colors/miscColors", "vs/platform/theme/common/colors/listColors", "vs/editor/contrib/symbolIcons/browser/symbolIcons", "vs/platform/actionWidget/browser/actionList", "vs/editor/contrib/parameterHints/browser/parameterHints", "vs/editor/browser/viewParts/lines/viewLine", "vs/editor/common/services/semanticTokensProviderStyling", "vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/diffEditorViewZones", "vs/editor/contrib/colorPicker/browser/colorHoverParticipant", "vs/editor/contrib/folding/browser/foldingDecorations", "vs/editor/contrib/inlineProgress/browser/inlineProgress", "vs/editor/contrib/links/browser/links", "vs/platform/userDataSync/common/userDataSyncAccount", "vs/editor/contrib/dropOrPasteInto/browser/defaultProviders", "vs/editor/contrib/suggest/browser/suggestModel", "vs/platform/extensionManagement/common/extensionsProfileScannerService", "vs/editor/contrib/gotoSymbol/browser/peek/referencesController", "vs/editor/contrib/gotoSymbol/browser/link/goToDefinitionAtPosition", "vs/editor/contrib/inlayHints/browser/inlayHintsController", "vs/editor/browser/widget/diffEditor/commands", "vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget", "vs/platform/userDataSync/common/abstractSynchronizer", "vs/workbench/browser/parts/editor/breadcrumbs", "vs/workbench/browser/parts/views/viewFilter", "vs/workbench/common/editor/binaryEditorModel", "vs/workbench/common/component", "vs/workbench/browser/parts/notifications/notificationsActions", "vs/workbench/contrib/chat/common/chatWidgetHistoryService", "vs/workbench/contrib/codeEditor/browser/editorLineNumberMenu", "vs/workbench/contrib/comments/browser/commentColors", "vs/workbench/contrib/comments/common/commentCommandIds", "vs/workbench/contrib/comments/browser/commentFormActions", "vs/workbench/contrib/comments/common/commentModel", "vs/workbench/contrib/comments/browser/commentsModel", "vs/workbench/contrib/extensions/common/extensionQuery", "vs/workbench/contrib/interactive/browser/interactiveDocumentService", "vs/workbench/contrib/localHistory/browser/localHistory", "vs/workbench/contrib/markdown/browser/markdownDocumentRenderer", "vs/workbench/contrib/markers/browser/markersFilterOptions", "vs/workbench/contrib/markers/browser/markersViewActions", "vs/workbench/contrib/mergeEditor/browser/model/editing", "vs/workbench/contrib/mergeEditor/browser/model/modifiedBaseRange", "vs/workbench/contrib/mergeEditor/browser/view/editorGutter", "vs/workbench/contrib/mergeEditor/browser/view/editors/codeEditorView", "vs/workbench/contrib/multiDiffEditor/browser/multiDiffSourceResolverService", "vs/workbench/contrib/notebook/browser/diff/diffCellEditorOptions", "vs/workbench/contrib/notebook/common/notebookRendererMessagingService", "vs/workbench/contrib/notebook/common/services/notebookWorkerService", "vs/workbench/contrib/remote/browser/remoteIcons", "vs/workbench/contrib/search/common/searchHistoryService", "vs/workbench/contrib/codeEditor/browser/dictation/editorDictation", "vs/workbench/contrib/tags/common/workspaceTags", "vs/workbench/contrib/terminal/browser/terminalTooltip", "vs/workbench/contrib/terminal/common/terminalEnvironment", "vs/workbench/contrib/terminalContrib/find/common/terminal.find", "vs/workbench/contrib/terminalContrib/typeAhead/common/terminalTypeAheadConfiguration", "vs/workbench/contrib/testing/browser/explorerProjections/testingViewState", "vs/workbench/contrib/testing/browser/codeCoverageDisplayUtils", "vs/workbench/contrib/testing/browser/explorerProjections/testItemContextOverlay", "vs/workbench/contrib/testing/common/testingContinuousRunService", "vs/workbench/contrib/webview/browser/webviewWindowDragMonitor", "vs/workbench/contrib/webview/common/webview", "vs/workbench/contrib/webviewView/browser/webviewViewService", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedInput", "vs/workbench/contrib/welcomeWalkthrough/browser/walkThroughInput", "vs/workbench/browser/parts/editor/editorQuickAccess", "vs/workbench/browser/parts/editor/editorWithViewState", "vs/workbench/common/editor/editorGroupModel", "vs/workbench/contrib/chat/browser/actions/chatClear", "vs/workbench/contrib/search/browser/symbolsQuickAccess", "vs/workbench/contrib/snippets/browser/commands/fileTemplateSnippets", "vs/workbench/services/editor/common/editorGroupFinder", "vs/workbench/contrib/url/browser/trustedDomainService", "vs/workbench/contrib/preferences/browser/preferencesWidgets", "vs/workbench/services/extensions/common/extensionRunningLocation", "vs/workbench/contrib/extensions/electron-sandbox/runtimeExtensionsEditor", "vs/workbench/services/integrity/common/integrity", "vs/workbench/contrib/terminal/browser/xterm/xtermTerminal", "vs/workbench/contrib/interactive/browser/interactiveEditorInput", "vs/workbench/api/browser/mainThreadBulkEdits", "vs/workbench/contrib/notebook/browser/contrib/find/notebookFindWidget", "vs/workbench/contrib/notebook/browser/view/cellParts/cellEditorOptions", "vs/workbench/contrib/replNotebook/browser/replEditorInput", "vs/workbench/contrib/notebook/browser/viewModel/notebookOutlineDataSourceFactory", "vs/workbench/services/preferences/browser/keybindingsEditorModel", "vs/workbench/services/preferences/browser/keybindingsEditorInput", "vs/workbench/browser/parts/titlebar/menubarControl", "vs/workbench/services/preferences/common/preferencesEditorInput", "vs/workbench/services/progress/browser/progressIndicator", "vs/workbench/contrib/codeEditor/browser/quickaccess/gotoSymbolQuickAccess", "vs/workbench/contrib/terminal/common/history", "vs/workbench/services/extensions/common/workspaceContains", "vs/workbench/contrib/inlineChat/browser/inlineChatSession", "vs/workbench/services/themes/common/colorThemeSchema", "vs/workbench/services/themes/common/productIconThemeSchema", "vs/workbench/services/userDataProfile/browser/iconSelectBox", "vs/workbench/contrib/comments/browser/commentReply", "vs/workbench/services/userDataProfile/common/userDataProfileIcons", "vs/workbench/browser/parts/titlebar/windowTitle", "vs/workbench/contrib/chat/browser/chatInputPart", "vs/workbench/contrib/comments/browser/commentsView", "vs/workbench/contrib/debug/browser/breakpointEditorContribution", "vs/workbench/contrib/debug/browser/debugActionViewItems", "vs/workbench/contrib/debug/browser/debugToolBar", "vs/workbench/contrib/debug/browser/variablesView", "vs/workbench/contrib/testing/browser/testCoverageBars", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedService", "vs/workbench/browser/parts/editor/binaryEditor", "vs/workbench/browser/parts/editor/textCodeEditor", "vs/workbench/browser/parts/editor/textDiffEditor", "vs/workbench/services/untitled/common/untitledTextEditorModel", "vs/workbench/browser/parts/editor/editorActions", "vs/workbench/contrib/localHistory/browser/localHistoryCommands", "vs/workbench/api/browser/mainThreadDocuments", "vs/workbench/contrib/notebook/common/notebookEditorModel", "vs/workbench/browser/parts/compositeBarActions", "vs/workbench/browser/panecomposite", "vs/workbench/browser/parts/paneCompositePart", "vs/workbench/contrib/files/browser/views/explorerView", "vs/workbench/contrib/chat/browser/chatAgentHover", "vs/workbench/contrib/chat/browser/chatMarkdownDecorationsRenderer", "vs/workbench/contrib/chat/browser/contrib/chatContextAttachments", "vs/workbench/contrib/extensions/browser/extensionsList", "vs/workbench/contrib/inlineChat/browser/inlineChatWidget", "vs/workbench/contrib/chat/browser/actions/chatQuickInputActions", "vs/workbench/contrib/inlineChat/browser/inlineChatActions", "vs/workbench/contrib/notebook/browser/controller/chat/notebookChatController", "vs/workbench/contrib/notebook/browser/notebookEditor", "vs/workbench/contrib/search/browser/searchWidget", "vs/workbench/contrib/searchEditor/browser/searchEditorInput", "vs/workbench/contrib/terminal/browser/terminalContribExports", "vs/base/browser/ui/progressbar/progressAccessibilitySignal", "vs/base/common/amd", "vs/base/common/parsers", "vs/base/common/ports", "vs/base/common/hotReload", "vs/base/common/ime", "vs/base/common/paging", "vs/base/common/tfIdf", "vs/base/common/codiconsLibrary", "vs/base/common/search", "vs/base/common/console", "vs/base/browser/ui/scrollbar/abstractScrollbar", "vs/base/parts/request/common/request", "vs/css!vs/base/browser/ui/actionbar/actionbar", "vs/css!vs/base/browser/ui/dropdown/dropdown", "vs/css!vs/base/browser/ui/findinput/findInput", "vs/css!vs/base/browser/ui/grid/gridview", "vs/css!vs/base/browser/ui/list/list", "vs/base/browser/ui/list/listPaging", "vs/base/browser/ui/grid/gridview", "vs/base/browser/ui/table/tableWidget", "vs/css!vs/platform/actionWidget/browser/actionWidget", "vs/css!vs/workbench/browser/parts/editor/media/breadcrumbscontrol", "vs/css!vs/workbench/browser/parts/editor/media/singleeditortabscontrol", "vs/css!vs/workbench/browser/parts/notifications/media/notificationsActions", "vs/css!vs/workbench/browser/parts/panel/media/panelpart", "vs/css!vs/workbench/browser/parts/sidebar/media/sidebarpart", "vs/css!vs/workbench/browser/parts/views/media/paneviewlet", "vs/css!vs/workbench/contrib/welcomeGettingStarted/browser/media/gettingStarted", "vs/editor/browser/config/elementSizeObserver", "vs/editor/browser/config/migrateOptions", "vs/editor/browser/widget/diffEditor/components/diffEditorSash", "vs/editor/common/config/diffEditor", "vs/editor/common/core/rgba", "vs/editor/common/commands/surroundSelectionCommand", "vs/editor/common/core/textChange", "vs/editor/common/cursor/cursorAtomicMoveOperations", "vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm", "vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations", "vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence", "vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer", "vs/editor/common/diff/legacyLinesDiffComputer", "vs/editor/browser/view/viewUserInputEvents", "vs/editor/common/languages/linkComputer", "vs/editor/browser/controller/textAreaState", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/combineTextEditInfos", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/brackets", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/parser", "vs/editor/common/model/textModelPart", "vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase", "vs/editor/common/model/textModelText", "vs/editor/common/modelLineProjectionData", "vs/editor/common/services/semanticTokensDto", "vs/editor/common/services/unicodeTextModelHighlighter", "vs/editor/common/model/guidesTextModelPart", "vs/editor/common/tokens/contiguousTokensEditing", "vs/editor/common/viewLayout/linePart", "vs/editor/common/viewModel/overviewZoneManager", "vs/editor/contrib/comment/browser/blockCommentCommand", "vs/editor/contrib/comment/browser/lineCommentCommand", "vs/editor/contrib/find/browser/replacePattern", "vs/editor/contrib/folding/browser/foldingModel", "vs/editor/contrib/folding/browser/indentRangeProvider", "vs/editor/contrib/format/browser/formattingEdit", "vs/editor/contrib/indentation/common/indentUtils", "vs/editor/contrib/smartSelect/browser/bracketSelections", "vs/editor/contrib/inlineCompletions/browser/provideInlineCompletions", "vs/editor/contrib/stickyScroll/browser/stickyScrollElement", "vs/base/browser/ui/splitview/paneview", "vs/base/browser/ui/dialog/dialog", "vs/base/browser/ui/findinput/findInputToggles", "vs/base/browser/ui/tree/dataTree", "vs/editor/browser/widget/diffEditor/features/movedBlocksLinesFeature", "vs/editor/browser/widget/multiDiffEditor/utils", "vs/editor/common/model/textModelTokens", "vs/editor/common/viewModel/minimapTokensColorTracker", "vs/editor/contrib/suggest/browser/completionModel", "vs/platform/extensionManagement/common/configRemotes", "vs/platform/extensionManagement/common/extensionNls", "vs/platform/checksum/common/checksumService", "vs/editor/contrib/codelens/browser/codelens", "vs/editor/contrib/semanticTokens/common/getSemanticTokens", "vs/editor/contrib/inlineEdits/browser/consts", "vs/editor/browser/viewParts/margin/margin", "vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/renderLines", "vs/editor/common/viewModel/viewModelDecorations", "vs/editor/contrib/inlineCompletions/browser/ghostTextWidget", "vs/editor/contrib/suggest/browser/wordDistance", "vs/platform/extensions/common/extensionHostStarter", "vs/platform/externalTerminal/common/externalTerminal", "vs/platform/files/common/inMemoryFilesystemProvider", "vs/platform/files/common/diskFileSystemProviderClient", "vs/platform/instantiation/common/instantiationService", "vs/editor/contrib/hover/browser/contentHoverStatusBar", "vs/editor/contrib/hover/browser/contentHoverWidget", "vs/platform/contextview/browser/contextViewService", "vs/platform/layout/browser/zIndexRegistry", "vs/platform/lifecycle/common/lifecycle", "vs/platform/log/common/logIpc", "vs/platform/log/common/logService", "vs/editor/contrib/gotoError/browser/markerNavigationService", "vs/platform/menubar/electron-sandbox/menubar", "vs/editor/contrib/dropOrPasteInto/browser/postEditWidget", "vs/platform/observable/common/wrapInReloadableClass", "vs/platform/quickinput/browser/quickInputUtils", "vs/editor/browser/services/webWorker", "vs/editor/contrib/colorPicker/browser/defaultDocumentColorProvider", "vs/editor/contrib/colorPicker/browser/color", "vs/editor/contrib/suggest/browser/suggestWidgetDetails", "vs/platform/configuration/common/configurations", "vs/editor/contrib/toggleTabFocusMode/browser/toggleTabFocusMode", "vs/platform/remote/common/sharedProcessTunnelService", "vs/platform/remoteTunnel/common/remoteTunnel", "vs/platform/storage/common/storageIpc", "vs/platform/telemetry/common/commonProperties", "vs/editor/browser/widget/diffEditor/features/hideUnchangedRegionsFeature", "vs/editor/contrib/codeAction/browser/codeActionModel", "vs/editor/contrib/hover/browser/getHover", "vs/editor/contrib/indentation/browser/indentation", "vs/editor/contrib/linesOperations/browser/linesOperations", "vs/editor/contrib/smartSelect/browser/smartSelect", "vs/editor/contrib/unusualLineTerminators/browser/unusualLineTerminators", "vs/editor/contrib/wordOperations/browser/wordOperations", "vs/editor/contrib/format/browser/formatActions", "vs/platform/accessibilitySignal/browser/progressAccessibilitySignalScheduler", "vs/platform/profiling/electron-sandbox/profileAnalysisWorkerService", "vs/platform/terminal/common/capabilities/commandDetectionCapability", "vs/platform/terminal/common/environmentVariable", "vs/platform/terminal/common/environmentVariableCollection", "vs/platform/theme/common/colors/inputColors", "vs/platform/theme/common/colors/minimapColors", "vs/platform/theme/common/colors/chartsColors", "vs/platform/actionWidget/browser/actionWidget", "vs/editor/browser/widget/diffEditor/components/accessibleDiffViewer", "vs/platform/theme/browser/iconsStyleSheet", "vs/editor/browser/controller/mouseTarget", "vs/editor/browser/widget/diffEditor/features/overviewRulerFeature", "vs/editor/browser/viewParts/lineNumbers/lineNumbers", "vs/editor/contrib/quickAccess/browser/editorNavigationQuickAccess", "vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess", "vs/editor/contrib/quickAccess/browser/gotoSymbolQuickAccess", "vs/editor/contrib/semanticTokens/browser/viewportSemanticTokens", "vs/editor/browser/widget/diffEditor/diffEditorOptions", "vs/editor/browser/widget/multiDiffEditor/multiDiffEditorViewModel", "vs/editor/contrib/bracketMatching/browser/bracketMatching", "vs/editor/contrib/codeAction/browser/lightBulbWidget", "vs/editor/contrib/dnd/browser/dnd", "vs/editor/contrib/find/browser/findDecorations", "vs/editor/contrib/wordHighlighter/browser/highlightDecorations", "vs/platform/userDataSync/common/content", "vs/platform/userDataSync/common/settingsMerge", "vs/platform/workspace/common/canonicalUri", "vs/editor/contrib/snippet/browser/snippetVariables", "vs/editor/contrib/snippet/browser/snippetSession", "vs/editor/contrib/codelens/browser/codelensController", "vs/editor/contrib/multicursor/browser/multicursor", "vs/editor/contrib/suggest/browser/suggestMemory", "vs/editor/contrib/inlayHints/browser/inlayHintsLocations", "vs/editor/contrib/inlayHints/browser/inlayHintsHover", "vs/editor/contrib/stickyScroll/browser/stickyScrollController", "vs/editor/contrib/suggest/browser/suggestWidgetStatus", "vs/editor/contrib/suggest/browser/suggestWidget", "vs/platform/actions/browser/floatingMenu", "vs/platform/actions/common/menuService", "vs/editor/browser/widget/multiDiffEditor/diffEditorItemTemplate", "vs/editor/contrib/inlineEdit/browser/inlineEditController", "vs/editor/contrib/inlineEdits/browser/inlineEditsWidget", "vs/editor/contrib/inlineEdits/browser/inlineEditsController", "vs/platform/quickinput/browser/commandsQuickAccess", "vs/platform/quickinput/browser/quickPickPin", "vs/platform/userDataProfile/common/userDataProfileIpc", "vs/workbench/api/common/shared/dataTransferCache", "vs/workbench/browser/parts/notifications/notificationsTelemetry", "vs/workbench/common/editor/diffEditorModel", "vs/workbench/common/editor/filteredEditorGroupModel", "vs/workbench/common/editor/textDiffEditorModel", "vs/workbench/browser/composite", "vs/workbench/browser/parts/notifications/notificationsList", "vs/workbench/contrib/chat/browser/chatFollowups", "vs/workbench/contrib/chat/browser/chatContentParts/chatProgressContentPart", "vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget", "vs/workbench/contrib/comments/browser/commentGlyphWidget", "vs/workbench/contrib/comments/browser/comments", "vs/workbench/contrib/comments/browser/commentsFilterOptions", "vs/workbench/contrib/comments/browser/timestamp", "vs/workbench/contrib/debug/common/debugContext", "vs/workbench/contrib/extensions/common/extensionsFileTemplate", "vs/workbench/contrib/files/browser/explorerFileContrib", "vs/workbench/contrib/inlineChat/browser/inlineChatSavingService", "vs/workbench/contrib/inlineChat/browser/utils", "vs/workbench/contrib/issue/electron-sandbox/issueMainService", "vs/workbench/contrib/localHistory/browser/localHistoryFileSystemProvider", "vs/workbench/contrib/mergeEditor/browser/model/rangeUtils", "vs/workbench/contrib/notebook/browser/diff/eventDispatcher", "vs/workbench/contrib/notebook/browser/view/cellParts/cellToolbarStickyScroll", "vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/notebookVisibleCellObserver", "vs/workbench/contrib/preferences/browser/settingsLayout", "vs/workbench/contrib/scm/browser/scmRepositoryRenderer", "vs/workbench/contrib/search/browser/patternInputWidget", "vs/workbench/contrib/search/common/notebookSearch", "vs/workbench/contrib/share/common/share", "vs/workbench/contrib/snippets/browser/snippetCompletionProvider", "vs/workbench/contrib/snippets/browser/snippetPicker", "vs/workbench/contrib/snippets/browser/commands/surroundWithSnippet", "vs/workbench/contrib/chat/common/voiceChatService", "vs/workbench/contrib/splash/browser/splash", "vs/workbench/contrib/tasks/common/taskSystem", "vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy", "vs/workbench/contrib/terminal/browser/widgets/widgetManager", "vs/workbench/contrib/terminal/browser/xterm/decorationStyles", "vs/workbench/contrib/terminal/common/basePty", "vs/workbench/contrib/terminalContrib/chat/common/terminalInitialHintConfiguration", "vs/workbench/contrib/terminalContrib/developer/common/terminal.developer", "vs/workbench/contrib/terminalContrib/links/common/terminal.links", "vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollColorRegistry", "vs/workbench/contrib/terminalContrib/suggest/common/terminal.suggest", "vs/workbench/contrib/terminal/browser/detachedTerminal", "vs/workbench/contrib/terminalContrib/zoom/common/terminal.zoom", "vs/workbench/contrib/testing/browser/theme", "vs/workbench/contrib/testing/common/testingDecorations", "vs/workbench/contrib/testing/common/getComputedState", "vs/workbench/contrib/testing/common/testResultStorage", "vs/workbench/contrib/update/common/update", "vs/workbench/contrib/url/common/urlGlob", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedIcons", "vs/workbench/contrib/welcomeViews/common/viewsWelcomeExtensionPoint", "vs/workbench/contrib/welcomeWalkthrough/common/walkThroughContentProvider", "vs/workbench/contrib/workspace/common/workspace", "vs/workbench/services/aiEmbeddingVector/common/aiEmbeddingVectorService", "vs/workbench/services/configuration/common/configurationModels", "vs/workbench/services/configurationResolver/common/configurationResolverSchema", "vs/workbench/services/configurationResolver/common/configurationResolverUtils", "vs/workbench/services/configurationResolver/common/variableResolver", "vs/workbench/services/editor/common/editorPaneService", "vs/workbench/contrib/debug/common/debugContentProvider", "vs/workbench/contrib/multiDiffEditor/browser/scmMultiDiffSourceResolver", "vs/workbench/contrib/terminal/browser/terminalQuickAccess", "vs/workbench/contrib/webview/browser/webview.contribution", "vs/workbench/contrib/preferences/browser/keybindingWidgets", "vs/workbench/contrib/webview/browser/webviewElement", "vs/workbench/contrib/extensions/electron-sandbox/extensionsSlowActions", "vs/workbench/contrib/chat/common/languageModelStats", "vs/workbench/services/extensionManagement/common/extensionManagementChannelClient", "vs/workbench/contrib/extensions/browser/abstractRuntimeExtensionsEditor", "vs/workbench/contrib/scm/browser/scmViewService", "vs/workbench/contrib/welcomeWalkthrough/browser/walkThroughPart", "vs/workbench/contrib/debug/common/debugSchemas", "vs/workbench/contrib/tasks/common/jsonSchemaCommon", "vs/workbench/contrib/tasks/common/problemCollectors", "vs/workbench/contrib/tasks/browser/taskQuickPick", "vs/workbench/contrib/tasks/common/taskConfiguration", "vs/workbench/contrib/tasks/browser/terminalTaskSystem", "vs/workbench/contrib/terminal/common/terminalExtensionPoints", "vs/workbench/services/actions/common/menusExtensionPoint", "vs/workbench/api/browser/mainThreadEditor", "vs/workbench/services/extensions/common/rpcProtocol", "vs/workbench/services/extensions/common/extensionHostManager", "vs/workbench/services/extensions/electron-sandbox/extensionHostProfiler", "vs/workbench/common/editor/resourceEditorInput", "vs/workbench/services/keybinding/browser/unboundCommands", "vs/workbench/services/keybinding/common/windowsKeyboardMapper", "vs/workbench/services/keybinding/electron-sandbox/nativeKeyboardLayoutService", "vs/workbench/common/editor/textResourceEditorModel", "vs/workbench/contrib/extensions/common/extensionsUtils", "vs/workbench/contrib/format/browser/formatActionsMultiple", "vs/workbench/contrib/webviewPanel/browser/webviewEditorInputSerializer", "vs/workbench/services/driver/browser/driver", "vs/workbench/browser/window", "vs/workbench/services/extensionManagement/browser/extensionBisect", "vs/workbench/services/extensions/browser/extensionUrlHandler", "vs/workbench/api/common/extHostTypeConverters", "vs/workbench/contrib/notebook/browser/contrib/clipboard/cellOutputClipboard", "vs/workbench/contrib/notebook/browser/contrib/find/findFilters", "vs/workbench/contrib/notebook/browser/contrib/find/notebookFindReplaceWidget", "vs/workbench/contrib/notebook/browser/viewModel/cellOutputViewModel", "vs/workbench/contrib/notebook/browser/viewModel/foldingModel", "vs/workbench/contrib/notebook/browser/viewModel/notebookOutlineEntryFactory", "vs/workbench/contrib/notebook/common/model/notebookCellOutputTextModel", "vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPreview", "vs/workbench/contrib/notebook/browser/contrib/find/findMatchDecorationModel", "vs/workbench/contrib/notebook/browser/controller/cellOutputActions", "vs/workbench/contrib/notebook/browser/controller/insertCellActions", "vs/workbench/contrib/notebook/browser/view/cellParts/cellDnd", "vs/workbench/contrib/notebook/common/notebookDiffEditorInput", "vs/workbench/contrib/notebook/common/notebookProvider", "vs/workbench/contrib/logs/common/logsActions", "vs/workbench/contrib/output/common/outputChannelModelService", "vs/workbench/browser/parts/auxiliarybar/auxiliaryBarActions", "vs/workbench/contrib/notebook/browser/viewParts/notebookKernelQuickPickStrategy", "vs/workbench/contrib/notebook/browser/viewParts/notebookKernelView", "vs/workbench/services/preferences/common/preferencesValidation", "vs/workbench/contrib/chat/browser/actions/chatAccessibilityHelp", "vs/workbench/contrib/terminal/common/terminalConfiguration", "vs/workbench/services/dialogs/browser/simpleFileDialog", "vs/workbench/services/search/common/searchExtTypes", "vs/workbench/contrib/search/browser/searchMessage", "vs/workbench/contrib/search/common/searchNotebookHelpers", "vs/workbench/contrib/search/browser/notebookSearch/searchNotebookHelpers", "vs/workbench/services/search/common/searchHelpers", "vs/workbench/api/browser/statusBarExtensionPoint", "vs/workbench/contrib/terminal/browser/baseTerminalBackend", "vs/workbench/services/terminal/common/embedderTerminalService", "vs/workbench/services/textMate/common/TMGrammars", "vs/workbench/services/textMate/common/TMHelper", "vs/workbench/browser/parts/editor/breadcrumbsControl", "vs/workbench/contrib/debug/browser/callStackWidget", "vs/workbench/contrib/debug/browser/disassemblyView", "vs/workbench/contrib/files/browser/editors/textFileSaveErrorHandler", "vs/workbench/contrib/multiDiffEditor/browser/multiDiffEditor", "vs/workbench/contrib/scm/browser/dirtydiffDecorator", "vs/workbench/contrib/format/browser/formatModified", "vs/workbench/contrib/tags/electron-sandbox/workspaceTags", "vs/workbench/services/themes/common/hostColorSchemeService", "vs/workbench/contrib/welcomeGettingStarted/common/gettingStartedContent", "vs/workbench/services/themes/browser/fileIconThemeData", "vs/workbench/services/themes/browser/productIconThemeData", "vs/workbench/services/themes/common/themeConfiguration", "vs/workbench/contrib/performance/browser/perfviewEditor", "vs/workbench/contrib/inlineChat/browser/inlineChatSessionServiceImpl", "vs/workbench/services/userActivity/common/userActivityRegistry", "vs/workbench/contrib/preferences/browser/settingsTree", "vs/workbench/contrib/snippets/browser/snippetsService", "vs/workbench/contrib/comments/browser/commentThreadWidget", "vs/workbench/contrib/comments/browser/commentsAccessibility", "vs/workbench/contrib/accessibility/browser/editorAccessibilityHelp", "vs/workbench/services/keybinding/common/keybindingEditing", "vs/workbench/services/userDataProfile/browser/extensionsResource", "vs/workbench/services/utilityProcess/electron-sandbox/utilityProcessWorkerWorkbenchService", "vs/workbench/browser/parts/panel/panelActions", "vs/workbench/contrib/debug/browser/debugEditorContribution", "vs/workbench/contrib/tasks/browser/abstractTaskService", "vs/workbench/contrib/testing/browser/testExplorerActions", "vs/workbench/contrib/testing/browser/testingProgressUiService", "vs/workbench/services/workingCopy/common/resourceWorkingCopy", "vs/workbench/contrib/welcomeGettingStarted/browser/startupPage", "vs/workbench/services/workingCopy/common/abstractFileWorkingCopyManager", "vs/workbench/services/workingCopy/common/workingCopyBackupService", "vs/workbench/api/browser/mainThreadEditors", "vs/workbench/browser/parts/editor/editorPlaceholder", "vs/workbench/browser/parts/editor/binaryDiffEditor", "vs/workbench/browser/parts/editor/editorStatus", "vs/workbench/browser/parts/editor/diffEditorCommands", "vs/workbench/browser/parts/editor/textResourceEditor", "vs/workbench/contrib/codeEditor/browser/emptyTextEditorHint/emptyTextEditorHint", "vs/workbench/contrib/multiDiffEditor/browser/multiDiffEditor.contribution", "vs/workbench/contrib/output/browser/outputView", "vs/workbench/services/textfile/common/textFileEditorModel", "vs/workbench/services/userDataProfile/browser/keybindingsResource", "vs/workbench/services/userDataProfile/browser/settingsResource", "vs/workbench/services/userDataProfile/browser/snippetsResource", "vs/workbench/services/userDataProfile/browser/tasksResource", "vs/workbench/services/workingCopy/common/untitledFileWorkingCopy", "vs/workbench/contrib/notebook/browser/contrib/saveParticipants/saveParticipants", "vs/workbench/browser/parts/editor/multiEditorTabsControl", "vs/workbench/browser/parts/editor/editorGroupView", "vs/workbench/browser/parts/editor/editorPart", "vs/workbench/browser/parts/globalCompositeBar", "vs/workbench/browser/parts/paneCompositeBar", "vs/workbench/browser/parts/auxiliarybar/auxiliaryBarPart", "vs/workbench/browser/parts/panel/panelPart", "vs/workbench/browser/parts/sidebar/sidebarPart", "vs/workbench/browser/parts/views/viewsViewlet", "vs/workbench/contrib/debug/browser/welcomeView", "vs/workbench/contrib/debug/browser/debugViewlet", "vs/workbench/contrib/files/browser/fileImportExport", "vs/workbench/contrib/files/browser/views/explorerViewer", "vs/workbench/contrib/chat/browser/chatContentParts/chatReferencesContentPart", "vs/workbench/contrib/files/browser/views/openEditorsView", "vs/workbench/contrib/files/browser/fileActions.contribution", "vs/workbench/contrib/terminal/browser/terminalView", "vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollContribution", "vs/workbench/electron-sandbox/window", "vs/workbench/services/views/browser/viewsService", "vs/workbench/services/workspaces/common/workspaceIdentityService", "vs/workbench/electron-sandbox/desktop.main", "vs/workbench/contrib/extensions/browser/extensionsWidgets", "vs/workbench/contrib/extensions/browser/extensionsViews", "vs/workbench/contrib/extensions/browser/extensionsViewlet", "vs/workbench/contrib/notebook/browser/contrib/navigation/arrow", "vs/workbench/contrib/notebook/browser/controller/editActions", "vs/workbench/contrib/notebook/browser/contrib/outline/notebookOutline", "vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel", "vs/workbench/contrib/notebook/browser/contrib/cellDiagnostics/cellDiagnosticsActions", "vs/workbench/contrib/notebook/browser/view/cellParts/cellContextKeys", "vs/workbench/contrib/notebook/browser/view/notebookCellList", "vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView", "vs/workbench/contrib/notebook/browser/diff/notebookDiffEditor", "vs/workbench/contrib/replNotebook/browser/replEditor", "vs/workbench/contrib/replNotebook/browser/repl.contribution", "vs/workbench/contrib/search/browser/anythingQuickAccess", "vs/workbench/contrib/search/browser/searchActionsFind", "vs/workbench/contrib/searchEditor/browser/searchEditorActions", "vs/workbench/contrib/search/browser/quickTextSearch/textSearchQuickAccess", "vs/workbench/contrib/chat/electron-sandbox/actions/voiceChatActions", "vs/workbench/services/extensions/common/extensionRunningLocationTracker", "vs/base/browser/deviceAccess", "vs/base/browser/ui/list/splice", "vs/base/common/diff/diffChange", "vs/base/common/jsonSchema", "vs/base/common/naturalLanguage/korean", "vs/base/common/navigator", "vs/base/common/observableInternal/lazyObservableValue", "vs/base/common/observableInternal/api", "vs/base/browser/ui/list/rangeMap", "vs/base/common/skipList", "vs/base/browser/broadcast", "vs/base/common/observableInternal/promise", "vs/base/browser/domObservable", "vs/base/browser/ui/list/rowCache", "vs/base/browser/ui/scrollbar/scrollbarVisibilityController", "vs/base/browser/ui/selectBox/selectBoxNative", "vs/base/browser/ui/tree/compressedObjectTreeModel", "vs/base/browser/ui/scrollbar/horizontalScrollbar", "vs/base/browser/ui/scrollbar/verticalScrollbar", "vs/base/common/verifier", "vs/base/parts/contextmenu/common/contextmenu", "vs/base/parts/ipc/common/ipc.electron", "vs/base/parts/request/browser/request", "vs/base/parts/contextmenu/electron-sandbox/contextmenu", "vs/base/parts/ipc/electron-sandbox/ipc.electron", "vs/css!vs/base/browser/ui/aria/aria", "vs/css!vs/base/browser/ui/breadcrumbs/breadcrumbsWidget", "vs/css!vs/base/browser/ui/button/button", "vs/css!vs/base/browser/ui/codicons/codicon/codicon", "vs/css!vs/base/browser/ui/codicons/codicon/codicon-modifiers", "vs/css!vs/base/browser/ui/contextview/contextview", "vs/css!vs/base/browser/ui/countBadge/countBadge", "vs/css!vs/base/browser/ui/dialog/dialog", "vs/css!vs/base/browser/ui/hover/hoverWidget", "vs/css!vs/base/browser/ui/iconLabel/iconlabel", "vs/css!vs/base/browser/ui/icons/iconSelectBox", "vs/css!vs/base/browser/ui/inputbox/inputBox", "vs/css!vs/base/browser/ui/keybindingLabel/keybindingLabel", "vs/css!vs/base/browser/ui/menu/menubar", "vs/css!vs/base/browser/ui/mouseCursor/mouseCursor", "vs/css!vs/base/browser/ui/progressbar/progressbar", "vs/css!vs/base/browser/ui/radio/radio", "vs/css!vs/base/browser/ui/sash/sash", "vs/css!vs/base/browser/ui/scrollbar/media/scrollbars", "vs/base/browser/ui/breadcrumbs/breadcrumbsWidget", "vs/css!vs/base/browser/ui/selectBox/selectBox", "vs/css!vs/base/browser/ui/selectBox/selectBoxCustom", "vs/css!vs/base/browser/ui/splitview/paneview", "vs/css!vs/base/browser/ui/splitview/splitview", "vs/base/browser/ui/centered/centeredViewLayout", "vs/css!vs/base/browser/ui/table/table", "vs/css!vs/base/browser/ui/toggle/toggle", "vs/css!vs/base/browser/ui/toolbar/toolbar", "vs/css!vs/base/browser/ui/tree/media/tree", "vs/css!vs/editor/browser/controller/textAreaHandler", "vs/css!vs/editor/browser/services/hoverService/hover", "vs/css!vs/editor/browser/viewParts/blockDecorations/blockDecorations", "vs/css!vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight", "vs/css!vs/editor/browser/viewParts/decorations/decorations", "vs/css!vs/editor/browser/viewParts/glyphMargin/glyphMargin", "vs/css!vs/editor/browser/viewParts/indentGuides/indentGuides", "vs/css!vs/editor/browser/viewParts/lineNumbers/lineNumbers", "vs/css!vs/editor/browser/viewParts/lines/viewLines", "vs/css!vs/editor/browser/viewParts/linesDecorations/linesDecorations", "vs/css!vs/editor/browser/viewParts/margin/margin", "vs/css!vs/editor/browser/viewParts/marginDecorations/marginDecorations", "vs/css!vs/editor/browser/viewParts/minimap/minimap", "vs/css!vs/editor/browser/viewParts/overlayWidgets/overlayWidgets", "vs/css!vs/editor/browser/viewParts/rulers/rulers", "vs/css!vs/editor/browser/viewParts/scrollDecoration/scrollDecoration", "vs/css!vs/editor/browser/viewParts/selections/selections", "vs/css!vs/editor/browser/viewParts/viewCursors/viewCursors", "vs/css!vs/editor/browser/viewParts/whitespace/whitespace", "vs/css!vs/editor/browser/widget/codeEditor/editor", "vs/css!vs/editor/browser/widget/diffEditor/components/accessibleDiffViewer", "vs/css!vs/editor/browser/widget/diffEditor/style", "vs/css!vs/editor/browser/widget/markdownRenderer/browser/renderedMarkdown", "vs/css!vs/editor/browser/widget/multiDiffEditor/style", "vs/css!vs/editor/contrib/anchorSelect/browser/anchorSelect", "vs/css!vs/editor/contrib/bracketMatching/browser/bracketMatching", "vs/css!vs/editor/contrib/codeAction/browser/lightBulbWidget", "vs/css!vs/editor/contrib/codelens/browser/codelensWidget", "vs/css!vs/editor/contrib/dnd/browser/dnd", "vs/css!vs/editor/contrib/dropOrPasteInto/browser/postEditWidget", "vs/css!vs/editor/contrib/find/browser/findOptionsWidget", "vs/css!vs/editor/contrib/find/browser/findWidget", "vs/css!vs/editor/contrib/folding/browser/folding", "vs/css!vs/editor/contrib/gotoError/browser/media/gotoErrorWidget", "vs/css!vs/editor/contrib/gotoSymbol/browser/link/goToDefinitionAtPosition", "vs/css!vs/editor/contrib/gotoSymbol/browser/peek/referencesWidget", "vs/css!vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace", "vs/css!vs/editor/contrib/inlineCompletions/browser/ghostText", "vs/css!vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget", "vs/css!vs/editor/contrib/inlineEdit/browser/inlineEdit", "vs/css!vs/editor/contrib/inlineEdit/browser/inlineEditHintsWidget", "vs/css!vs/editor/contrib/inlineEdit/browser/inlineEditSideBySideWidget", "vs/css!vs/editor/contrib/inlineEdits/browser/inlineEditsWidget", "vs/css!vs/editor/contrib/inlineProgress/browser/inlineProgressWidget", "vs/css!vs/editor/contrib/linkedEditing/browser/linkedEditing", "vs/css!vs/editor/contrib/links/browser/links", "vs/css!vs/editor/contrib/message/browser/messageController", "vs/css!vs/editor/contrib/parameterHints/browser/parameterHints", "vs/css!vs/editor/contrib/peekView/browser/media/peekViewWidget", "vs/css!vs/editor/contrib/placeholderText/browser/placeholderText", "vs/css!vs/editor/contrib/rename/browser/renameWidget", "vs/css!vs/editor/contrib/snippet/browser/snippetSession", "vs/css!vs/editor/contrib/stickyScroll/browser/stickyScroll", "vs/css!vs/editor/contrib/suggest/browser/media/suggest", "vs/css!vs/editor/contrib/symbolIcons/browser/symbolIcons", "vs/css!vs/editor/contrib/unicodeHighlighter/browser/bannerController", "vs/css!vs/editor/contrib/unicodeHighlighter/browser/unicodeHighlighter", "vs/css!vs/editor/contrib/wordHighlighter/browser/highlightDecorations", "vs/css!vs/editor/contrib/zoneWidget/browser/zoneWidget", "vs/css!vs/platform/actions/browser/menuEntryActionViewItem", "vs/css!vs/platform/opener/browser/link", "vs/css!vs/platform/severityIcon/browser/media/severityIcon", "vs/css!vs/workbench/browser/actions/media/actions", "vs/css!vs/workbench/browser/media/part", "vs/css!vs/workbench/browser/media/style", "vs/css!vs/workbench/browser/parts/activitybar/media/activityaction", "vs/css!vs/workbench/browser/parts/activitybar/media/activitybarpart", "vs/css!vs/workbench/browser/parts/auxiliarybar/media/auxiliaryBarPart", "vs/css!vs/workbench/browser/parts/banner/media/bannerpart", "vs/css!vs/workbench/browser/parts/editor/media/editordroptarget", "vs/css!vs/workbench/browser/parts/editor/media/editorgroupview", "vs/css!vs/workbench/browser/parts/editor/media/editorplaceholder", "vs/css!vs/workbench/browser/parts/editor/media/editorquickaccess", "vs/css!vs/workbench/browser/parts/editor/media/editorstatus", "vs/css!vs/workbench/browser/parts/editor/media/editortabscontrol", "vs/css!vs/workbench/browser/parts/editor/media/editortitlecontrol", "vs/css!vs/workbench/browser/parts/editor/media/multieditortabscontrol", "vs/css!vs/workbench/browser/parts/editor/media/sidebysideeditor", "vs/css!vs/workbench/browser/parts/media/compositepart", "vs/css!vs/workbench/browser/parts/media/paneCompositePart", "vs/css!vs/workbench/browser/parts/notifications/media/notificationsCenter", "vs/css!vs/workbench/browser/parts/notifications/media/notificationsList", "vs/css!vs/workbench/browser/parts/notifications/media/notificationsToasts", "vs/css!vs/workbench/browser/parts/statusbar/media/statusbarpart", "vs/css!vs/workbench/browser/parts/titlebar/media/menubarControl", "vs/css!vs/workbench/browser/parts/titlebar/media/titlebarpart", "vs/css!vs/workbench/browser/parts/views/media/views", "vs/css!vs/workbench/contrib/bulkEdit/browser/preview/bulkEdit", "vs/css!vs/workbench/contrib/callHierarchy/browser/media/callHierarchy", "vs/css!vs/workbench/contrib/chat/browser/chatContentParts/media/chatConfirmationWidget", "vs/css!vs/workbench/contrib/chat/browser/codeBlockPart", "vs/css!vs/workbench/contrib/chat/browser/contrib/media/editorHoverWrapper", "vs/css!vs/workbench/contrib/chat/browser/media/chat", "vs/css!vs/workbench/contrib/chat/browser/media/chatAgentHover", "vs/css!vs/workbench/contrib/chat/electron-sandbox/actions/media/voiceChatActions", "vs/css!vs/workbench/contrib/codeEditor/browser/accessibility/accessibility", "vs/css!vs/workbench/contrib/codeEditor/browser/dictation/editorDictation", "vs/css!vs/workbench/contrib/codeEditor/browser/emptyTextEditorHint/emptyTextEditorHint", "vs/css!vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget", "vs/css!vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens", "vs/css!vs/workbench/contrib/codeEditor/browser/outline/documentSymbolsTree", "vs/css!vs/workbench/contrib/codeEditor/browser/suggestEnabledInput/suggestEnabledInput", "vs/css!vs/workbench/contrib/comments/browser/media/panel", "vs/css!vs/workbench/contrib/customEditor/browser/media/customEditor", "vs/css!vs/workbench/contrib/debug/browser/media/breakpointWidget", "vs/css!vs/workbench/contrib/debug/browser/media/callStackEditorContribution", "vs/css!vs/workbench/contrib/debug/browser/media/callStackWidget", "vs/css!vs/workbench/contrib/debug/browser/media/debug.contribution", "vs/css!vs/workbench/contrib/debug/browser/media/debugHover", "vs/css!vs/workbench/contrib/debug/browser/media/debugToolBar", "vs/css!vs/workbench/contrib/debug/browser/media/debugViewlet", "vs/css!vs/workbench/contrib/debug/browser/media/exceptionWidget", "vs/css!vs/workbench/contrib/debug/browser/media/repl", "vs/css!vs/workbench/contrib/extensions/browser/media/extension", "vs/css!vs/workbench/contrib/extensions/browser/media/extensionActions", "vs/css!vs/workbench/contrib/extensions/browser/media/extensionEditor", "vs/css!vs/workbench/contrib/extensions/browser/media/extensionsViewlet", "vs/css!vs/workbench/contrib/extensions/browser/media/extensionsWidgets", "vs/css!vs/workbench/contrib/extensions/browser/media/runtimeExtensionsEditor", "vs/css!vs/workbench/contrib/files/browser/media/explorerviewlet", "vs/css!vs/workbench/contrib/files/browser/views/media/openeditors", "vs/css!vs/workbench/contrib/inlineChat/browser/media/inlineChat", "vs/css!vs/workbench/contrib/inlineChat/browser/media/inlineChatContentWidget", "vs/css!vs/workbench/contrib/interactive/browser/interactiveEditor", "vs/css!vs/workbench/contrib/interactive/browser/media/interactive", "vs/css!vs/workbench/contrib/issue/electron-sandbox/media/newIssueReporter", "vs/css!vs/workbench/contrib/languageStatus/browser/media/languageStatus", "vs/css!vs/workbench/contrib/markers/browser/markersViewActions", "vs/css!vs/workbench/contrib/markers/browser/media/markers", "vs/css!vs/workbench/contrib/mergeEditor/browser/view/media/mergeEditor", "vs/css!vs/workbench/contrib/notebook/browser/contrib/find/media/notebookFind", "vs/css!vs/workbench/contrib/notebook/browser/contrib/find/notebookFindReplaceWidget", "vs/css!vs/workbench/contrib/notebook/browser/diff/notebookDiff", "vs/css!vs/workbench/contrib/notebook/browser/media/notebook", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookCellChat", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookCellEditorHint", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookCellInsertToolbar", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookCellOutput", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookCellStatusBar", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookCellTitleToolbar", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookDnd", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookEditorStickyScroll", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookFocusIndicator", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookFolding", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookKernelActionViewItem", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookOutline", "vs/css!vs/workbench/contrib/notebook/browser/media/notebookToolbar", "vs/css!vs/workbench/contrib/outline/browser/outlinePane", "vs/css!vs/workbench/contrib/output/browser/output", "vs/css!vs/workbench/contrib/preferences/browser/media/keybindings", "vs/css!vs/workbench/contrib/preferences/browser/media/keybindingsEditor", "vs/css!vs/workbench/contrib/preferences/browser/media/preferences", "vs/css!vs/workbench/contrib/preferences/browser/media/settingsEditor2", "vs/css!vs/workbench/contrib/preferences/browser/media/settingsWidgets", "vs/css!vs/workbench/contrib/remote/browser/media/remoteViewlet", "vs/css!vs/workbench/contrib/remote/browser/media/tunnelView", "vs/css!vs/workbench/contrib/replNotebook/browser/interactiveEditor", "vs/css!vs/workbench/contrib/replNotebook/browser/media/interactive", "vs/css!vs/workbench/contrib/scm/browser/media/dirtydiffDecorator", "vs/css!vs/workbench/contrib/search/browser/media/anythingQuickAccess", "vs/css!vs/workbench/contrib/search/browser/media/searchview", "vs/css!vs/workbench/contrib/share/browser/share", "vs/css!vs/workbench/contrib/terminal/browser/media/terminal", "vs/css!vs/workbench/contrib/terminal/browser/media/terminalVoice", "vs/css!vs/workbench/contrib/terminal/browser/media/widgets", "vs/css!vs/workbench/contrib/terminal/browser/media/xterm", "vs/css!vs/workbench/contrib/terminalContrib/chat/browser/media/terminalChatWidget", "vs/css!vs/workbench/contrib/terminalContrib/chat/browser/media/terminalInitialHint", "vs/css!vs/workbench/contrib/terminalContrib/developer/browser/media/developer", "vs/css!vs/workbench/contrib/terminalContrib/find/browser/media/terminalFind", "vs/css!vs/workbench/contrib/terminalContrib/quickFix/browser/media/terminalQuickFix", "vs/css!vs/workbench/contrib/testing/browser/media/testMessageColorizer", "vs/css!vs/workbench/contrib/testing/browser/media/testing", "vs/css!vs/workbench/contrib/testing/browser/testResultsView/testResultsViewContent", "vs/css!vs/workbench/contrib/timeline/browser/media/timelinePane", "vs/css!vs/workbench/contrib/typeHierarchy/browser/media/typeHierarchy", "vs/css!vs/workbench/contrib/update/browser/media/releasenoteseditor", "vs/css!vs/workbench/contrib/userDataProfile/browser/media/userDataProfilesEditor", "vs/css!vs/workbench/contrib/welcomeWalkthrough/browser/media/walkThroughPart", "vs/css!vs/workbench/contrib/workspace/browser/media/workspaceTrustEditor", "vs/css!vs/workbench/electron-sandbox/actions/media/actions", "vs/css!vs/workbench/electron-sandbox/media/window", "vs/css!vs/workbench/services/progress/browser/media/progressService", "vs/css!vs/workbench/services/suggest/browser/media/suggest", "vs/css!vs/workbench/services/userDataProfile/browser/media/userDataProfileView", "vs/editor/browser/config/charWidthReader", "vs/editor/browser/viewParts/lines/domReadingContext", "vs/editor/browser/viewParts/lines/rangeUtil", "vs/editor/browser/viewParts/minimap/minimapCharRenderer", "vs/editor/browser/viewParts/minimap/minimapPreBaked", "vs/editor/browser/viewParts/minimap/minimapCharRendererFactory", "vs/editor/browser/widget/multiDiffEditor/objectPool", "vs/editor/browser/widget/diffEditor/utils/editorGutter", "vs/editor/common/core/positionToOffset", "vs/editor/common/cursor/cursorContext", "vs/editor/common/diff/defaultLinesDiffComputer/lineSequence", "vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing", "vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines", "vs/editor/common/diff/linesDiffComputers", "vs/editor/common/editorAction", "vs/editor/browser/widget/diffEditor/delegatingEditorImpl", "vs/editor/common/editorTheme", "vs/editor/common/languages/defaultDocumentColorsComputer", "vs/editor/common/languages/supports/characterPair", "vs/editor/common/languages/supports/inplaceReplaceSupport", "vs/editor/common/languages/supports/electricCharacter", "vs/editor/common/languages/supports/languageBracketsConfiguration", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/nodeReader", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/concat23Trees", "vs/editor/common/model/bracketPairsTextModelPart/fixBrackets", "vs/editor/common/model/fixedArray", "vs/editor/common/model/indentationGuesser", "vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase", "vs/editor/common/model/mirrorTextModel", "vs/editor/common/services/findSectionHeaders", "vs/editor/common/standalone/standaloneEnums", "vs/editor/common/textModelBracketPairs", "vs/editor/common/tokenizationRegistry", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/bracketPairsTree", "vs/editor/common/model/bracketPairsTextModelPart/bracketPairsImpl", "vs/editor/common/tokens/contiguousMultilineTokens", "vs/editor/common/tokens/contiguousTokensStore", "vs/editor/common/tokens/sparseMultilineTokens", "vs/editor/common/tokens/sparseTokensStore", "vs/editor/common/viewLayout/linesLayout", "vs/editor/common/viewLayout/viewLinesViewportData", "vs/editor/common/viewModel/glyphLanesModel", "vs/editor/common/viewModel/modelLineProjection", "vs/editor/common/viewModel/viewContext", "vs/editor/contrib/caretOperations/browser/moveCaretCommand", "vs/editor/contrib/colorPicker/browser/colorPickerModel", "vs/editor/contrib/dnd/browser/dragAndDropCommand", "vs/editor/contrib/find/browser/replaceAllCommand", "vs/editor/contrib/folding/browser/hiddenRangeModel", "vs/editor/contrib/hover/browser/contentHoverTypes", "vs/editor/contrib/hover/browser/marginHoverComputer", "vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand", "vs/editor/contrib/inlineEdit/browser/commandIds", "vs/editor/contrib/linesOperations/browser/copyLinesCommand", "vs/editor/contrib/linesOperations/browser/sortLinesCommand", "vs/editor/contrib/smartSelect/browser/wordSelections", "vs/editor/contrib/suggest/browser/suggestOvertypingCapturer", "vs/base/browser/ui/selectBox/selectBoxCustom", "vs/base/browser/ui/dropdown/dropdown", "vs/base/browser/ui/icons/iconSelectBox", "vs/base/browser/ui/menu/menubar", "vs/base/browser/ui/radio/radio", "vs/base/browser/ui/findinput/replaceInput", "vs/base/browser/ui/tree/treeDefaults", "vs/editor/browser/services/hoverService/updatableHoverWidget", "vs/editor/browser/widget/diffEditor/features/revertButtonsFeature", "vs/editor/common/model/tokenizationTextModelPart", "vs/editor/common/services/editorBaseApi", "vs/editor/common/services/editorSimpleWorker", "vs/platform/assignment/common/assignment", "vs/platform/backup/common/backup", "vs/platform/contextkey/common/scanner", "vs/platform/debug/common/extensionHostDebugIpc", "vs/platform/download/common/downloadIpc", "vs/platform/extensionRecommendations/common/extensionRecommendationsIpc", "vs/platform/instantiation/common/graph", "vs/editor/common/services/languageFeaturesService", "vs/editor/contrib/links/browser/getLinks", "vs/editor/common/services/textResourceConfigurationService", "vs/editor/contrib/suggest/browser/suggestAlternatives", "vs/editor/browser/view/domLineBreaksComputer", "vs/editor/browser/view/viewOverlays", "vs/editor/browser/viewParts/blockDecorations/blockDecorations", "vs/editor/browser/viewParts/contentWidgets/contentWidgets", "vs/editor/browser/viewParts/decorations/decorations", "vs/editor/browser/viewParts/linesDecorations/linesDecorations", "vs/editor/browser/viewParts/marginDecorations/marginDecorations", "vs/editor/browser/viewParts/overlayWidgets/overlayWidgets", "vs/editor/browser/viewParts/overviewRuler/overviewRuler", "vs/editor/browser/viewParts/rulers/rulers", "vs/editor/browser/viewParts/scrollDecoration/scrollDecoration", "vs/editor/browser/viewParts/viewCursors/viewCursor", "vs/editor/browser/viewParts/viewZones/viewZones", "vs/editor/browser/widget/diffEditor/components/diffEditorViewZones/inlineDiffDeletedCodeMargin", "vs/editor/browser/config/editorConfiguration", "vs/editor/common/cursor/cursorColumnSelection", "vs/editor/common/cursor/oneCursor", "vs/editor/common/cursor/cursorCollection", "vs/editor/common/languages/supports/onEnter", "vs/editor/common/viewLayout/viewLayout", "vs/editor/common/viewModel/monospaceLineBreaksComputer", "vs/editor/contrib/hover/browser/contentHoverComputer", "vs/editor/contrib/hover/browser/resizableContentWidget", "vs/editor/contrib/parameterHints/browser/parameterHintsModel", "vs/editor/contrib/suggest/browser/wordContextKey", "vs/platform/contextkey/browser/contextKeyService", "vs/platform/files/browser/htmlFileSystemProvider", "vs/platform/files/common/io", "vs/platform/ipc/electron-sandbox/mainProcessService", "vs/platform/diagnostics/electron-sandbox/diagnosticsService", "vs/platform/externalTerminal/electron-sandbox/externalTerminalService", "vs/platform/keybinding/common/abstractKeybindingService", "vs/platform/keybinding/common/usLayoutResolvedKeybinding", "vs/platform/keyboardLayout/common/keyboardMapper", "vs/platform/languagePacks/common/localizedStrings", "vs/platform/accessibility/browser/accessibilityService", "vs/editor/contrib/documentSymbols/browser/documentSymbols", "vs/platform/files/common/diskFileSystemProvider", "vs/platform/files/common/fileService", "vs/platform/log/browser/log", "vs/platform/native/common/nativeHostService", "vs/editor/browser/services/openerService", "vs/platform/policy/common/policyIpc", "vs/platform/profiling/common/profilingTelemetrySpec", "vs/platform/profiling/electron-sandbox/profilingService", "vs/platform/quickinput/browser/quickInputBox", "vs/editor/browser/services/hoverService/hoverWidget", "vs/editor/common/cursor/cursor", "vs/editor/common/services/languagesRegistry", "vs/editor/common/services/languageService", "vs/editor/contrib/hover/browser/marginHoverWidget", "vs/editor/contrib/indentation/common/indentation", "vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource", "vs/editor/contrib/linesOperations/browser/moveLinesCommand", "vs/platform/actions/common/menuResetAction", "vs/platform/keyboardLayout/common/keyboardConfig", "vs/platform/quickinput/browser/quickInputActions", "vs/platform/quickinput/browser/helpQuickAccess", "vs/platform/quickinput/browser/quickAccess", "vs/platform/remote/common/electronRemoteResources", "vs/platform/remote/common/managedSocket", "vs/platform/remote/browser/browserSocketFactory", "vs/platform/extensionManagement/common/extensionManagementIpc", "vs/platform/remote/electron-sandbox/electronRemoteResourceLoader", "vs/platform/remote/electron-sandbox/remoteAuthorityResolverService", "vs/platform/remote/electron-sandbox/sharedProcessTunnelService", "vs/platform/remoteTunnel/electron-sandbox/remoteTunnelService", "vs/platform/download/common/downloadService", "vs/platform/request/browser/requestService", "vs/platform/sharedProcess/common/sharedProcess", "vs/platform/telemetry/common/errorTelemetry", "vs/platform/telemetry/browser/errorTelemetry", "vs/editor/browser/services/markerDecorations", "vs/editor/browser/view/viewController", "vs/editor/browser/widget/codeEditor/codeEditorContributions", "vs/editor/contrib/anchorSelect/browser/anchorSelect", "vs/editor/contrib/caretOperations/browser/caretOperations", "vs/editor/contrib/caretOperations/browser/transpose", "vs/editor/contrib/comment/browser/comment", "vs/editor/contrib/cursorUndo/browser/cursorUndo", "vs/editor/contrib/diffEditorBreadcrumbs/browser/contribution", "vs/editor/contrib/editorState/browser/keybindingCancellation", "vs/editor/contrib/codeAction/browser/codeActionKeybindingResolver", "vs/editor/contrib/fontZoom/browser/fontZoom", "vs/editor/contrib/gotoSymbol/browser/symbolNavigation", "vs/editor/contrib/lineSelection/browser/lineSelection", "vs/editor/contrib/longLinesHelper/browser/longLinesHelper", "vs/editor/contrib/readOnlyMessage/browser/contribution", "vs/editor/contrib/tokenization/browser/tokenization", "vs/editor/contrib/wordPartOperations/browser/wordPartOperations", "vs/platform/telemetry/common/telemetryIpc", "vs/platform/assignment/common/assignmentService", "vs/platform/extensionManagement/common/extensionManagementCLI", "vs/platform/extensionManagement/common/unsupportedExtensionsMigration", "vs/platform/telemetry/common/telemetryService", "vs/platform/telemetry/electron-sandbox/customEndpointTelemetryService", "vs/platform/terminal/common/capabilities/bufferMarkCapability", "vs/platform/terminal/common/capabilities/commandDetection/promptInputModel", "vs/platform/terminal/common/capabilities/commandDetection/terminalCommand", "vs/platform/terminal/common/capabilities/cwdDetectionCapability", "vs/platform/terminal/common/capabilities/naiveCwdDetectionCapability", "vs/platform/terminal/common/capabilities/partialCommandDetectionCapability", "vs/platform/terminal/common/terminalDataBuffering", "vs/platform/terminal/common/terminalRecorder", "vs/platform/theme/common/colors/menuColors", "vs/platform/theme/common/colors/quickpickColors", "vs/platform/theme/common/colors/searchColors", "vs/editor/browser/viewParts/minimap/minimap", "vs/editor/browser/widget/multiDiffEditor/colors", "vs/editor/contrib/gotoSymbol/browser/peek/referencesTree", "vs/editor/contrib/codeAction/browser/codeActionMenu", "vs/platform/contextview/browser/contextMenuHandler", "vs/editor/contrib/colorPicker/browser/colorPickerWidget", "vs/editor/contrib/parameterHints/browser/parameterHintsWidget", "vs/editor/contrib/unicodeHighlighter/browser/bannerController", "vs/editor/browser/controller/mouseHandler", "vs/editor/browser/controller/pointerHandler", "vs/editor/browser/viewParts/lines/viewLines", "vs/editor/browser/services/abstractCodeEditorService", "vs/editor/browser/services/hoverService/hoverService", "vs/editor/browser/viewParts/editorScrollbar/editorScrollbar", "vs/editor/browser/viewParts/selections/selections", "vs/editor/browser/widget/diffEditor/components/diffEditorEditors", "vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight", "vs/editor/browser/viewParts/indentGuides/indentGuides", "vs/editor/browser/controller/textAreaHandler", "vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler", "vs/editor/browser/viewParts/viewCursors/viewCursors", "vs/editor/browser/viewParts/whitespace/whitespace", "vs/editor/browser/view", "vs/editor/common/model/bracketPairsTextModelPart/colorizedBracketPairsDecorationProvider", "vs/editor/common/services/markerDecorationsService", "vs/editor/common/services/semanticTokensStylingService", "vs/editor/contrib/placeholderText/browser/placeholderText.contribution", "vs/editor/contrib/rename/browser/renameWidget", "vs/editor/contrib/rename/browser/rename", "vs/editor/contrib/semanticTokens/browser/documentSemanticTokens", "vs/editor/contrib/suggest/browser/suggestWidgetRenderer", "vs/platform/quickinput/browser/quickInputTree", "vs/platform/quickinput/browser/quickInputController", "vs/platform/quickinput/browser/quickInputService", "vs/editor/browser/widget/diffEditor/components/diffEditorDecorations", "vs/editor/common/services/modelUndoRedoParticipant", "vs/editor/common/viewModel/viewModelLines", "vs/editor/common/viewModel/viewModelImpl", "vs/editor/contrib/codeAction/browser/codeActionCommands", "vs/editor/contrib/codeAction/browser/codeActionContributions", "vs/editor/contrib/codelens/browser/codelensWidget", "vs/editor/contrib/colorPicker/browser/standaloneColorPickerWidget", "vs/editor/contrib/colorPicker/browser/standaloneColorPickerActions", "vs/editor/contrib/find/browser/findOptionsWidget", "vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace", "vs/editor/contrib/inlineEdit/browser/ghostTextWidget", "vs/editor/contrib/inlineEdit/browser/inlineEditSideBySideWidget", "vs/editor/contrib/linkedEditing/browser/linkedEditing", "vs/editor/contrib/sectionHeaders/browser/sectionHeaders", "vs/editor/contrib/stickyScroll/browser/stickyScrollModelProvider", "vs/editor/contrib/stickyScroll/browser/stickyScrollProvider", "vs/editor/contrib/stickyScroll/browser/stickyScrollWidget", "vs/platform/undoRedo/common/undoRedoService", "vs/platform/update/common/update.config.contribution", "vs/platform/update/common/updateIpc", "vs/platform/uriIdentity/common/uriIdentityService", "vs/platform/url/common/urlIpc", "vs/platform/url/common/urlService", "vs/platform/userData/common/fileUserDataProvider", "vs/platform/userDataSync/common/extensionsMerge", "vs/platform/userDataSync/common/globalStateMerge", "vs/platform/userDataSync/common/userDataSyncLog", "vs/platform/utilityProcess/common/utilityProcessWorkerService", "vs/platform/webview/common/mimeTypes", "vs/platform/webview/common/webviewPortMapping", "vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution", "vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution", "vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel", "vs/editor/contrib/suggest/browser/suggestCommitCharacters", "vs/platform/terminal/common/terminalLogService", "vs/platform/extensionManagement/electron-sandbox/extensionsProfileScannerService", "vs/editor/contrib/codelens/browser/codeLensCache", "vs/editor/contrib/suggest/browser/suggestInlineCompletions", "vs/editor/contrib/gotoError/browser/gotoErrorWidget", "vs/editor/contrib/gotoSymbol/browser/peek/referencesWidget", "vs/editor/contrib/hover/browser/markerHoverParticipant", "vs/editor/contrib/hover/browser/contentHoverRendered", "vs/editor/contrib/hover/browser/contentHoverController", "vs/editor/contrib/inlayHints/browser/inlayHintsContribution", "vs/editor/contrib/stickyScroll/browser/stickyScrollActions", "vs/editor/contrib/stickyScroll/browser/stickyScrollContribution", "vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider", "vs/platform/actions/browser/buttonbar", "vs/editor/browser/widget/diffEditor/features/gutterFeature", "vs/editor/browser/widget/diffEditor/diffEditor.contribution", "vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidgetImpl", "vs/editor/browser/widget/multiDiffEditor/multiDiffEditorWidget", "vs/editor/contrib/colorPicker/browser/colorContributions", "vs/editor/contrib/hover/browser/hoverAccessibleViews", "vs/editor/contrib/hover/browser/hoverActions", "vs/editor/contrib/hover/browser/hoverContribution", "vs/editor/contrib/inlineCompletions/browser/commands", "vs/editor/contrib/inlineCompletions/browser/hoverParticipant", "vs/editor/contrib/inlineCompletions/browser/inlineCompletionsAccessibleView", "vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution", "vs/editor/contrib/inlineEdit/browser/inlineEditHintsWidget", "vs/editor/contrib/inlineEdit/browser/commands", "vs/editor/contrib/inlineEdit/browser/inlineEdit.contribution", "vs/editor/contrib/inlineEdits/browser/inlineEditsModel", "vs/editor/contrib/inlineEdits/browser/commands", "vs/editor/contrib/inlineEdits/browser/inlineEdits.contribution", "vs/platform/actions/common/actions.contribution", "vs/platform/contextview/browser/contextMenuService", "vs/platform/extensionManagement/common/extensionTipsService", "vs/platform/extensionResourceLoader/common/extensionResourceLoaderService", "vs/platform/externalServices/common/marketplace", "vs/platform/extensionManagement/common/extensionGalleryService", "vs/editor/contrib/quickAccess/browser/commandsQuickAccess", "vs/platform/storage/common/storageService", "vs/platform/userDataProfile/electron-sandbox/userDataProfileStorageService", "vs/platform/userDataSync/common/extensionsSync", "vs/platform/userDataSync/common/globalStateSync", "vs/platform/userDataSync/common/userDataSyncEnablementService", "vs/platform/userDataSync/common/userDataSyncServiceIpc", "vs/platform/userDataSync/common/userDataSyncIpc", "vs/editor/contrib/unicodeHighlighter/browser/unicodeHighlighter", "vs/editor/editor.all", "vs/workbench/api/common/extHostInitDataService", "vs/workbench/api/common/extHostRpcService", "vs/workbench/browser/actions/helpActions", "vs/workbench/browser/actions/listCommands", "vs/workbench/browser/parts/dialogs/dialogHandler", "vs/workbench/browser/parts/editor/editorGroupWatermark", "vs/workbench/browser/parts/views/checkbox", "vs/workbench/browser/web.api", "vs/workbench/common/dialogs", "vs/workbench/browser/parts/notifications/notificationsAlerts", "vs/workbench/browser/parts/notifications/notificationAccessibleView", "vs/workbench/browser/parts/notifications/notificationsViewer", "vs/workbench/browser/style", "vs/workbench/contrib/accessibility/browser/accessibleViewKeybindingResolver", "vs/workbench/contrib/bulkEdit/browser/bulkTextEdits", "vs/workbench/contrib/callHierarchy/browser/callHierarchyTree", "vs/workbench/contrib/chat/browser/chatAccessibilityService", "vs/workbench/contrib/chat/browser/chatContentParts/chatConfirmationWidget", "vs/workbench/contrib/chat/browser/chatContentParts/chatWarningContentPart", "vs/workbench/contrib/chat/browser/chatOptions", "vs/workbench/contrib/chat/browser/codeBlockContextProviderService", "vs/workbench/contrib/chat/browser/contrib/editorHoverWrapper", "vs/workbench/contrib/chat/browser/actions/chatDeveloperActions", "vs/workbench/contrib/chat/common/chatServiceTelemetry", "vs/workbench/contrib/chat/browser/chatContentParts/chatCommandContentPart", "vs/workbench/contrib/chat/browser/chatContentParts/chatConfirmationContentPart", "vs/workbench/contrib/chat/common/codeBlockModelCollection", "vs/workbench/contrib/codeActions/browser/codeActionsContribution", "vs/workbench/contrib/codeActions/browser/documentationContribution", "vs/workbench/contrib/codeEditor/browser/largeFileOptimizations", "vs/workbench/contrib/codeEditor/browser/toggleColumnSelection", "vs/workbench/contrib/codeEditor/browser/toggleMinimap", "vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter", "vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace", "vs/workbench/contrib/codeEditor/browser/workbenchReferenceSearch", "vs/workbench/contrib/codeEditor/electron-sandbox/inputClipboardActions", "vs/workbench/contrib/commands/common/commands.contribution", "vs/workbench/contrib/comments/browser/commentMenus", "vs/workbench/contrib/comments/browser/commentThreadHeader", "vs/workbench/contrib/comments/browser/commentThreadRangeDecorator", "vs/workbench/contrib/comments/browser/reactionsAction", "vs/workbench/contrib/comments/browser/commentThreadAdditionalActions", "vs/workbench/contrib/customEditor/common/customEditorModelManager", "vs/workbench/contrib/debug/common/abstractDebugAdapter", "vs/workbench/contrib/debug/common/breakpoints", "vs/workbench/contrib/accessibilitySignals/browser/accessibilitySignalDebuggerContribution", "vs/workbench/contrib/debug/browser/debugMemory", "vs/workbench/contrib/debug/common/debugAccessibilityAnnouncer", "vs/workbench/contrib/debug/common/debugCompoundRoot", "vs/workbench/contrib/debug/common/debugTelemetry", "vs/workbench/contrib/debug/browser/rawDebugSession", "vs/workbench/contrib/debug/common/debugViewModel", "vs/workbench/contrib/debug/common/replAccessibilityAnnouncer", "vs/workbench/contrib/debug/electron-sandbox/extensionHostDebugService", "vs/workbench/contrib/editSessions/browser/editSessionsFileSystemProvider", "vs/workbench/contrib/editSessions/common/editSessionsLogService", "vs/workbench/contrib/editSessions/common/editSessionsStorageClient", "vs/workbench/contrib/extensions/browser/extensionsCompletionItemsProvider", "vs/workbench/contrib/files/common/explorerFileNestingTrie", "vs/workbench/contrib/files/electron-sandbox/fileCommands", "vs/workbench/contrib/inlayHints/browser/inlayHintsAccessibilty", "vs/workbench/contrib/issue/browser/issueReporterPage", "vs/workbench/contrib/extensions/common/reportExtensionIssueAction", "vs/workbench/contrib/issue/browser/issueReporterModel", "vs/workbench/contrib/issue/common/issue.contribution", "vs/workbench/contrib/issue/common/issueReporterUtil", "vs/workbench/contrib/issue/browser/issue", "vs/workbench/contrib/issue/electron-sandbox/issueReporterService2", "vs/workbench/contrib/localization/electron-sandbox/minimalTranslations", "vs/workbench/contrib/mappedEdits/common/mappedEdits.contribution", "vs/workbench/contrib/markers/browser/markersTable", "vs/workbench/contrib/mergeEditor/browser/mergeMarkers/mergeMarkersController", "vs/workbench/contrib/mergeEditor/browser/telemetry", "vs/workbench/contrib/mergeEditor/browser/model/diffComputer", "vs/workbench/contrib/mergeEditor/browser/model/textModelDiffs", "vs/workbench/contrib/mergeEditor/browser/model/mergeEditorModel", "vs/workbench/contrib/mergeEditor/browser/view/editors/baseCodeEditorView", "vs/workbench/contrib/mergeEditor/browser/view/editors/inputCodeEditorView", "vs/workbench/contrib/mergeEditor/browser/view/fixedZoneWidget", "vs/workbench/contrib/mergeEditor/browser/view/conflictActions", "vs/workbench/contrib/mergeEditor/browser/view/lineAlignment", "vs/workbench/contrib/mergeEditor/browser/view/scrollSynchronizer", "vs/workbench/contrib/mergeEditor/browser/view/viewModel", "vs/workbench/contrib/mergeEditor/browser/view/viewZones", "vs/workbench/contrib/mergeEditor/browser/view/editors/resultCodeEditorView", "vs/workbench/contrib/multiDiffEditor/browser/icons.contribution", "vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariableContextKeys", "vs/workbench/contrib/notebook/browser/diff/notebookDiffOverviewRuler", "vs/workbench/contrib/notebook/browser/notebookLogger", "vs/workbench/contrib/notebook/browser/services/notebookCellStatusBarServiceImpl", "vs/workbench/contrib/notebook/browser/services/notebookLoggingServiceImpl", "vs/workbench/contrib/notebook/browser/view/cellParts/cellDecorations", "vs/workbench/contrib/notebook/browser/view/cellParts/cellDragRenderer", "vs/workbench/contrib/notebook/browser/view/cellParts/cellFocus", "vs/workbench/contrib/notebook/browser/view/cellParts/cellToolbars", "vs/workbench/contrib/notebook/browser/view/cellParts/cellWidgets", "vs/workbench/contrib/notebook/browser/view/cellParts/chat/cellChatPart", "vs/workbench/contrib/notebook/browser/view/cellParts/collapsedCellInput", "vs/workbench/contrib/notebook/browser/view/notebookCellListView", "vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads", "vs/workbench/contrib/notebook/browser/view/renderers/webviewThemeMapping", "vs/workbench/contrib/notebook/browser/viewModel/cellEditorOptions", "vs/workbench/contrib/notebook/browser/viewModel/cellSelectionCollection", "vs/workbench/contrib/notebook/browser/viewModel/eventDispatcher", "vs/workbench/contrib/notebook/browser/viewModel/viewContext", "vs/workbench/contrib/notebook/browser/viewParts/notebookTopCellToolbar", "vs/workbench/contrib/notebook/browser/viewParts/notebookViewZones", "vs/workbench/contrib/notebook/common/model/cellEdit", "vs/workbench/contrib/notebook/browser/view/cellParts/cellExecution", "vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariablesDataSource", "vs/workbench/contrib/notebook/common/notebookKeymapService", "vs/workbench/contrib/notebook/browser/services/notebookKernelHistoryServiceImpl", "vs/workbench/contrib/notebook/common/notebookPerformance", "vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/contributedStatusBarItemController", "vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariableCommands", "vs/workbench/contrib/notebook/browser/services/notebookKernelServiceImpl", "vs/workbench/contrib/outline/browser/outlineViewState", "vs/workbench/contrib/preferences/browser/settingsSearchMenu", "vs/workbench/contrib/preferences/browser/settingsWidgets", "vs/workbench/contrib/preferences/common/smartSnippetInserter", "vs/workbench/contrib/remote/browser/urlFinder", "vs/workbench/contrib/sash/browser/sash", "vs/workbench/contrib/scm/browser/dirtyDiffSwitcher", "vs/workbench/contrib/scm/browser/scmHistory", "vs/workbench/contrib/scm/common/quickDiffService", "vs/workbench/contrib/scm/browser/menus", "vs/workbench/contrib/scm/common/scmService", "vs/workbench/contrib/search/common/cacheState", "vs/workbench/contrib/search/common/cellSearchModel", "vs/workbench/contrib/search/browser/searchActionsSymbol", "vs/workbench/contrib/share/browser/shareService", "vs/workbench/contrib/snippets/browser/commands/insertSnippet", "vs/workbench/contrib/speech/browser/speechAccessibilitySignal", "vs/workbench/contrib/tags/common/javaWorkspaceTags", "vs/workbench/contrib/tasks/common/taskTemplates", "vs/workbench/contrib/terminal/browser/terminalCommands", "vs/workbench/contrib/terminal/browser/terminalEditorSerializer", "vs/workbench/contrib/terminal/browser/terminalEscapeSequences", "vs/workbench/contrib/terminal/browser/terminalEvents", "vs/workbench/contrib/terminal/browser/terminalResizeDebouncer", "vs/workbench/contrib/terminal/browser/widgets/terminalHoverWidget", "vs/workbench/contrib/terminal/browser/xterm/lineDataEventAddon", "vs/workbench/contrib/terminal/common/remote/terminal", "vs/workbench/contrib/terminal/common/terminalClipboard", "vs/workbench/contrib/debug/browser/debugANSIHandling", "vs/workbench/contrib/terminal/electron-sandbox/localPty", "vs/workbench/contrib/terminalContrib/accessibility/browser/bufferContentTracker", "vs/workbench/contrib/terminalContrib/accessibility/browser/textAreaSyncAddon", "vs/workbench/contrib/terminalContrib/find/browser/textInputContextMenu", "vs/workbench/contrib/terminalContrib/highlight/browser/terminal.highlight.contribution", "vs/workbench/contrib/terminalContrib/links/browser/terminalExternalLinkDetector", "vs/workbench/contrib/terminalContrib/links/browser/terminalLink", "vs/workbench/contrib/terminalContrib/links/browser/terminalLinkDetectorAdapter", "vs/workbench/contrib/terminalContrib/links/browser/terminalLinkProviderService", "vs/workbench/contrib/terminalContrib/links/browser/terminalLinkResolver", "vs/workbench/contrib/terminalContrib/links/browser/terminalLocalLinkDetector", "vs/workbench/contrib/terminalContrib/links/browser/terminalMultiLineLinkDetector", "vs/workbench/contrib/terminalContrib/links/browser/terminalUriLinkDetector", "vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixBuiltinActions", "vs/workbench/contrib/terminal/browser/xterm/markNavigationAddon", "vs/workbench/contrib/terminal/browser/terminalConfigurationService", "vs/workbench/contrib/terminal/browser/terminalProfileQuickpick", "vs/workbench/contrib/terminalContrib/find/browser/terminalFindWidget", "vs/workbench/contrib/terminalContrib/links/browser/terminalWordLinkDetector", "vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminalStickyScrollOverlay", "vs/workbench/contrib/terminalContrib/typeAhead/browser/terminalTypeAheadAddon", "vs/workbench/contrib/terminalContrib/typeAhead/browser/terminal.typeAhead.contribution", "vs/workbench/contrib/testing/browser/explorerProjections/display", "vs/workbench/contrib/testing/common/observableUtils", "vs/workbench/contrib/testing/common/testExclusions", "vs/workbench/contrib/testing/browser/explorerProjections/testingObjectTree", "vs/workbench/contrib/testing/common/mainThreadTestCollection", "vs/workbench/contrib/testing/common/testItemCollection", "vs/workbench/api/common/extHostTestingPrivateApi", "vs/workbench/contrib/testing/browser/testingConfigurationUi", "vs/workbench/contrib/testing/browser/explorerProjections/listProjection", "vs/workbench/contrib/testing/browser/explorerProjections/treeProjection", "vs/workbench/contrib/testing/browser/testingDecorations", "vs/workbench/contrib/testing/common/testingContentProvider", "vs/workbench/contrib/typeHierarchy/browser/typeHierarchyTree", "vs/workbench/contrib/webview/browser/resourceLoading", "vs/workbench/contrib/webview/browser/webviewFindWidget", "vs/workbench/contrib/webview/electron-sandbox/webviewCommands", "vs/workbench/contrib/webview/electron-sandbox/windowIgnoreMenuShortcutsManager", "vs/workbench/contrib/webviewView/browser/webviewView.contribution", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedColors", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedList", "vs/workbench/contrib/welcomeGettingStarted/common/media/notebookProfile", "vs/workbench/contrib/welcomeWalkthrough/common/walkThroughUtils", "vs/workbench/electron-sandbox/actions/installActions", "vs/workbench/electron-sandbox/actions/windowActions", "vs/workbench/electron-sandbox/parts/dialogs/dialogHandler", "vs/workbench/services/activity/browser/activityService", "vs/workbench/services/aiRelatedInformation/common/aiRelatedInformationService", "vs/workbench/contrib/authentication/browser/actions/signOutOfAccountAction", "vs/workbench/services/authentication/browser/authenticationExtensionsService", "vs/workbench/services/checksum/electron-sandbox/checksumService", "vs/workbench/services/clipboard/electron-sandbox/clipboardService", "vs/workbench/contrib/preferences/browser/settingsEditorSettingIndicators", "vs/workbench/services/configuration/common/configurationCache", "vs/workbench/services/configuration/browser/configuration", "vs/workbench/services/configurationResolver/browser/baseConfigurationResolverService", "vs/workbench/services/contextmenu/electron-sandbox/contextmenuService", "vs/workbench/services/decorations/browser/decorationsService", "vs/workbench/browser/parts/titlebar/commandCenterControl", "vs/workbench/browser/actions/quickAccessActions", "vs/workbench/browser/parts/editor/editorsObserver", "vs/workbench/contrib/accessibilitySignals/browser/editorTextPropertySignalsContribution", "vs/workbench/contrib/callHierarchy/browser/callHierarchyPeek", "vs/workbench/contrib/callHierarchy/browser/callHierarchy.contribution", "vs/workbench/contrib/chat/browser/chatContentParts/chatCodeCitationContentPart", "vs/workbench/contrib/codeEditor/browser/inspectKeybindings", "vs/workbench/contrib/codeEditor/browser/quickaccess/gotoLineQuickAccess", "vs/workbench/contrib/debug/common/loadedScriptsPicker", "vs/workbench/contrib/markers/browser/markersTreeViewer", "vs/workbench/contrib/performance/browser/inputLatencyContrib", "vs/workbench/contrib/snippets/browser/snippetCodeActionProvider", "vs/workbench/contrib/terminal/common/remote/remoteTerminalChannel", "vs/workbench/contrib/terminalContrib/links/browser/terminalLinkQuickpick", "vs/workbench/contrib/testing/common/testServiceImpl", "vs/workbench/contrib/typeHierarchy/browser/typeHierarchyPeek", "vs/workbench/contrib/typeHierarchy/browser/typeHierarchy.contribution", "vs/workbench/services/editor/browser/codeEditorService", "vs/workbench/services/encryption/electron-sandbox/encryptionService", "vs/workbench/contrib/url/browser/externalUriResolver", "vs/workbench/contrib/chat/browser/chatMarkdownRenderer", "vs/workbench/contrib/url/browser/trustedDomainsFileSystemProvider", "vs/workbench/contrib/url/browser/trustedDomainsValidator", "vs/workbench/contrib/debug/common/debugger", "vs/workbench/contrib/webview/electron-sandbox/webviewElement", "vs/workbench/contrib/welcomeWalkthrough/browser/editor/vs_code_editor_walkthrough", "vs/workbench/contrib/welcomeWalkthrough/browser/editor/editorWalkThrough", "vs/workbench/services/dialogs/common/dialogService", "vs/workbench/contrib/extensions/electron-sandbox/extensionsActions", "vs/workbench/contrib/issue/electron-sandbox/processService", "vs/workbench/contrib/issue/electron-sandbox/process.contribution", "vs/workbench/contrib/logs/electron-sandbox/logsActions", "vs/workbench/contrib/logs/electron-sandbox/logs.contribution", "vs/workbench/electron-sandbox/actions/developerActions", "vs/workbench/services/extensionManagement/browser/builtinExtensionsScannerService", "vs/workbench/contrib/extensions/browser/unsupportedExtensionsMigrationContribution", "vs/workbench/services/extensionManagement/electron-sandbox/extensionTipsService", "vs/workbench/contrib/extensions/browser/configBasedRecommendations", "vs/workbench/contrib/extensions/browser/exeBasedRecommendations", "vs/workbench/contrib/extensions/browser/keymapRecommendations", "vs/workbench/contrib/extensions/browser/languageRecommendations", "vs/workbench/contrib/extensions/browser/remoteRecommendations", "vs/workbench/contrib/extensions/browser/webRecommendations", "vs/workbench/contrib/extensions/browser/workspaceRecommendations", "vs/workbench/services/extensionRecommendations/common/extensionIgnoredRecommendationsService", "vs/workbench/services/extensions/common/extensionDescriptionRegistry", "vs/workbench/services/extensions/common/extensionHostEnv", "vs/workbench/services/extensions/common/extensionStorageMigration", "vs/workbench/contrib/authentication/browser/actions/manageTrustedExtensionsForAccountAction", "vs/workbench/contrib/codeEditor/common/languageConfigurationExtensionPoint", "vs/workbench/contrib/configExporter/electron-sandbox/configurationExportHelper", "vs/workbench/contrib/extensions/browser/extensionFeaturesTab", "vs/workbench/contrib/extensions/browser/extensionsActivationProgress", "vs/workbench/contrib/extensions/electron-sandbox/debugExtensionHostAction", "vs/workbench/contrib/issue/browser/issueQuickAccess", "vs/workbench/contrib/notebook/browser/services/notebookRendererMessagingServiceImpl", "vs/workbench/contrib/terminal/browser/environmentVariableInfo", "vs/workbench/contrib/terminal/common/environmentVariableService", "vs/workbench/contrib/terminal/common/environmentVariable.contribution", "vs/workbench/contrib/terminalContrib/quickFix/browser/quickFixAddon", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedDetailsRenderer", "vs/workbench/contrib/welcomeViews/common/viewsWelcomeContribution", "vs/workbench/contrib/welcomeWalkthrough/browser/walkThroughActions", "vs/workbench/contrib/editSessions/browser/editSessionsStorageService", "vs/workbench/services/commands/common/commandService", "vs/workbench/services/extensionManagement/common/extensionFeaturesManagemetService", "vs/workbench/services/extensions/browser/webWorkerExtensionHost", "vs/workbench/services/extensions/common/extensionsProposedApi", "vs/workbench/api/common/configurationExtensionPoint", "vs/workbench/api/common/jsonValidationExtensionPoint", "vs/workbench/contrib/chat/common/chatServiceImpl", "vs/workbench/contrib/chat/common/tools/languageModelToolsContribution", "vs/workbench/contrib/tasks/common/jsonSchema_v1", "vs/workbench/contrib/tasks/common/jsonSchema_v2", "vs/workbench/contrib/tasks/browser/runAutomaticTasks", "vs/workbench/contrib/tasks/browser/taskTerminalStatus", "vs/workbench/contrib/tasks/browser/tasksQuickAccess", "vs/workbench/contrib/terminal/common/terminalExtensionPoints.contribution", "vs/workbench/contrib/terminalContrib/quickFix/browser/terminalQuickFixService", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStartedExtensionPoint", "vs/workbench/services/extensions/common/extensionsUtil", "vs/workbench/services/extensions/common/lazyPromise", "vs/workbench/api/browser/mainThreadAiEmbeddingVector", "vs/workbench/api/browser/mainThreadAiRelatedInformation", "vs/workbench/api/browser/mainThreadAuthentication", "vs/workbench/api/browser/mainThreadChatVariables", "vs/workbench/api/browser/mainThreadClipboard", "vs/workbench/api/browser/mainThreadCommands", "vs/workbench/api/browser/mainThreadConfiguration", "vs/workbench/api/browser/mainThreadDecorations", "vs/workbench/api/browser/mainThreadDiagnostics", "vs/workbench/api/browser/mainThreadDialogs", "vs/workbench/api/browser/mainThreadDocumentContentProviders", "vs/workbench/api/browser/mainThreadDownloadService", "vs/workbench/api/browser/mainThreadEditSessionIdentityParticipant", "vs/workbench/api/browser/mainThreadEmbeddings", "vs/workbench/api/browser/mainThreadErrors", "vs/workbench/api/browser/mainThreadFileSystem", "vs/workbench/api/browser/mainThreadInteractive", "vs/workbench/api/browser/mainThreadLabelService", "vs/workbench/api/browser/mainThreadLanguageModelTools", "vs/workbench/api/browser/mainThreadLanguageModels", "vs/workbench/api/browser/mainThreadLocalization", "vs/workbench/api/browser/mainThreadLogService", "vs/workbench/api/browser/mainThreadManagedSockets", "vs/workbench/api/browser/mainThreadMessageService", "vs/workbench/api/browser/mainThreadNotebookRenderers", "vs/workbench/api/browser/mainThreadProgress", "vs/workbench/api/browser/mainThreadQuickDiff", "vs/workbench/api/browser/mainThreadQuickOpen", "vs/workbench/api/browser/mainThreadRemoteConnectionData", "vs/workbench/api/browser/mainThreadSCM", "vs/workbench/api/browser/mainThreadSecretState", "vs/workbench/api/browser/mainThreadShare", "vs/workbench/api/browser/mainThreadSpeech", "vs/workbench/api/browser/mainThreadStorage", "vs/workbench/api/browser/mainThreadTask", "vs/workbench/api/browser/mainThreadTelemetry", "vs/workbench/api/browser/mainThreadTesting", "vs/workbench/api/browser/mainThreadTheming", "vs/workbench/api/browser/mainThreadTimeline", "vs/workbench/api/common/extHostWebviewMessaging", "vs/workbench/api/browser/mainThreadCodeInsets", "vs/workbench/api/browser/mainThreadWebviewViews", "vs/workbench/services/extensions/common/remoteConsoleUtil", "vs/workbench/api/browser/mainThreadConsole", "vs/workbench/services/extensions/common/remoteExtensionHost", "vs/workbench/services/extensions/common/lazyCreateExtensionHostManager", "vs/workbench/services/extensions/electron-sandbox/extensionHostStarter", "vs/workbench/services/files/electron-sandbox/elevatedFileService", "vs/workbench/services/files/electron-sandbox/watcherClient", "vs/workbench/services/files/electron-sandbox/diskFileSystemProvider", "vs/workbench/contrib/extensions/browser/extensionEnablementWorkspaceTrustTransitionParticipant", "vs/workbench/contrib/extensions/browser/extensionsDependencyChecker", "vs/workbench/contrib/files/browser/workspaceWatcher", "vs/workbench/contrib/speech/browser/speechService", "vs/workbench/contrib/speech/browser/speech.contribution", "vs/workbench/services/host/electron-sandbox/nativeHostService", "vs/workbench/services/keybinding/common/fallbackKeyboardMapper", "vs/workbench/services/keybinding/common/keybindingIO", "vs/workbench/services/keybinding/common/macLinuxKeyboardMapper", "vs/workbench/services/keybinding/electron-sandbox/nativeKeyboardLayout", "vs/workbench/contrib/codeActions/common/codeActionsExtensionPoint", "vs/workbench/contrib/codeActions/common/documentationExtensionPoint", "vs/workbench/services/languageDetection/browser/languageDetectionWorkerServiceImpl", "vs/workbench/api/browser/mainThreadLanguages", "vs/workbench/browser/parts/banner/bannerPart", "vs/workbench/browser/parts/notifications/notificationsCenter", "vs/workbench/browser/parts/titlebar/titlebarActions", "vs/workbench/contrib/scm/browser/workingSet", "vs/workbench/contrib/terminal/browser/terminalEditor", "vs/workbench/contrib/webview/browser/overlayWebview", "vs/workbench/contrib/webviewPanel/browser/webviewCommands", "vs/workbench/browser/parts/notifications/notificationsToasts", "vs/workbench/browser/actions/textInputActions", "vs/workbench/contrib/authentication/browser/authentication.contribution", "vs/workbench/contrib/bracketPairColorizer2Telemetry/browser/bracketPairColorizer2Telemetry.contribution", "vs/workbench/contrib/codeActions/browser/codeActions.contribution", "vs/workbench/contrib/codeEditor/browser/editorFeatures", "vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier", "vs/workbench/contrib/codeEditor/electron-sandbox/displayChangeRemeasureFonts", "vs/workbench/contrib/codeEditor/electron-sandbox/selectionClipboard", "vs/workbench/contrib/codeEditor/electron-sandbox/sleepResumeRepaintMinimap", "vs/workbench/contrib/configExporter/electron-sandbox/configurationExportHelper.contribution", "vs/workbench/contrib/contextmenu/browser/contextmenu.contribution", "vs/workbench/contrib/debug/browser/debugAdapterManager", "vs/workbench/contrib/debug/common/debugLifecycle", "vs/workbench/contrib/deprecatedExtensionMigrator/browser/deprecatedExtensionMigrator.contribution", "vs/workbench/contrib/encryption/electron-sandbox/encryption.contribution", "vs/base/common/jsonc", "vs/workbench/contrib/externalTerminal/electron-sandbox/externalTerminal.contribution", "vs/workbench/contrib/folding/browser/folding.contribution", "vs/workbench/contrib/limitIndicator/browser/limitIndicator.contribution", "vs/workbench/contrib/list/browser/list.contribution", "vs/workbench/contrib/markers/browser/markersFileDecorations", "vs/workbench/contrib/notebook/browser/contrib/kernelDetection/notebookKernelDetection", "vs/workbench/contrib/notebook/browser/services/notebookKeymapServiceImpl", "vs/workbench/contrib/relauncher/browser/relauncher.contribution", "vs/workbench/contrib/splash/browser/partsSplash", "vs/workbench/contrib/splash/electron-sandbox/splash.contribution", "vs/workbench/contrib/surveys/browser/nps.contribution", "vs/workbench/contrib/terminal/browser/terminalEditorService", "vs/workbench/contrib/terminal/browser/xterm/decorationAddon", "vs/workbench/contrib/testing/browser/testResultsView/testResultsOutput", "vs/workbench/contrib/webviewPanel/browser/webviewIconManager", "vs/workbench/api/browser/mainThreadWebviewPanels", "vs/workbench/contrib/welcomeViews/common/newFile.contribution", "vs/workbench/contrib/welcomeViews/common/viewsWelcome.contribution", "vs/workbench/electron-sandbox/parts/dialogs/dialog.contribution", "vs/workbench/services/accessibility/electron-sandbox/accessibilityService", "vs/workbench/contrib/issue/electron-sandbox/issueFormService", "vs/workbench/services/auxiliaryWindow/electron-sandbox/auxiliaryWindowService", "vs/workbench/services/driver/electron-sandbox/driver", "vs/workbench/api/browser/mainThreadUrls", "vs/workbench/services/extensions/electron-sandbox/localProcessExtensionHost", "vs/workbench/services/integrity/electron-sandbox/integrityService", "vs/workbench/services/lifecycle/common/lifecycleService", "vs/workbench/contrib/localization/common/localizationsActions", "vs/workbench/contrib/localization/common/localization.contribution", "vs/workbench/services/localization/electron-sandbox/languagePackService", "vs/workbench/contrib/keybindings/browser/keybindings.contribution", "vs/workbench/services/log/electron-sandbox/logService", "vs/workbench/services/menubar/electron-sandbox/menubarService", "vs/workbench/api/browser/mainThreadNotebook", "vs/workbench/api/browser/mainThreadNotebookKernels", "vs/workbench/api/browser/mainThreadTerminalShellIntegration", "vs/workbench/api/common/extHostTunnelService", "vs/workbench/contrib/extensions/browser/fileBasedRecommendations", "vs/workbench/contrib/notebook/browser/contrib/debug/notebookCellPausing", "vs/workbench/contrib/notebook/browser/contrib/profile/notebookProfile", "vs/workbench/contrib/notebook/browser/controller/apiActions", "vs/workbench/contrib/notebook/browser/notebookExtensionPoint", "vs/workbench/contrib/notebook/browser/services/notebookExecutionStateServiceImpl", "vs/workbench/contrib/notebook/browser/services/notebookWorkerServiceImpl", "vs/workbench/contrib/notebook/browser/view/cellParts/cellFocusIndicator", "vs/workbench/contrib/notebook/browser/view/cellParts/cellProgressBar", "vs/workbench/contrib/notebook/browser/view/cellParts/codeCellExecutionIcon", "vs/workbench/contrib/notebook/browser/viewModel/OutlineEntry", "vs/workbench/contrib/notebook/browser/diff/diffNestedCellViewModel", "vs/workbench/contrib/notebook/common/model/notebookTextModel", "vs/workbench/contrib/notebook/browser/view/cellParts/codeCellRunToolbar", "vs/workbench/contrib/notebook/browser/contrib/gettingStarted/notebookGettingStarted", "vs/workbench/contrib/notebook/browser/controller/notebookIndentationActions", "vs/workbench/api/browser/mainThreadNotebookEditors", "vs/workbench/api/browser/mainThreadLanguageFeatures", "vs/workbench/contrib/bulkEdit/browser/conflicts", "vs/workbench/contrib/bulkEdit/browser/preview/bulkEditTree", "vs/workbench/contrib/notebook/browser/contrib/cellStatusBar/statusBarProviders", "vs/workbench/contrib/notebook/browser/contrib/debug/notebookBreakpoints", "vs/workbench/contrib/notebook/browser/contrib/marker/markerProvider", "vs/workbench/contrib/notebook/browser/contrib/troubleshoot/layout", "vs/workbench/contrib/notebook/browser/contrib/undoRedo/notebookUndoRedo", "vs/workbench/contrib/notebook/browser/contrib/cellCommands/cellCommands", "vs/workbench/contrib/notebook/browser/contrib/clipboard/notebookClipboard", "vs/workbench/contrib/notebook/browser/contrib/find/notebookFind", "vs/workbench/contrib/notebook/browser/contrib/layout/layoutActions", "vs/workbench/contrib/notebook/browser/diff/diffElementOutputs", "vs/workbench/contrib/notebook/browser/view/cellParts/collapsedCellOutput", "vs/workbench/contrib/notebook/browser/view/cellParts/foldedCellHint", "vs/workbench/contrib/notebook/browser/view/cellParts/markupCell", "vs/workbench/contrib/notebook/browser/view/notebookCellAnchor", "vs/workbench/contrib/notebook/browser/viewParts/notebookEditorWidgetContextKeys", "vs/workbench/contrib/notebook/browser/viewParts/notebookOverviewRuler", "vs/workbench/contrib/notebook/common/notebookOutputRenderer", "vs/workbench/contrib/search/browser/searchFindInput", "vs/workbench/services/notification/common/notificationService", "vs/workbench/browser/parts/editor/breadcrumbsModel", "vs/workbench/contrib/codeEditor/browser/outline/documentSymbolsTree", "vs/workbench/contrib/codeEditor/browser/outline/documentSymbolsOutline", "vs/workbench/contrib/notebook/browser/viewModel/notebookOutlineDataSource", "vs/workbench/contrib/notebook/browser/viewParts/notebookEditorStickyScroll", "vs/workbench/services/outline/browser/outlineService", "vs/workbench/contrib/logs/common/logs.contribution", "vs/workbench/contrib/output/browser/outputLinkProvider", "vs/workbench/contrib/output/common/outputChannelModel", "vs/workbench/browser/actions/navigationActions", "vs/workbench/browser/parts/sidebar/sidebarActions", "vs/workbench/contrib/extensions/browser/extensionsQuickAccess", "vs/workbench/contrib/format/browser/formatActionsNone", "vs/workbench/contrib/localization/electron-sandbox/localization.contribution", "vs/workbench/contrib/notebook/browser/view/cellParts/cellOutput", "vs/workbench/contrib/notebook/browser/services/notebookExecutionServiceImpl", "vs/workbench/contrib/accessibilitySignals/browser/commands", "vs/workbench/contrib/accessibilitySignals/browser/accessibilitySignal.contribution", "vs/workbench/contrib/notebook/browser/controller/layoutActions", "vs/workbench/contrib/preferences/browser/preferencesActions", "vs/workbench/contrib/preferences/common/settingsFilesystemProvider", "vs/workbench/contrib/remoteTunnel/electron-sandbox/remoteTunnel.contribution", "vs/workbench/electron-sandbox/parts/titlebar/menubarControl", "vs/workbench/contrib/preferences/browser/preferencesSearch", "vs/workbench/browser/parts/compositePart", "vs/workbench/services/quickinput/browser/quickInputService", "vs/workbench/services/remote/common/remoteAgentEnvironmentChannel", "vs/workbench/api/browser/mainThreadTerminalService", "vs/workbench/contrib/accessibility/browser/accessibleViewContributions", "vs/workbench/contrib/accessibility/browser/unfocusedViewDimmingContribution", "vs/workbench/contrib/accessibilitySignals/browser/openDiffEditorAnnouncement", "vs/workbench/contrib/accountEntitlements/browser/accountsEntitlements.contribution", "vs/workbench/contrib/chat/browser/chatAccessibilityProvider", "vs/workbench/contrib/chat/browser/chatResponseAccessibleView", "vs/workbench/contrib/codeEditor/browser/accessibility/accessibility", "vs/workbench/contrib/codeEditor/browser/editorSettingsMigration", "vs/workbench/contrib/debug/browser/debugSettingMigration", "vs/workbench/contrib/externalUriOpener/common/contributedOpeners", "vs/workbench/api/browser/mainThreadUriOpeners", "vs/workbench/contrib/externalUriOpener/common/externalUriOpener.contribution", "vs/workbench/contrib/inlineChat/browser/inlineChatAccessibilityHelp", "vs/workbench/contrib/interactive/browser/replInputHintContentWidget", "vs/workbench/contrib/notebook/browser/notebookAccessibilityHelp", "vs/workbench/contrib/notebook/browser/notebookAccessibilityProvider", "vs/workbench/contrib/notebook/browser/notebookAccessibleView", "vs/workbench/contrib/remote/browser/remoteConnectionHealth", "vs/workbench/contrib/remote/common/remote.contribution", "vs/workbench/contrib/sash/browser/sash.contribution", "vs/workbench/contrib/share/browser/share.contribution", "vs/workbench/contrib/terminal/browser/remotePty", "vs/workbench/contrib/terminal/browser/terminalProfileResolverService", "vs/workbench/contrib/terminal/browser/terminalRunRecentQuickPick", "vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService", "vs/workbench/contrib/terminalContrib/accessibility/browser/terminalAccessibilityHelp", "vs/workbench/contrib/terminalContrib/accessibility/browser/terminalAccessibleBufferProvider", "vs/workbench/contrib/url/browser/url.contribution", "vs/workbench/contrib/issue/electron-sandbox/issueService", "vs/workbench/contrib/notebook/browser/viewParts/notebookEditorToolbar", "vs/workbench/contrib/surveys/browser/ces.contribution", "vs/workbench/browser/parts/editor/editorConfiguration", "vs/workbench/contrib/customEditor/common/extensionPoint", "vs/workbench/contrib/customEditor/common/contributedCustomEditors", "vs/workbench/services/editor/browser/editorResolverService", "vs/workbench/services/lifecycle/electron-sandbox/lifecycleService", "vs/workbench/contrib/debug/browser/exceptionWidget", "vs/workbench/contrib/terminal/browser/terminalProcessManager", "vs/workbench/services/configurationResolver/electron-sandbox/configurationResolverService", "vs/workbench/contrib/remote/electron-sandbox/remote.contribution", "vs/workbench/services/dialogs/browser/abstractFileDialogService", "vs/workbench/services/dialogs/electron-sandbox/fileDialogService", "vs/workbench/services/label/common/labelService", "vs/workbench/services/model/common/modelService", "vs/workbench/services/path/electron-sandbox/pathService", "vs/workbench/services/remote/common/remoteFileSystemProviderClient", "vs/workbench/api/browser/mainThreadTunnelService", "vs/workbench/contrib/remote/browser/showCandidate", "vs/workbench/contrib/remote/browser/tunnelFactory", "vs/workbench/services/request/electron-sandbox/requestService", "vs/workbench/services/search/common/ignoreFile", "vs/workbench/services/search/common/replace", "vs/workbench/api/browser/mainThreadSearch", "vs/workbench/services/history/browser/historyService", "vs/workbench/contrib/search/browser/notebookSearch/notebookSearchService", "vs/workbench/contrib/search/browser/notebookSearch/notebookSearchContributions", "vs/workbench/contrib/terminalContrib/links/browser/terminalLinkOpeners", "vs/workbench/contrib/terminalContrib/links/browser/terminalLinkManager", "vs/workbench/services/search/common/searchService", "vs/workbench/services/search/electron-sandbox/searchService", "vs/workbench/services/secrets/electron-sandbox/secretStorageService", "vs/workbench/services/sharedProcess/electron-sandbox/sharedProcessService", "vs/workbench/api/browser/mainThreadStatusBar", "vs/workbench/browser/parts/notifications/notificationsStatus", "vs/workbench/browser/parts/statusbar/statusbarActions", "vs/workbench/browser/parts/statusbar/statusbarItem", "vs/workbench/browser/parts/statusbar/statusbarModel", "vs/workbench/contrib/accessibility/browser/accessibilityStatus", "vs/workbench/contrib/debug/browser/debugStatus", "vs/workbench/contrib/debug/browser/statusbarColorProvider", "vs/workbench/contrib/extensions/electron-sandbox/extensionProfileService", "vs/workbench/contrib/languageDetection/browser/languageDetection.contribution", "vs/workbench/contrib/languageStatus/browser/languageStatus.contribution", "vs/workbench/contrib/remote/browser/remoteIndicator", "vs/workbench/contrib/scrollLocking/browser/scrollLocking", "vs/workbench/contrib/scrollLocking/browser/scrollLocking.contribution", "vs/workbench/contrib/terminal/browser/remoteTerminalBackend", "vs/workbench/contrib/terminal/electron-sandbox/localTerminalBackend", "vs/workbench/services/storage/electron-sandbox/storageService", "vs/workbench/services/suggest/browser/simpleCompletionItem", "vs/workbench/services/suggest/browser/simpleCompletionModel", "vs/workbench/services/suggest/browser/simpleSuggestWidgetRenderer", "vs/workbench/services/suggest/browser/simpleSuggestWidget", "vs/workbench/contrib/terminalContrib/suggest/browser/terminalSuggestAddon", "vs/workbench/services/telemetry/common/workbenchCommonProperties", "vs/workbench/services/telemetry/electron-sandbox/telemetryService", "vs/workbench/contrib/terminal/browser/terminalMainContribution", "vs/workbench/services/textMate/browser/arrayOperation", "vs/workbench/services/textMate/browser/backgroundTokenization/textMateWorkerTokenizerController", "vs/workbench/services/textMate/browser/backgroundTokenization/threadedBackgroundTokenizerFactory", "vs/workbench/contrib/codeEditor/electron-sandbox/startDebugTextMate", "vs/workbench/contrib/codeEditor/electron-sandbox/codeEditor.contribution", "vs/workbench/services/textMate/browser/tokenizationSupport/textMateTokenizationSupport", "vs/workbench/services/textMate/browser/tokenizationSupport/tokenizationSupportWithLineLimit", "vs/workbench/contrib/emmet/browser/emmetActions", "vs/workbench/contrib/emmet/browser/actions/expandAbbreviation", "vs/workbench/contrib/emmet/browser/emmet.contribution", "vs/workbench/services/textMate/common/TMScopeRegistry", "vs/workbench/services/textMate/common/TMGrammarFactory", "vs/workbench/services/textfile/common/textFileSaveParticipant", "vs/workbench/api/browser/mainThreadSaveParticipant", "vs/workbench/browser/parts/editor/breadcrumbsPicker", "vs/workbench/contrib/chat/browser/chatContentParts/chatAttachmentsContentPart", "vs/workbench/contrib/customEditor/common/customTextEditorModel", "vs/workbench/contrib/debug/browser/debugConfigurationManager", "vs/workbench/contrib/debug/common/debugStorage", "vs/workbench/api/browser/mainThreadDebugService", "vs/workbench/contrib/debug/browser/debugSession", "vs/workbench/contrib/debug/browser/replFilter", "vs/workbench/contrib/files/browser/explorerService", "vs/workbench/contrib/externalTerminal/browser/externalTerminal.contribution", "vs/workbench/contrib/mergeEditor/browser/mergeEditorInputModel", "vs/workbench/contrib/mergeEditor/browser/mergeEditorSerializer", "vs/workbench/contrib/multiDiffEditor/browser/actions", "vs/workbench/contrib/codeEditor/browser/saveParticipants", "vs/workbench/contrib/format/browser/format.contribution", "vs/workbench/contrib/surveys/browser/languageSurveys.contribution", "vs/workbench/contrib/tags/electron-sandbox/tags.contribution", "vs/workbench/contrib/tags/electron-sandbox/workspaceTagsService", "vs/workbench/contrib/terminal/browser/terminalTabsList", "vs/workbench/contrib/terminal/browser/terminalTabbedView", "vs/workbench/contrib/testing/browser/testResultsView/testMessageStack", "vs/workbench/contrib/workspaces/browser/workspaces.contribution", "vs/workbench/services/configuration/common/jsonEditingService", "vs/workbench/services/localization/electron-sandbox/localeService", "vs/workbench/services/textresourceProperties/common/textResourcePropertiesService", "vs/workbench/services/themes/common/colorExtensionPoint", "vs/workbench/services/themes/common/iconExtensionPoint", "vs/workbench/services/themes/common/plistParser", "vs/workbench/services/themes/common/fileIconThemeSchema", "vs/workbench/services/themes/common/textMateScopeMatcher", "vs/workbench/services/themes/common/themeCompatibility", "vs/workbench/services/themes/common/tokenClassificationExtensionPoint", "vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens", "vs/workbench/contrib/themes/browser/themes.test.contribution", "vs/workbench/contrib/webview/browser/themeing", "vs/workbench/contrib/webview/browser/webviewService", "vs/workbench/contrib/webview/electron-sandbox/webviewService", "vs/workbench/contrib/webview/electron-sandbox/webview.contribution", "vs/workbench/contrib/welcomeGettingStarted/common/media/theme_picker", "vs/workbench/services/textMate/browser/textMateTokenizationFeatureImpl", "vs/workbench/services/textMate/browser/textMateTokenizationFeature.contribution", "vs/workbench/contrib/themes/browser/themes.contribution", "vs/workbench/services/themes/common/colorThemeData", "vs/workbench/services/themes/common/themeExtensionPoints", "vs/workbench/services/themes/electron-sandbox/nativeHostColorSchemeService", "vs/workbench/services/themes/electron-sandbox/themes.contribution", "vs/workbench/api/browser/mainThreadExtensionService", "vs/workbench/contrib/extensions/electron-sandbox/extensionsAutoProfiler", "vs/workbench/contrib/performance/browser/performance.contribution", "vs/workbench/contrib/performance/browser/startupTimings", "vs/workbench/contrib/performance/electron-sandbox/rendererAutoProfiler", "vs/workbench/contrib/performance/electron-sandbox/startupProfiler", "vs/workbench/contrib/performance/electron-sandbox/startupTimings", "vs/workbench/contrib/performance/electron-sandbox/performance.contribution", "vs/workbench/services/timer/electron-sandbox/timerService", "vs/workbench/contrib/debug/browser/debugTitle", "vs/workbench/contrib/scm/browser/activity", "vs/workbench/services/tunnel/electron-sandbox/tunnelService", "vs/workbench/services/update/electron-sandbox/updateService", "vs/workbench/services/url/electron-sandbox/urlService", "vs/workbench/services/userActivity/browser/domActivityTracker", "vs/workbench/services/userActivity/browser/userActivityBrowser", "vs/workbench/api/browser/mainThreadWindow", "vs/workbench/contrib/notebook/browser/contrib/execute/executionEditorProgress", "vs/workbench/contrib/extensions/browser/extensionRecommendationsService", "vs/workbench/services/themes/browser/workbenchThemeService", "vs/workbench/contrib/terminal/browser/terminalIconPicker", "vs/workbench/api/browser/mainThreadProfileContentHandlers", "vs/workbench/contrib/issue/browser/issueTroubleshoot", "vs/workbench/contrib/issue/electron-sandbox/issue.contribution", "vs/workbench/contrib/preferences/browser/keybindingsEditorContribution", "vs/workbench/contrib/preferences/browser/preferencesRenderers", "vs/workbench/contrib/preferences/browser/preferencesEditor", "vs/workbench/contrib/markdown/browser/markdownSettingRenderer", "vs/workbench/contrib/preferences/browser/tocTree", "vs/workbench/contrib/snippets/browser/commands/configureSnippets", "vs/workbench/contrib/accessibility/browser/accessibleView", "vs/workbench/contrib/chat/browser/chatContentParts/chatTextEditContentPart", "vs/workbench/contrib/comments/browser/commentNode", "vs/workbench/contrib/comments/browser/commentThreadBody", "vs/workbench/contrib/comments/browser/commentThreadZoneWidget", "vs/workbench/contrib/codeEditor/browser/diffEditorAccessibilityHelp", "vs/workbench/contrib/codeEditor/browser/diffEditorHelper", "vs/workbench/contrib/comments/browser/commentsInputContentProvider", "vs/workbench/contrib/debug/browser/breakpointWidget", "vs/workbench/contrib/inlineChat/browser/inlineChatStrategies", "vs/workbench/contrib/notebook/browser/diff/diffComponents", "vs/workbench/contrib/notebook/browser/diff/notebookDiffList", "vs/workbench/contrib/notebook/browser/view/cellParts/cellComments", "vs/workbench/contrib/snippets/browser/snippets.contribution", "vs/workbench/contrib/telemetry/browser/telemetry.contribution", "vs/workbench/contrib/testing/browser/testingExplorerFilter", "vs/workbench/contrib/update/browser/releaseNotesEditor", "vs/workbench/contrib/userDataProfile/browser/userDataProfileActions", "vs/workbench/contrib/userDataProfile/browser/userDataProfilePreview", "vs/workbench/services/configuration/common/configurationEditing", "vs/workbench/services/configuration/browser/configurationService", "vs/workbench/services/extensionManagement/electron-sandbox/nativeExtensionManagementService", "vs/workbench/services/extensions/electron-sandbox/cachedExtensionScanner", "vs/workbench/services/extensions/electron-sandbox/extensionsScannerService", "vs/workbench/services/keybinding/browser/keybindingService", "vs/workbench/contrib/preferences/browser/keybindingsEditor", "vs/workbench/services/remote/common/abstractRemoteAgentService", "vs/workbench/services/remote/electron-sandbox/remoteAgentService", "vs/workbench/services/userDataProfile/browser/userDataProfileManagement", "vs/workbench/services/extensionManagement/common/remoteExtensionManagementService", "vs/workbench/services/remote/common/remoteExtensionsScanner", "vs/workbench/services/userDataProfile/common/userDataProfileService", "vs/workbench/services/userDataSync/browser/userDataSyncEnablementService", "vs/workbench/contrib/preferences/browser/settingsEditor2", "vs/workbench/contrib/update/browser/update", "vs/workbench/contrib/update/browser/update.contribution", "vs/workbench/contrib/userDataSync/electron-sandbox/userDataSync.contribution", "vs/workbench/services/userDataSync/common/userDataSyncUtil", "vs/workbench/services/userDataSync/electron-sandbox/userDataAutoSyncService", "vs/workbench/services/userDataSync/electron-sandbox/userDataSyncService", "vs/workbench/services/views/common/viewContainerModel", "vs/workbench/api/browser/mainThreadOutputService", "vs/workbench/api/browser/mainThreadTreeViews", "vs/workbench/browser/parts/statusbar/statusbarPart", "vs/workbench/browser/workbench.contribution", "vs/workbench/contrib/accessibility/browser/extensionAccesibilityHelp.contribution", "vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPane", "vs/workbench/contrib/chat/browser/actions/chatClearActions", "vs/workbench/contrib/chat/browser/actions/chatCodeblockActions", "vs/workbench/contrib/chat/browser/actions/chatCopyActions", "vs/workbench/contrib/chat/browser/actions/chatFileTreeActions", "vs/workbench/contrib/chat/browser/actions/chatImportExport", "vs/workbench/contrib/chat/browser/actions/chatMoveActions", "vs/workbench/contrib/chat/browser/actions/chatTitleActions", "vs/workbench/contrib/comments/browser/commentsEditorContribution", "vs/workbench/contrib/comments/browser/commentsViewActions", "vs/workbench/contrib/comments/browser/commentsAccessibleView", "vs/workbench/contrib/comments/browser/comments.contribution", "vs/workbench/contrib/debug/browser/debugEditorActions", "vs/workbench/contrib/debug/browser/debugProgress", "vs/workbench/contrib/debug/browser/debugSessionPicker", "vs/workbench/contrib/debug/browser/debugConsoleQuickAccess", "vs/workbench/contrib/debug/browser/debugQuickAccess", "vs/workbench/contrib/debug/browser/debugTaskRunner", "vs/workbench/contrib/debug/browser/debugService", "vs/workbench/contrib/debug/browser/callStackView", "vs/workbench/contrib/debug/browser/loadedScriptsView", "vs/workbench/contrib/debug/browser/replViewer", "vs/workbench/contrib/debug/browser/replAccessibilityHelp", "vs/workbench/contrib/debug/browser/replAccessibleView", "vs/workbench/contrib/debug/browser/runAndDebugAccessibilityHelp", "vs/workbench/contrib/debug/browser/debugHover", "vs/workbench/contrib/debug/browser/watchExpressionsView", "vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariablesTree", "vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariablesView", "vs/workbench/contrib/notebook/browser/contrib/notebookVariables/notebookVariables", "vs/workbench/contrib/outline/browser/outlineActions", "vs/workbench/contrib/outline/browser/outlinePane", "vs/workbench/contrib/output/browser/outputServices", "vs/workbench/contrib/quickaccess/browser/viewQuickAccess", "vs/workbench/contrib/remote/browser/tunnelView", "vs/workbench/contrib/scm/browser/scmRepositoriesViewPane", "vs/workbench/contrib/tasks/browser/task.contribution", "vs/workbench/contrib/tasks/electron-sandbox/taskService", "vs/workbench/contrib/testing/browser/codeCoverageDecorations", "vs/workbench/contrib/testing/browser/testCoverageView", "vs/workbench/contrib/testing/browser/testResultsView/testResultsTree", "vs/workbench/contrib/testing/browser/testResultsView/testResultsViewContent", "vs/workbench/contrib/testing/browser/testingOutputPeek", "vs/workbench/contrib/testing/browser/testingExplorerView", "vs/workbench/contrib/timeline/common/timelineService", "vs/workbench/contrib/userDataSync/browser/userDataSyncTrigger", "vs/workbench/contrib/webviewView/browser/webviewViewPane", "vs/workbench/services/progress/browser/progressService", "vs/workbench/services/userDataSync/browser/userDataSyncWorkbenchService", "vs/workbench/services/workingCopy/common/storedFileWorkingCopySaveParticipant", "vs/workbench/services/workingCopy/common/workingCopyBackupTracker", "vs/workbench/contrib/files/browser/editors/textFileEditorTracker", "vs/workbench/services/workingCopy/common/workingCopyFileOperationParticipant", "vs/workbench/browser/actions/developerActions", "vs/workbench/browser/contextkeys", "vs/workbench/browser/parts/editor/editorAutoSave", "vs/workbench/browser/parts/editor/editorPanes", "vs/workbench/contrib/accessibilitySignals/browser/saveAccessibilitySignal", "vs/workbench/contrib/accessibility/browser/accessibility.contribution", "vs/workbench/contrib/codeEditor/browser/codeEditor.contribution", "vs/workbench/contrib/files/browser/editors/binaryFileEditor", "vs/workbench/contrib/files/browser/editors/textFileEditor", "vs/workbench/contrib/files/common/dirtyFilesIndicator", "vs/workbench/contrib/mergeEditor/browser/commands/commands", "vs/workbench/contrib/mergeEditor/browser/commands/devCommands", "vs/workbench/contrib/mergeEditor/browser/mergeEditor.contribution", "vs/workbench/contrib/mergeEditor/electron-sandbox/devCommands", "vs/workbench/contrib/mergeEditor/electron-sandbox/mergeEditor.contribution", "vs/workbench/contrib/notebook/browser/contrib/editorHint/emptyCellEditorHint", "vs/workbench/contrib/webviewPanel/browser/webviewPanel.contribution", "vs/workbench/contrib/welcomeWalkthrough/browser/walkThrough.contribution", "vs/workbench/services/editor/browser/editorPaneService", "vs/workbench/services/textmodelResolver/common/textModelResolverService", "vs/workbench/api/browser/mainThreadEditorTabs", "vs/workbench/contrib/customEditor/browser/customEditorInputFactory", "vs/workbench/contrib/customEditor/browser/customEditors", "vs/workbench/contrib/customEditor/browser/customEditor.contribution", "vs/workbench/contrib/localHistory/browser/localHistoryTimeline", "vs/workbench/contrib/localHistory/browser/localHistory.contribution", "vs/workbench/contrib/localHistory/electron-sandbox/localHistoryCommands", "vs/workbench/contrib/localHistory/electron-sandbox/localHistory.contribution", "vs/workbench/contrib/timeline/browser/timelinePane", "vs/workbench/contrib/files/browser/editors/fileEditorHandler", "vs/workbench/contrib/preferences/common/preferencesContribution", "vs/workbench/services/editor/browser/editorService", "vs/workbench/services/preferences/browser/preferencesService", "vs/workbench/services/untitled/common/untitledTextEditorHandler", "vs/workbench/browser/parts/editor/editor.contribution", "vs/workbench/services/userDataProfile/browser/globalStateResource", "vs/workbench/contrib/userDataProfile/browser/userDataProfilesEditorModel", "vs/workbench/contrib/userDataProfile/browser/userDataProfilesEditor", "vs/workbench/contrib/userDataProfile/browser/userDataProfile", "vs/workbench/contrib/userDataProfile/browser/userDataProfile.contribution", "vs/workbench/services/workingCopy/common/untitledFileWorkingCopyManager", "vs/workbench/api/browser/mainThreadCustomEditors", "vs/workbench/api/browser/mainThreadDocumentsAndEditors", "vs/workbench/api/browser/mainThreadFileSystemEventService", "vs/workbench/api/browser/mainThreadNotebookDocuments", "vs/workbench/api/browser/mainThreadNotebookDocumentsAndEditors", "vs/workbench/api/browser/mainThreadWebviewManager", "vs/workbench/contrib/bulkEdit/browser/bulkFileEdits", "vs/workbench/contrib/bulkEdit/browser/bulkEditService", "vs/workbench/services/textfile/common/textFileEditorModelManager", "vs/workbench/services/textfile/browser/textFileService", "vs/workbench/services/textfile/electron-sandbox/nativeTextFileService", "vs/workbench/api/browser/mainThreadNotebookSaveParticipant", "vs/workbench/contrib/notebook/browser/contrib/format/formatting", "vs/workbench/services/workingCopy/common/storedFileWorkingCopyManager", "vs/workbench/services/workingCopy/common/fileWorkingCopyManager", "vs/workbench/contrib/notebook/common/notebookEditorModelResolverServiceImpl", "vs/workbench/services/workingCopy/common/workingCopyHistoryTracker", "vs/workbench/services/workingCopy/common/workingCopyHistoryService", "vs/workbench/services/workingCopy/electron-sandbox/workingCopyBackupTracker", "vs/workbench/services/workingCopy/electron-sandbox/workingCopyBackupService", "vs/workbench/services/workingCopy/electron-sandbox/workingCopyHistoryService", "vs/workbench/services/workspaces/browser/abstractWorkspaceEditingService", "vs/workbench/services/workspaces/browser/workspaceTrustEditorInput", "vs/workbench/services/workspaces/common/canonicalUriService", "vs/workbench/services/workspaces/common/editSessionIdentityService", "vs/workbench/api/browser/mainThreadWorkspace", "vs/workbench/browser/parts/compositeBar", "vs/workbench/browser/parts/editor/editorDropTarget", "vs/workbench/browser/parts/editor/multiRowEditorTabsControl", "vs/workbench/browser/parts/editor/noEditorTabsControl", "vs/workbench/browser/parts/editor/singleEditorTabsControl", "vs/workbench/browser/parts/editor/editorTitleControl", "vs/workbench/browser/parts/editor/auxiliaryEditorPart", "vs/workbench/browser/parts/editor/editorParts", "vs/workbench/browser/parts/activitybar/activitybarPart", "vs/workbench/browser/parts/titlebar/titlebarPart", "vs/workbench/api/browser/mainThreadComments", "vs/workbench/browser/layout", "vs/workbench/browser/parts/paneCompositePartService", "vs/workbench/browser/workbench", "vs/workbench/contrib/bulkEdit/browser/preview/bulkEdit.contribution", "vs/workbench/contrib/debug/browser/debug.contribution", "vs/workbench/contrib/editSessions/browser/editSessionsViews", "vs/workbench/contrib/files/browser/views/emptyView", "vs/workbench/contrib/files/browser/views/explorerDecorationsProvider", "vs/workbench/contrib/chat/browser/chatContentParts/chatTaskContentPart", "vs/workbench/contrib/chat/browser/chatContentParts/chatTreeContentPart", "vs/workbench/contrib/files/browser/fileCommands", "vs/workbench/contrib/files/browser/files.contribution", "vs/workbench/contrib/files/electron-sandbox/fileActions.contribution", "vs/workbench/contrib/markers/browser/markersView", "vs/workbench/contrib/markers/browser/markers.contribution", "vs/workbench/contrib/outline/browser/outline.contribution", "vs/workbench/contrib/output/browser/output.contribution", "vs/workbench/contrib/preferences/browser/preferences.contribution", "vs/workbench/api/browser/viewsExtensionPoint", "vs/workbench/contrib/remote/browser/explorerViewItems", "vs/workbench/contrib/remote/browser/remote", "vs/workbench/contrib/remote/browser/remote.contribution", "vs/workbench/contrib/scm/browser/scmViewPane", "vs/workbench/contrib/scm/browser/scmViewPaneContainer", "vs/workbench/contrib/scm/browser/scm.contribution", "vs/workbench/contrib/terminal/browser/terminalInstanceService", "vs/workbench/contrib/terminal/browser/terminalProfileService", "vs/workbench/contrib/terminal/browser/terminalService", "vs/workbench/contrib/terminal/electron-sandbox/terminalRemote", "vs/workbench/contrib/terminal/electron-sandbox/terminalNativeContribution", "vs/workbench/contrib/terminal/electron-sandbox/terminal.contribution", "vs/workbench/contrib/terminalContrib/accessibility/browser/terminal.accessibility.contribution", "vs/workbench/contrib/terminalContrib/chat/browser/terminal.initialHint.contribution", "vs/workbench/contrib/terminalContrib/developer/browser/terminal.developer.contribution", "vs/workbench/contrib/terminalContrib/environmentChanges/browser/terminal.environmentChanges.contribution", "vs/workbench/contrib/terminalContrib/links/browser/terminal.links.contribution", "vs/workbench/contrib/terminalContrib/quickFix/browser/terminal.quickFix.contribution", "vs/workbench/contrib/terminalContrib/stickyScroll/browser/terminal.stickyScroll.contribution", "vs/workbench/contrib/terminalContrib/suggest/browser/terminal.suggest.contribution", "vs/workbench/contrib/terminalContrib/zoom/browser/terminal.zoom.contribution", "vs/workbench/contrib/testing/browser/testingViewPaneContainer", "vs/workbench/contrib/testing/browser/testing.contribution", "vs/workbench/contrib/timeline/browser/timeline.contribution", "vs/workbench/contrib/userDataSync/browser/userDataSyncConflictsView", "vs/workbench/contrib/userDataSync/browser/userDataSyncViews", "vs/workbench/contrib/userDataSync/browser/userDataSync", "vs/workbench/contrib/userDataSync/browser/userDataSync.contribution", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStarted", "vs/workbench/contrib/welcomeGettingStarted/browser/gettingStarted.contribution", "vs/workbench/electron-sandbox/parts/titlebar/titlebarPart", "vs/workbench/electron-sandbox/desktop.contribution", "vs/workbench/services/title/electron-sandbox/titleService", "vs/workbench/services/userDataProfile/browser/userDataProfileImportExportService", "vs/workbench/services/views/browser/viewDescriptorService", "vs/workbench/contrib/terminal/browser/terminalGroup", "vs/workbench/contrib/terminal/browser/terminalGroupService", "vs/workbench/contrib/editSessions/common/workspaceStateSync", "vs/workbench/contrib/editSessions/browser/editSessions.contribution", "vs/workbench/api/browser/mainThreadCLICommands", "vs/workbench/contrib/chat/browser/chatContentParts/chatMarkdownContentPart", "vs/workbench/contrib/chat/browser/chatListRenderer", "vs/workbench/contrib/chat/browser/chatEditor", "vs/workbench/contrib/chat/browser/chatQuick", "vs/workbench/contrib/chat/browser/chatViewPane", "vs/workbench/contrib/chat/browser/chatParticipantContributions", "vs/workbench/api/browser/mainThreadChatAgents2", "vs/workbench/api/browser/extensionHost.contribution", "vs/workbench/contrib/chat/browser/chatVariables", "vs/workbench/contrib/chat/browser/contrib/chatInputCompletions", "vs/workbench/contrib/chat/browser/contrib/chatInputEditorContrib", "vs/workbench/contrib/chat/browser/contrib/chatInputEditorHover", "vs/workbench/contrib/extensions/browser/deprecatedExtensionsChecker", "vs/workbench/contrib/extensions/browser/extensionRecommendationNotificationService", "vs/workbench/contrib/extensions/browser/extensionsViewer", "vs/workbench/contrib/extensions/browser/extensionEditor", "vs/workbench/contrib/extensions/browser/extensionsWorkbenchService", "vs/workbench/contrib/extensions/browser/extensions.contribution", "vs/workbench/contrib/extensions/electron-sandbox/remoteExtensionsInit", "vs/workbench/contrib/extensions/electron-sandbox/extensions.contribution", "vs/workbench/contrib/inlineChat/browser/inlineChatContentWidget", "vs/workbench/contrib/inlineChat/browser/inlineChatZoneWidget", "vs/workbench/contrib/inlineChat/browser/inlineChatAccessibleView", "vs/workbench/contrib/inlineChat/browser/inlineChatNotebook", "vs/workbench/contrib/inlineChat/browser/inlineChatSavingServiceImpl", "vs/workbench/contrib/inlineChat/browser/inlineChat.contribution", "vs/workbench/contrib/notebook/browser/controller/chat/cellChatActions", "vs/workbench/contrib/notebook/browser/controller/chat/notebook.chat.contribution", "vs/workbench/contrib/notebook/browser/contrib/editorStatusBar/editorStatusBar", "vs/workbench/contrib/notebook/browser/controller/executeActions", "vs/workbench/contrib/notebook/browser/controller/sectionActions", "vs/workbench/contrib/notebook/browser/services/notebookServiceImpl", "vs/workbench/contrib/notebook/browser/contrib/cellDiagnostics/cellDiagnosticEditorContrib", "vs/workbench/contrib/notebook/browser/contrib/viewportWarmup/viewportWarmup", "vs/workbench/contrib/notebook/browser/view/cellParts/cellStatusPart", "vs/workbench/contrib/notebook/browser/view/cellParts/codeCell", "vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer", "vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl", "vs/workbench/contrib/interactive/browser/interactiveEditor", "vs/workbench/contrib/notebook/browser/contrib/cellDiagnostics/diagnosticCellStatusBarContrib", "vs/workbench/contrib/notebook/browser/contrib/cellDiagnostics/cellDiagnostics", "vs/workbench/contrib/notebook/browser/contrib/debug/notebookDebugDecorations", "vs/workbench/contrib/notebook/browser/diff/notebookDiffActions", "vs/workbench/contrib/notebook/browser/services/notebookEditorServiceImpl", "vs/workbench/contrib/notebook/browser/notebook.contribution", "vs/workbench/contrib/quickaccess/browser/commandsQuickAccess", "vs/workbench/contrib/quickaccess/browser/quickAccess.contribution", "vs/workbench/contrib/interactive/browser/interactive.contribution", "vs/workbench/contrib/chat/browser/actions/chatContextActions", "vs/workbench/contrib/chat/browser/chat.contribution", "vs/workbench/contrib/search/browser/replaceService", "vs/workbench/contrib/search/browser/replaceContributions", "vs/workbench/contrib/search/browser/searchActionsCopy", "vs/workbench/contrib/search/browser/searchActionsRemoveReplace", "vs/workbench/contrib/search/browser/searchActionsTopBar", "vs/workbench/contrib/search/browser/searchResultsView", "vs/workbench/contrib/searchEditor/browser/searchEditor", "vs/workbench/contrib/searchEditor/browser/searchEditorModel", "vs/workbench/contrib/search/browser/searchActionsNav", "vs/workbench/contrib/search/browser/searchActionsTextQuickAccess", "vs/workbench/contrib/search/browser/search.contribution", "vs/workbench/contrib/searchEditor/browser/searchEditor.contribution", "vs/workbench/contrib/terminal/browser/terminalWslRecommendationContribution", "vs/workbench/contrib/terminal/browser/terminal.contribution", "vs/workbench/contrib/terminalContrib/chat/browser/terminalChatWidget", "vs/workbench/contrib/chat/electron-sandbox/chat.contribution", "vs/workbench/contrib/inlineChat/electron-sandbox/inlineChatActions", "vs/workbench/contrib/inlineChat/electron-sandbox/inlineChat.contribution", "vs/workbench/contrib/terminalContrib/chat/browser/terminalChatAccessibilityHelp", "vs/workbench/contrib/terminalContrib/chat/browser/terminalChatAccessibleView", "vs/workbench/contrib/terminalContrib/chat/browser/terminalChatActions", "vs/workbench/contrib/terminalContrib/chat/browser/terminalChatEnabler", "vs/workbench/contrib/terminalContrib/chat/browser/terminal.chat.contribution", "vs/workbench/contrib/terminalContrib/find/browser/terminal.find.contribution", "vs/workbench/contrib/terminal/terminal.all", "vs/workbench/contrib/workspace/browser/workspaceTrustEditor", "vs/workbench/contrib/workspace/browser/workspace.contribution", "vs/workbench/services/extensionManagement/browser/extensionEnablementService", "vs/workbench/services/extensionManagement/common/extensionManagementService", "vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementService", "vs/workbench/services/extensionManagement/electron-sandbox/remoteExtensionManagementService", "vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementServerService", "vs/workbench/services/extensions/common/abstractExtensionService", "vs/workbench/services/extensions/electron-sandbox/nativeExtensionService", "vs/workbench/services/workspaces/electron-sandbox/workspaceEditingService", "vs/workbench/services/workspaces/electron-sandbox/workspacesService", "vs/workbench/workbench.common.main", "vs/workbench/workbench.desktop.main"]
      , be = function(ce) {
        for (var e = [], t = 0, n = ce.length; t < n; t++)
            e[t] = ge[ce[t]];
        return e
    };
    define(ge[1325], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$RV = t,
        e.$SV = n,
        e.$TV = C;
        async function t(I) {
            const L = navigator.usb;
            if (!L)
                return;
            const y = await L.requestDevice({
                filters: I?.filters ?? []
            });
            if (y)
                return {
                    deviceClass: y.deviceClass,
                    deviceProtocol: y.deviceProtocol,
                    deviceSubclass: y.deviceSubclass,
                    deviceVersionMajor: y.deviceVersionMajor,
                    deviceVersionMinor: y.deviceVersionMinor,
                    deviceVersionSubminor: y.deviceVersionSubminor,
                    manufacturerName: y.manufacturerName,
                    productId: y.productId,
                    productName: y.productName,
                    serialNumber: y.serialNumber,
                    usbVersionMajor: y.usbVersionMajor,
                    usbVersionMinor: y.usbVersionMinor,
                    usbVersionSubminor: y.usbVersionSubminor,
                    vendorId: y.vendorId
                }
        }
        async function n(I) {
            const L = navigator.serial;
            if (!L)
                return;
            const y = await L.requestPort({
                filters: I?.filters ?? []
            });
            if (!y)
                return;
            const E = y.getInfo();
            return {
                usbVendorId: E.usbVendorId,
                usbProductId: E.usbProductId
            }
        }
        async function C(I) {
            const L = navigator.hid;
            if (!L)
                return;
            const y = await L.requestDevice({
                filters: I?.filters ?? []
            });
            if (!y.length)
                return;
            const E = y[0];
            return {
                opened: E.opened,
                vendorId: E.vendorId,
                productId: E.productId,
                productName: E.productName,
                collections: E.collections
            }
        }
    });
    /*! @license DOMPurify 3.0.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.5/LICENSE */
    const {entries: Fn, setPrototypeOf: zn, isFrozen: Ms, getPrototypeOf: Rs, getOwnPropertyDescriptor: Os} = Object;
    let {freeze: Ri, seal: ji, create: Ns} = Object
      , {apply: mn, construct: $n} = typeof Reflect < "u" && Reflect;
    mn || (mn = function(e, t, n) {
        return e.apply(t, n)
    }
    ),
    Ri || (Ri = function(e) {
        return e
    }
    ),
    ji || (ji = function(e) {
        return e
    }
    ),
    $n || ($n = function(e, t) {
        return new e(...t)
    }
    );
    const Fs = Fi(Array.prototype.forEach)
      , Bn = Fi(Array.prototype.pop)
      , tn = Fi(Array.prototype.push)
      , an = Fi(String.prototype.toLowerCase)
      , wn = Fi(String.prototype.toString)
      , zs = Fi(String.prototype.match)
      , Wi = Fi(String.prototype.replace)
      , Bs = Fi(String.prototype.indexOf)
      , js = Fi(String.prototype.trim)
      , Ni = Fi(RegExp.prototype.test)
      , nn = Ws(TypeError);
    function Fi(ce) {
        return function(e) {
            for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), C = 1; C < t; C++)
                n[C - 1] = arguments[C];
            return mn(ce, e, n)
        }
    }
    function Ws(ce) {
        return function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                t[n] = arguments[n];
            return $n(ce, t)
        }
    }
    function Ei(ce, e, t) {
        var n;
        t = (n = t) !== null && n !== void 0 ? n : an,
        zn && zn(ce, null);
        let C = e.length;
        for (; C--; ) {
            let I = e[C];
            if (typeof I == "string") {
                const L = t(I);
                L !== I && (Ms(e) || (e[C] = L),
                I = L)
            }
            ce[I] = !0
        }
        return ce
    }
    function _i(ce) {
        const e = Ns(null);
        for (const [t,n] of Fn(ce))
            e[t] = n;
        return e
    }
    function ln(ce, e) {
        for (; ce !== null; ) {
            const n = Os(ce, e);
            if (n) {
                if (n.get)
                    return Fi(n.get);
                if (typeof n.value == "function")
                    return Fi(n.value)
            }
            ce = Rs(ce)
        }
        function t(n) {
            return console.warn("fallback value for", n),
            null
        }
        return t
    }
    const jn = Ri(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"])
      , vn = Ri(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"])
      , yn = Ri(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"])
      , Vs = Ri(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"])
      , Cn = Ri(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"])
      , xs = Ri(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"])
      , Wn = Ri(["#text"])
      , Vn = Ri(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "xmlns", "slot"])
      , En = Ri(["accent-height", "accumulate", "additive", "alignment-baseline", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"])
      , xn = Ri(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"])
      , cn = Ri(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"])
      , Hs = ji(/\{\{[\w\W]*|[\w\W]*\}\}/gm)
      , Us = ji(/<%[\w\W]*|[\w\W]*%>/gm)
      , Ks = ji(/\${[\w\W]*}/gm)
      , qs = ji(/^data-[\-\w.\u00B7-\uFFFF]/)
      , Gs = ji(/^aria-[\-\w]+$/)
      , Hn = ji(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i)
      , Zs = ji(/^(?:\w+script|data):/i)
      , Xs = ji(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g)
      , Un = ji(/^html$/i);
    var Kn = Object.freeze({
        __proto__: null,
        MUSTACHE_EXPR: Hs,
        ERB_EXPR: Us,
        TMPLIT_EXPR: Ks,
        DATA_ATTR: qs,
        ARIA_ATTR: Gs,
        IS_ALLOWED_URI: Hn,
        IS_SCRIPT_OR_DATA: Zs,
        ATTR_WHITESPACE: Xs,
        DOCTYPE_NAME: Un
    });
    const Js = ()=>typeof window > "u" ? null : window
      , Ys = function(e, t) {
        if (typeof e != "object" || typeof e.createPolicy != "function")
            return null;
        let n = null;
        const C = "data-tt-policy-suffix";
        t && t.hasAttribute(C) && (n = t.getAttribute(C));
        const I = "dompurify" + (n ? "#" + n : "");
        try {
            return e.createPolicy(I, {
                createHTML(L) {
                    return L
                },
                createScriptURL(L) {
                    return L
                }
            })
        } catch {
            return console.warn("TrustedTypes policy " + I + " could not be created."),
            null
        }
    };
    function qn() {
        let ce = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Js();
        const e = _e=>qn(_e);
        if (e.version = "3.0.5",
        e.removed = [],
        !ce || !ce.document || ce.document.nodeType !== 9)
            return e.isSupported = !1,
            e;
        const t = ce.document
          , n = t.currentScript;
        let {document: C} = ce;
        const {DocumentFragment: I, HTMLTemplateElement: L, Node: y, Element: E, NodeFilter: $, NamedNodeMap: v=ce.NamedNodeMap || ce.MozNamedAttrMap, HTMLFormElement: f, DOMParser: g, trustedTypes: p} = ce
          , i = E.prototype
          , c = ln(i, "cloneNode")
          , h = ln(i, "nextSibling")
          , a = ln(i, "childNodes")
          , d = ln(i, "parentNode");
        if (typeof L == "function") {
            const _e = C.createElement("template");
            _e.content && _e.content.ownerDocument && (C = _e.content.ownerDocument)
        }
        let u, s = "";
        const {implementation: r, createNodeIterator: l, createDocumentFragment: o, getElementsByTagName: b} = C
          , {importNode: m} = t;
        let w = {};
        e.isSupported = typeof Fn == "function" && typeof d == "function" && r && r.createHTMLDocument !== void 0;
        const {MUSTACHE_EXPR: S, ERB_EXPR: T, TMPLIT_EXPR: D, DATA_ATTR: k, ARIA_ATTR: P, IS_SCRIPT_OR_DATA: A, ATTR_WHITESPACE: M} = Kn;
        let {IS_ALLOWED_URI: O} = Kn
          , R = null;
        const N = Ei({}, [...jn, ...vn, ...yn, ...Cn, ...Wn]);
        let z = null;
        const V = Ei({}, [...Vn, ...En, ...xn, ...cn]);
        let B = Object.seal(Object.create(null, {
            tagNameCheck: {
                writable: !0,
                configurable: !1,
                enumerable: !0,
                value: null
            },
            attributeNameCheck: {
                writable: !0,
                configurable: !1,
                enumerable: !0,
                value: null
            },
            allowCustomizedBuiltInElements: {
                writable: !0,
                configurable: !1,
                enumerable: !0,
                value: !1
            }
        }))
          , j = null
          , W = null
          , q = !0
          , H = !0
          , U = !1
          , K = !0
          , G = !1
          , Z = !1
          , x = !1
          , X = !1
          , Y = !1
          , Q = !1
          , _ = !1
          , ae = !0
          , re = !1;
        const se = "user-content-";
        let ee = !0
          , J = !1
          , te = {}
          , ne = null;
        const le = Ei({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
        let ie = null;
        const oe = Ei({}, ["audio", "video", "img", "source", "image", "track"]);
        let fe = null;
        const he = Ei({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"])
          , ue = "http://www.w3.org/1998/Math/MathML"
          , de = "http://www.w3.org/2000/svg"
          , $e = "http://www.w3.org/1999/xhtml";
        let pe = $e
          , ve = !1
          , me = null;
        const we = Ei({}, [ue, de, $e], wn);
        let ye;
        const Le = ["application/xhtml+xml", "text/html"]
          , De = "text/html";
        let Pe, ze = null;
        const Be = C.createElement("form")
          , Me = function(Ve) {
            return Ve instanceof RegExp || Ve instanceof Function
        }
          , Ae = function(Ve) {
            if (!(ze && ze === Ve)) {
                if ((!Ve || typeof Ve != "object") && (Ve = {}),
                Ve = _i(Ve),
                ye = Le.indexOf(Ve.PARSER_MEDIA_TYPE) === -1 ? ye = De : ye = Ve.PARSER_MEDIA_TYPE,
                Pe = ye === "application/xhtml+xml" ? wn : an,
                R = "ALLOWED_TAGS"in Ve ? Ei({}, Ve.ALLOWED_TAGS, Pe) : N,
                z = "ALLOWED_ATTR"in Ve ? Ei({}, Ve.ALLOWED_ATTR, Pe) : V,
                me = "ALLOWED_NAMESPACES"in Ve ? Ei({}, Ve.ALLOWED_NAMESPACES, wn) : we,
                fe = "ADD_URI_SAFE_ATTR"in Ve ? Ei(_i(he), Ve.ADD_URI_SAFE_ATTR, Pe) : he,
                ie = "ADD_DATA_URI_TAGS"in Ve ? Ei(_i(oe), Ve.ADD_DATA_URI_TAGS, Pe) : oe,
                ne = "FORBID_CONTENTS"in Ve ? Ei({}, Ve.FORBID_CONTENTS, Pe) : le,
                j = "FORBID_TAGS"in Ve ? Ei({}, Ve.FORBID_TAGS, Pe) : {},
                W = "FORBID_ATTR"in Ve ? Ei({}, Ve.FORBID_ATTR, Pe) : {},
                te = "USE_PROFILES"in Ve ? Ve.USE_PROFILES : !1,
                q = Ve.ALLOW_ARIA_ATTR !== !1,
                H = Ve.ALLOW_DATA_ATTR !== !1,
                U = Ve.ALLOW_UNKNOWN_PROTOCOLS || !1,
                K = Ve.ALLOW_SELF_CLOSE_IN_ATTR !== !1,
                G = Ve.SAFE_FOR_TEMPLATES || !1,
                Z = Ve.WHOLE_DOCUMENT || !1,
                Y = Ve.RETURN_DOM || !1,
                Q = Ve.RETURN_DOM_FRAGMENT || !1,
                _ = Ve.RETURN_TRUSTED_TYPE || !1,
                X = Ve.FORCE_BODY || !1,
                ae = Ve.SANITIZE_DOM !== !1,
                re = Ve.SANITIZE_NAMED_PROPS || !1,
                ee = Ve.KEEP_CONTENT !== !1,
                J = Ve.IN_PLACE || !1,
                O = Ve.ALLOWED_URI_REGEXP || Hn,
                pe = Ve.NAMESPACE || $e,
                B = Ve.CUSTOM_ELEMENT_HANDLING || {},
                Ve.CUSTOM_ELEMENT_HANDLING && Me(Ve.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (B.tagNameCheck = Ve.CUSTOM_ELEMENT_HANDLING.tagNameCheck),
                Ve.CUSTOM_ELEMENT_HANDLING && Me(Ve.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (B.attributeNameCheck = Ve.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),
                Ve.CUSTOM_ELEMENT_HANDLING && typeof Ve.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (B.allowCustomizedBuiltInElements = Ve.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),
                G && (H = !1),
                Q && (Y = !0),
                te && (R = Ei({}, [...Wn]),
                z = [],
                te.html === !0 && (Ei(R, jn),
                Ei(z, Vn)),
                te.svg === !0 && (Ei(R, vn),
                Ei(z, En),
                Ei(z, cn)),
                te.svgFilters === !0 && (Ei(R, yn),
                Ei(z, En),
                Ei(z, cn)),
                te.mathMl === !0 && (Ei(R, Cn),
                Ei(z, xn),
                Ei(z, cn))),
                Ve.ADD_TAGS && (R === N && (R = _i(R)),
                Ei(R, Ve.ADD_TAGS, Pe)),
                Ve.ADD_ATTR && (z === V && (z = _i(z)),
                Ei(z, Ve.ADD_ATTR, Pe)),
                Ve.ADD_URI_SAFE_ATTR && Ei(fe, Ve.ADD_URI_SAFE_ATTR, Pe),
                Ve.FORBID_CONTENTS && (ne === le && (ne = _i(ne)),
                Ei(ne, Ve.FORBID_CONTENTS, Pe)),
                ee && (R["#text"] = !0),
                Z && Ei(R, ["html", "head", "body"]),
                R.table && (Ei(R, ["tbody"]),
                delete j.tbody),
                Ve.TRUSTED_TYPES_POLICY) {
                    if (typeof Ve.TRUSTED_TYPES_POLICY.createHTML != "function")
                        throw nn('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
                    if (typeof Ve.TRUSTED_TYPES_POLICY.createScriptURL != "function")
                        throw nn('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
                    u = Ve.TRUSTED_TYPES_POLICY,
                    s = u.createHTML("")
                } else
                    u === void 0 && (u = Ys(p, n)),
                    u !== null && typeof s == "string" && (s = u.createHTML(""));
                Ri && Ri(Ve),
                ze = Ve
            }
        }
          , Se = Ei({}, ["mi", "mo", "mn", "ms", "mtext"])
          , Ce = Ei({}, ["foreignobject", "desc", "title", "annotation-xml"])
          , ke = Ei({}, ["title", "style", "font", "a", "script"])
          , je = Ei({}, vn);
        Ei(je, yn),
        Ei(je, Vs);
        const Ie = Ei({}, Cn);
        Ei(Ie, xs);
        const Te = function(Ve) {
            let Ze = d(Ve);
            (!Ze || !Ze.tagName) && (Ze = {
                namespaceURI: pe,
                tagName: "template"
            });
            const st = an(Ve.tagName)
              , ft = an(Ze.tagName);
            return me[Ve.namespaceURI] ? Ve.namespaceURI === de ? Ze.namespaceURI === $e ? st === "svg" : Ze.namespaceURI === ue ? st === "svg" && (ft === "annotation-xml" || Se[ft]) : !!je[st] : Ve.namespaceURI === ue ? Ze.namespaceURI === $e ? st === "math" : Ze.namespaceURI === de ? st === "math" && Ce[ft] : !!Ie[st] : Ve.namespaceURI === $e ? Ze.namespaceURI === de && !Ce[ft] || Ze.namespaceURI === ue && !Se[ft] ? !1 : !Ie[st] && (ke[st] || !je[st]) : !!(ye === "application/xhtml+xml" && me[Ve.namespaceURI]) : !1
        }
          , Ne = function(Ve) {
            tn(e.removed, {
                element: Ve
            });
            try {
                Ve.parentNode.removeChild(Ve)
            } catch {
                Ve.remove()
            }
        }
          , Oe = function(Ve, Ze) {
            try {
                tn(e.removed, {
                    attribute: Ze.getAttributeNode(Ve),
                    from: Ze
                })
            } catch {
                tn(e.removed, {
                    attribute: null,
                    from: Ze
                })
            }
            if (Ze.removeAttribute(Ve),
            Ve === "is" && !z[Ve])
                if (Y || Q)
                    try {
                        Ne(Ze)
                    } catch {}
                else
                    try {
                        Ze.setAttribute(Ve, "")
                    } catch {}
        }
          , Fe = function(Ve) {
            let Ze, st;
            if (X)
                Ve = "<remove></remove>" + Ve;
            else {
                const Tt = zs(Ve, /^[\r\n\t ]+/);
                st = Tt && Tt[0]
            }
            ye === "application/xhtml+xml" && pe === $e && (Ve = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + Ve + "</body></html>");
            const ft = u ? u.createHTML(Ve) : Ve;
            if (pe === $e)
                try {
                    Ze = new g().parseFromString(ft, ye)
                } catch {}
            if (!Ze || !Ze.documentElement) {
                Ze = r.createDocument(pe, "template", null);
                try {
                    Ze.documentElement.innerHTML = ve ? s : ft
                } catch {}
            }
            const lt = Ze.body || Ze.documentElement;
            return Ve && st && lt.insertBefore(C.createTextNode(st), lt.childNodes[0] || null),
            pe === $e ? b.call(Ze, Z ? "html" : "body")[0] : Z ? Ze.documentElement : lt
        }
          , Re = function(Ve) {
            return l.call(Ve.ownerDocument || Ve, Ve, $.SHOW_ELEMENT | $.SHOW_COMMENT | $.SHOW_TEXT, null, !1)
        }
          , We = function(Ve) {
            return Ve instanceof f && (typeof Ve.nodeName != "string" || typeof Ve.textContent != "string" || typeof Ve.removeChild != "function" || !(Ve.attributes instanceof v) || typeof Ve.removeAttribute != "function" || typeof Ve.setAttribute != "function" || typeof Ve.namespaceURI != "string" || typeof Ve.insertBefore != "function" || typeof Ve.hasChildNodes != "function")
        }
          , Ue = function(Ve) {
            return typeof y == "object" ? Ve instanceof y : Ve && typeof Ve == "object" && typeof Ve.nodeType == "number" && typeof Ve.nodeName == "string"
        }
          , He = function(Ve, Ze, st) {
            w[Ve] && Fs(w[Ve], ft=>{
                ft.call(e, Ze, st, ze)
            }
            )
        }
          , Ge = function(Ve) {
            let Ze;
            if (He("beforeSanitizeElements", Ve, null),
            We(Ve))
                return Ne(Ve),
                !0;
            const st = Pe(Ve.nodeName);
            if (He("uponSanitizeElement", Ve, {
                tagName: st,
                allowedTags: R
            }),
            Ve.hasChildNodes() && !Ue(Ve.firstElementChild) && (!Ue(Ve.content) || !Ue(Ve.content.firstElementChild)) && Ni(/<[/\w]/g, Ve.innerHTML) && Ni(/<[/\w]/g, Ve.textContent))
                return Ne(Ve),
                !0;
            if (!R[st] || j[st]) {
                if (!j[st] && Qe(st) && (B.tagNameCheck instanceof RegExp && Ni(B.tagNameCheck, st) || B.tagNameCheck instanceof Function && B.tagNameCheck(st)))
                    return !1;
                if (ee && !ne[st]) {
                    const ft = d(Ve) || Ve.parentNode
                      , lt = a(Ve) || Ve.childNodes;
                    if (lt && ft) {
                        const Tt = lt.length;
                        for (let St = Tt - 1; St >= 0; --St)
                            ft.insertBefore(c(lt[St], !0), h(Ve))
                    }
                }
                return Ne(Ve),
                !0
            }
            return Ve instanceof E && !Te(Ve) || (st === "noscript" || st === "noembed" || st === "noframes") && Ni(/<\/no(script|embed|frames)/i, Ve.innerHTML) ? (Ne(Ve),
            !0) : (G && Ve.nodeType === 3 && (Ze = Ve.textContent,
            Ze = Wi(Ze, S, " "),
            Ze = Wi(Ze, T, " "),
            Ze = Wi(Ze, D, " "),
            Ve.textContent !== Ze && (tn(e.removed, {
                element: Ve.cloneNode()
            }),
            Ve.textContent = Ze)),
            He("afterSanitizeElements", Ve, null),
            !1)
        }
          , et = function(Ve, Ze, st) {
            if (ae && (Ze === "id" || Ze === "name") && (st in C || st in Be))
                return !1;
            if (!(H && !W[Ze] && Ni(k, Ze))) {
                if (!(q && Ni(P, Ze))) {
                    if (!z[Ze] || W[Ze]) {
                        if (!(Qe(Ve) && (B.tagNameCheck instanceof RegExp && Ni(B.tagNameCheck, Ve) || B.tagNameCheck instanceof Function && B.tagNameCheck(Ve)) && (B.attributeNameCheck instanceof RegExp && Ni(B.attributeNameCheck, Ze) || B.attributeNameCheck instanceof Function && B.attributeNameCheck(Ze)) || Ze === "is" && B.allowCustomizedBuiltInElements && (B.tagNameCheck instanceof RegExp && Ni(B.tagNameCheck, st) || B.tagNameCheck instanceof Function && B.tagNameCheck(st))))
                            return !1
                    } else if (!fe[Ze]) {
                        if (!Ni(O, Wi(st, M, ""))) {
                            if (!((Ze === "src" || Ze === "xlink:href" || Ze === "href") && Ve !== "script" && Bs(st, "data:") === 0 && ie[Ve])) {
                                if (!(U && !Ni(A, Wi(st, M, "")))) {
                                    if (st)
                                        return !1
                                }
                            }
                        }
                    }
                }
            }
            return !0
        }
          , Qe = function(Ve) {
            return Ve.indexOf("-") > 0
        }
          , tt = function(Ve) {
            let Ze, st, ft, lt;
            He("beforeSanitizeAttributes", Ve, null);
            const {attributes: Tt} = Ve;
            if (!Tt)
                return;
            const St = {
                attrName: "",
                attrValue: "",
                keepAttr: !0,
                allowedAttributes: z
            };
            for (lt = Tt.length; lt--; ) {
                Ze = Tt[lt];
                const {name: kt, namespaceURI: Rt} = Ze;
                if (st = kt === "value" ? Ze.value : js(Ze.value),
                ft = Pe(kt),
                St.attrName = ft,
                St.attrValue = st,
                St.keepAttr = !0,
                St.forceKeepAttr = void 0,
                He("uponSanitizeAttribute", Ve, St),
                st = St.attrValue,
                St.forceKeepAttr || (Oe(kt, Ve),
                !St.keepAttr))
                    continue;
                if (!K && Ni(/\/>/i, st)) {
                    Oe(kt, Ve);
                    continue
                }
                G && (st = Wi(st, S, " "),
                st = Wi(st, T, " "),
                st = Wi(st, D, " "));
                const Nt = Pe(Ve.nodeName);
                if (et(Nt, ft, st)) {
                    if (re && (ft === "id" || ft === "name") && (Oe(kt, Ve),
                    st = se + st),
                    u && typeof p == "object" && typeof p.getAttributeType == "function" && !Rt)
                        switch (p.getAttributeType(Nt, ft)) {
                        case "TrustedHTML":
                            {
                                st = u.createHTML(st);
                                break
                            }
                        case "TrustedScriptURL":
                            {
                                st = u.createScriptURL(st);
                                break
                            }
                        }
                    try {
                        Rt ? Ve.setAttributeNS(Rt, kt, st) : Ve.setAttribute(kt, st),
                        Bn(e.removed)
                    } catch {}
                }
            }
            He("afterSanitizeAttributes", Ve, null)
        }
          , ut = function _e(Ve) {
            let Ze;
            const st = Re(Ve);
            for (He("beforeSanitizeShadowDOM", Ve, null); Ze = st.nextNode(); )
                He("uponSanitizeShadowNode", Ze, null),
                !Ge(Ze) && (Ze.content instanceof I && _e(Ze.content),
                tt(Ze));
            He("afterSanitizeShadowDOM", Ve, null)
        };
        return e.sanitize = function(_e) {
            let Ve = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, Ze, st, ft, lt;
            if (ve = !_e,
            ve && (_e = "<!-->"),
            typeof _e != "string" && !Ue(_e))
                if (typeof _e.toString == "function") {
                    if (_e = _e.toString(),
                    typeof _e != "string")
                        throw nn("dirty is not a string, aborting")
                } else
                    throw nn("toString is not a function");
            if (!e.isSupported)
                return _e;
            if (x || Ae(Ve),
            e.removed = [],
            typeof _e == "string" && (J = !1),
            J) {
                if (_e.nodeName) {
                    const kt = Pe(_e.nodeName);
                    if (!R[kt] || j[kt])
                        throw nn("root node is forbidden and cannot be sanitized in-place")
                }
            } else if (_e instanceof y)
                Ze = Fe("<!---->"),
                st = Ze.ownerDocument.importNode(_e, !0),
                st.nodeType === 1 && st.nodeName === "BODY" || st.nodeName === "HTML" ? Ze = st : Ze.appendChild(st);
            else {
                if (!Y && !G && !Z && _e.indexOf("<") === -1)
                    return u && _ ? u.createHTML(_e) : _e;
                if (Ze = Fe(_e),
                !Ze)
                    return Y ? null : _ ? s : ""
            }
            Ze && X && Ne(Ze.firstChild);
            const Tt = Re(J ? _e : Ze);
            for (; ft = Tt.nextNode(); )
                Ge(ft) || (ft.content instanceof I && ut(ft.content),
                tt(ft));
            if (J)
                return _e;
            if (Y) {
                if (Q)
                    for (lt = o.call(Ze.ownerDocument); Ze.firstChild; )
                        lt.appendChild(Ze.firstChild);
                else
                    lt = Ze;
                return (z.shadowroot || z.shadowrootmode) && (lt = m.call(t, lt, !0)),
                lt
            }
            let St = Z ? Ze.outerHTML : Ze.innerHTML;
            return Z && R["!doctype"] && Ze.ownerDocument && Ze.ownerDocument.doctype && Ze.ownerDocument.doctype.name && Ni(Un, Ze.ownerDocument.doctype.name) && (St = "<!DOCTYPE " + Ze.ownerDocument.doctype.name + `>
` + St),
            G && (St = Wi(St, S, " "),
            St = Wi(St, T, " "),
            St = Wi(St, D, " ")),
            u && _ ? u.createHTML(St) : St
        }
        ,
        e.setConfig = function(_e) {
            Ae(_e),
            x = !0
        }
        ,
        e.clearConfig = function() {
            ze = null,
            x = !1
        }
        ,
        e.isValidAttribute = function(_e, Ve, Ze) {
            ze || Ae({});
            const st = Pe(_e)
              , ft = Pe(Ve);
            return et(st, ft, Ze)
        }
        ,
        e.addHook = function(_e, Ve) {
            typeof Ve == "function" && (w[_e] = w[_e] || [],
            tn(w[_e], Ve))
        }
        ,
        e.removeHook = function(_e) {
            if (w[_e])
                return Bn(w[_e])
        }
        ,
        e.removeHooks = function(_e) {
            w[_e] && (w[_e] = [])
        }
        ,
        e.removeAllHooks = function() {
            w = {}
        }
        ,
        e
    }
    var Qs = qn();
    define("vs/base/browser/dompurify/dompurify", function() {
        return Qs
    }),
    define(ge[155], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$oU = void 0,
        e.$pU = C;
        class t {
            constructor(L) {
                this.domNode = L,
                this.a = "",
                this.b = "",
                this.c = "",
                this.d = "",
                this.e = "",
                this.f = "",
                this.g = "",
                this.h = "",
                this.i = "",
                this.j = "",
                this.k = "",
                this.l = "",
                this.m = "",
                this.n = "",
                this.o = "",
                this.p = "",
                this.q = "",
                this.r = "",
                this.s = "",
                this.t = "",
                this.u = "",
                this.v = "",
                this.w = "",
                this.x = "",
                this.y = "",
                this.z = "",
                this.A = !1,
                this.B = "none",
                this.C = ""
            }
            setMaxWidth(L) {
                const y = n(L);
                this.a !== y && (this.a = y,
                this.domNode.style.maxWidth = this.a)
            }
            setWidth(L) {
                const y = n(L);
                this.b !== y && (this.b = y,
                this.domNode.style.width = this.b)
            }
            setHeight(L) {
                const y = n(L);
                this.c !== y && (this.c = y,
                this.domNode.style.height = this.c)
            }
            setTop(L) {
                const y = n(L);
                this.d !== y && (this.d = y,
                this.domNode.style.top = this.d)
            }
            setLeft(L) {
                const y = n(L);
                this.e !== y && (this.e = y,
                this.domNode.style.left = this.e)
            }
            setBottom(L) {
                const y = n(L);
                this.f !== y && (this.f = y,
                this.domNode.style.bottom = this.f)
            }
            setRight(L) {
                const y = n(L);
                this.g !== y && (this.g = y,
                this.domNode.style.right = this.g)
            }
            setPaddingTop(L) {
                const y = n(L);
                this.h !== y && (this.h = y,
                this.domNode.style.paddingTop = this.h)
            }
            setPaddingLeft(L) {
                const y = n(L);
                this.i !== y && (this.i = y,
                this.domNode.style.paddingLeft = this.i)
            }
            setPaddingBottom(L) {
                const y = n(L);
                this.j !== y && (this.j = y,
                this.domNode.style.paddingBottom = this.j)
            }
            setPaddingRight(L) {
                const y = n(L);
                this.k !== y && (this.k = y,
                this.domNode.style.paddingRight = this.k)
            }
            setFontFamily(L) {
                this.l !== L && (this.l = L,
                this.domNode.style.fontFamily = this.l)
            }
            setFontWeight(L) {
                this.m !== L && (this.m = L,
                this.domNode.style.fontWeight = this.m)
            }
            setFontSize(L) {
                const y = n(L);
                this.n !== y && (this.n = y,
                this.domNode.style.fontSize = this.n)
            }
            setFontStyle(L) {
                this.o !== L && (this.o = L,
                this.domNode.style.fontStyle = this.o)
            }
            setFontFeatureSettings(L) {
                this.p !== L && (this.p = L,
                this.domNode.style.fontFeatureSettings = this.p)
            }
            setFontVariationSettings(L) {
                this.q !== L && (this.q = L,
                this.domNode.style.fontVariationSettings = this.q)
            }
            setTextDecoration(L) {
                this.r !== L && (this.r = L,
                this.domNode.style.textDecoration = this.r)
            }
            setLineHeight(L) {
                const y = n(L);
                this.s !== y && (this.s = y,
                this.domNode.style.lineHeight = this.s)
            }
            setLetterSpacing(L) {
                const y = n(L);
                this.t !== y && (this.t = y,
                this.domNode.style.letterSpacing = this.t)
            }
            setClassName(L) {
                this.u !== L && (this.u = L,
                this.domNode.className = this.u)
            }
            toggleClassName(L, y) {
                this.domNode.classList.toggle(L, y),
                this.u = this.domNode.className
            }
            setDisplay(L) {
                this.v !== L && (this.v = L,
                this.domNode.style.display = this.v)
            }
            setPosition(L) {
                this.w !== L && (this.w = L,
                this.domNode.style.position = this.w)
            }
            setVisibility(L) {
                this.x !== L && (this.x = L,
                this.domNode.style.visibility = this.x)
            }
            setColor(L) {
                this.y !== L && (this.y = L,
                this.domNode.style.color = this.y)
            }
            setBackgroundColor(L) {
                this.z !== L && (this.z = L,
                this.domNode.style.backgroundColor = this.z)
            }
            setLayerHinting(L) {
                this.A !== L && (this.A = L,
                this.domNode.style.transform = this.A ? "translate3d(0px, 0px, 0px)" : "")
            }
            setBoxShadow(L) {
                this.C !== L && (this.C = L,
                this.domNode.style.boxShadow = L)
            }
            setContain(L) {
                this.B !== L && (this.B = L,
                this.domNode.style.contain = this.B)
            }
            setAttribute(L, y) {
                this.domNode.setAttribute(L, y)
            }
            removeAttribute(L) {
                this.domNode.removeAttribute(L)
            }
            appendChild(L) {
                this.domNode.appendChild(L.domNode)
            }
            removeChild(L) {
                this.domNode.removeChild(L.domNode)
            }
        }
        e.$oU = t;
        function n(I) {
            return typeof I == "number" ? `${I}px` : I
        }
        function C(I) {
            return new t(I)
        }
    }),
    define(ge[736], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$wS = void 0,
        e.$xS = I;
        const t = new WeakMap;
        function n(y) {
            if (!y.parent || y.parent === y)
                return null;
            try {
                const E = y.location
                  , $ = y.parent.location;
                if (E.origin !== "null" && $.origin !== "null" && E.origin !== $.origin)
                    return null
            } catch {
                return null
            }
            return y.parent
        }
        class C {
            static a(E) {
                let $ = t.get(E);
                if (!$) {
                    $ = [],
                    t.set(E, $);
                    let v = E, f;
                    do
                        f = n(v),
                        f ? $.push({
                            window: new WeakRef(v),
                            iframeElement: v.frameElement || null
                        }) : $.push({
                            window: new WeakRef(v),
                            iframeElement: null
                        }),
                        v = f;
                    while (v)
                }
                return $.slice(0)
            }
            static getPositionOfChildWindowRelativeToAncestorWindow(E, $) {
                if (!$ || E === $)
                    return {
                        top: 0,
                        left: 0
                    };
                let v = 0
                  , f = 0;
                const g = this.a(E);
                for (const p of g) {
                    const i = p.window.deref();
                    if (v += i?.scrollY ?? 0,
                    f += i?.scrollX ?? 0,
                    i === $ || !p.iframeElement)
                        break;
                    const c = p.iframeElement.getBoundingClientRect();
                    v += c.top,
                    f += c.left
                }
                return {
                    top: v,
                    left: f
                }
            }
        }
        e.$wS = C;
        async function I(y, E) {
            if (!crypto.subtle)
                throw new Error("'crypto.subtle' is not available so webviews will not work. This is likely because the editor is not running in a secure context (https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts).");
            const $ = JSON.stringify({
                parentOrigin: y,
                salt: E
            })
              , f = new TextEncoder().encode($)
              , g = await crypto.subtle.digest("sha-256", f);
            return L(g)
        }
        function L(y) {
            const $ = Array.from(new Uint8Array(y)).map(v=>v.toString(16).padStart(2, "0")).join("");
            return BigInt(`0x${$}`).toString(32).padStart(52, "0")
        }
    }),
    define(ge[737], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.inputLatency = void 0;
        var t;
        (function(n) {
            const C = {
                total: 0,
                min: Number.MAX_VALUE,
                max: 0
            }
              , I = {
                ...C
            }
              , L = {
                ...C
            }
              , y = {
                ...C
            };
            let E = 0, $;
            (function(S) {
                S[S.Before = 0] = "Before",
                S[S.InProgress = 1] = "InProgress",
                S[S.Finished = 2] = "Finished"
            }
            )($ || ($ = {}));
            const v = {
                keydown: $.Before,
                input: $.Before,
                render: $.Before
            };
            function f() {
                r(),
                performance.mark("inputlatency/start"),
                performance.mark("keydown/start"),
                v.keydown = $.InProgress,
                queueMicrotask(g)
            }
            n.onKeyDown = f;
            function g() {
                v.keydown === $.InProgress && (performance.mark("keydown/end"),
                v.keydown = $.Finished)
            }
            function p() {
                performance.mark("input/start"),
                v.input = $.InProgress,
                s()
            }
            n.onBeforeInput = p;
            function i() {
                v.input === $.Before && p(),
                queueMicrotask(c)
            }
            n.onInput = i;
            function c() {
                v.input === $.InProgress && (performance.mark("input/end"),
                v.input = $.Finished)
            }
            function h() {
                r()
            }
            n.onKeyUp = h;
            function a() {
                r()
            }
            n.onSelectionChange = a;
            function d() {
                v.keydown === $.Finished && v.input === $.Finished && v.render === $.Before && (performance.mark("render/start"),
                v.render = $.InProgress,
                queueMicrotask(u),
                s())
            }
            n.onRenderStart = d;
            function u() {
                v.render === $.InProgress && (performance.mark("render/end"),
                v.render = $.Finished)
            }
            function s() {
                setTimeout(r)
            }
            function r() {
                v.keydown === $.Finished && v.input === $.Finished && v.render === $.Finished && (performance.mark("inputlatency/end"),
                performance.measure("keydown", "keydown/start", "keydown/end"),
                performance.measure("input", "input/start", "input/end"),
                performance.measure("render", "render/start", "render/end"),
                performance.measure("inputlatency", "inputlatency/start", "inputlatency/end"),
                l("keydown", C),
                l("input", I),
                l("render", L),
                l("inputlatency", y),
                E++,
                o())
            }
            function l(S, T) {
                const D = performance.getEntriesByName(S)[0].duration;
                T.total += D,
                T.min = Math.min(T.min, D),
                T.max = Math.max(T.max, D)
            }
            function o() {
                performance.clearMarks("keydown/start"),
                performance.clearMarks("keydown/end"),
                performance.clearMarks("input/start"),
                performance.clearMarks("input/end"),
                performance.clearMarks("render/start"),
                performance.clearMarks("render/end"),
                performance.clearMarks("inputlatency/start"),
                performance.clearMarks("inputlatency/end"),
                performance.clearMeasures("keydown"),
                performance.clearMeasures("input"),
                performance.clearMeasures("render"),
                performance.clearMeasures("inputlatency"),
                v.keydown = $.Before,
                v.input = $.Before,
                v.render = $.Before
            }
            function b() {
                if (E === 0)
                    return;
                const S = {
                    keydown: m(C),
                    input: m(I),
                    render: m(L),
                    total: m(y),
                    sampleCount: E
                };
                return w(C),
                w(I),
                w(L),
                w(y),
                E = 0,
                S
            }
            n.getAndClearMeasurements = b;
            function m(S) {
                return {
                    average: S.total / E,
                    max: S.max,
                    min: S.min
                }
            }
            function w(S) {
                S.total = 0,
                S.min = Number.MAX_VALUE,
                S.max = 0
            }
        }
        )(t || (e.inputLatency = t = {}))
    }),
    define(ge[272], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$vV = n,
        e.$wV = C;
        let t = {
            showHover: ()=>{}
            ,
            hideHover: ()=>{}
            ,
            showAndFocusLastHover: ()=>{}
            ,
            setupManagedHover: ()=>null,
            showManagedHover: ()=>{}
        };
        function n(I) {
            t = I
        }
        function C() {
            return t
        }
    }),
    define(ge[319], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$$U = e.$0U = e.$9U = e.ListDragOverEffectPosition = e.ListDragOverEffectType = void 0;
        var t;
        (function(L) {
            L[L.Copy = 0] = "Copy",
            L[L.Move = 1] = "Move"
        }
        )(t || (e.ListDragOverEffectType = t = {}));
        var n;
        (function(L) {
            L.Over = "drop-target",
            L.Before = "drop-target-before",
            L.After = "drop-target-after"
        }
        )(n || (e.ListDragOverEffectPosition = n = {})),
        e.$9U = {
            reject() {
                return {
                    accept: !1
                }
            },
            accept() {
                return {
                    accept: !0
                }
            }
        };
        class C extends Error {
            constructor(y, E) {
                super(`ListError [${y}] ${E}`)
            }
        }
        e.$0U = C;
        class I {
            constructor() {
                this.c = new WeakMap
            }
            getHeight(y) {
                return this.c.get(y) ?? this.d(y)
            }
            setDynamicHeight(y, E) {
                E > 0 && this.c.set(y, E)
            }
        }
        e.$$U = I
    }),
    define(ge[1326], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$YU = void 0;
        class t {
            constructor(C) {
                this.a = C
            }
            splice(C, I, L) {
                this.a.forEach(y=>y.splice(C, I, L))
            }
        }
        e.$YU = t
    }),
    define(ge[930], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$UW = C,
        e.$VW = I;
        let n = ()=>({
            msLoopTime: -1,
            msDelayTime: -1,
            dispose: ()=>{}
        });
        function C(L) {
            n = L
        }
        function I(L, y) {
            return n(L, y)
        }
    }),
    define(ge[738], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$uU = void 0;
        const t = 20;
        class n {
            constructor(I, L, y, E, $, v) {
                this.a = Math.round(L),
                this.b = Math.round(y),
                this.c = Math.round(I),
                this.d = E,
                this.e = $,
                this.f = v,
                this.g = 0,
                this.h = !1,
                this.i = 0,
                this.j = 0,
                this.k = 0,
                this.m()
            }
            clone() {
                return new n(this.c,this.a,this.b,this.d,this.e,this.f)
            }
            setVisibleSize(I) {
                const L = Math.round(I);
                return this.d !== L ? (this.d = L,
                this.m(),
                !0) : !1
            }
            setScrollSize(I) {
                const L = Math.round(I);
                return this.e !== L ? (this.e = L,
                this.m(),
                !0) : !1
            }
            setScrollPosition(I) {
                const L = Math.round(I);
                return this.f !== L ? (this.f = L,
                this.m(),
                !0) : !1
            }
            setScrollbarSize(I) {
                this.a = Math.round(I)
            }
            setOppositeScrollbarSize(I) {
                this.b = Math.round(I)
            }
            static l(I, L, y, E, $) {
                const v = Math.max(0, y - I)
                  , f = Math.max(0, v - 2 * L)
                  , g = E > 0 && E > y;
                if (!g)
                    return {
                        computedAvailableSize: Math.round(v),
                        computedIsNeeded: g,
                        computedSliderSize: Math.round(f),
                        computedSliderRatio: 0,
                        computedSliderPosition: 0
                    };
                const p = Math.round(Math.max(t, Math.floor(y * f / E)))
                  , i = (f - p) / (E - y)
                  , c = $ * i;
                return {
                    computedAvailableSize: Math.round(v),
                    computedIsNeeded: g,
                    computedSliderSize: Math.round(p),
                    computedSliderRatio: i,
                    computedSliderPosition: Math.round(c)
                }
            }
            m() {
                const I = n.l(this.b, this.c, this.d, this.e, this.f);
                this.g = I.computedAvailableSize,
                this.h = I.computedIsNeeded,
                this.i = I.computedSliderSize,
                this.j = I.computedSliderRatio,
                this.k = I.computedSliderPosition
            }
            getArrowSize() {
                return this.c
            }
            getScrollPosition() {
                return this.f
            }
            getRectangleLargeSize() {
                return this.g
            }
            getRectangleSmallSize() {
                return this.a
            }
            isNeeded() {
                return this.h
            }
            getSliderSize() {
                return this.i
            }
            getSliderPosition() {
                return this.k
            }
            getDesiredScrollPositionFromOffset(I) {
                if (!this.h)
                    return 0;
                const L = I - this.c - this.i / 2;
                return Math.round(L / this.j)
            }
            getDesiredScrollPositionFromOffsetPaged(I) {
                if (!this.h)
                    return 0;
                const L = I - this.c;
                let y = this.f;
                return L < this.k ? y -= this.d : y += this.d,
                y
            }
            getDesiredScrollPositionFromDelta(I) {
                if (!this.h)
                    return 0;
                const L = this.k + I;
                return Math.round(L / this.j)
            }
        }
        e.$uU = n
    }),
    define(ge[215], be([1, 0, 319]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$0W = e.$9W = e.$8W = e.TreeDragOverBubble = e.TreeMouseEventTarget = e.ObjectTreeElementCollapseState = e.TreeVisibility = void 0;
        var n;
        (function($) {
            $[$.Hidden = 0] = "Hidden",
            $[$.Visible = 1] = "Visible",
            $[$.Recurse = 2] = "Recurse"
        }
        )(n || (e.TreeVisibility = n = {}));
        var C;
        (function($) {
            $[$.Expanded = 0] = "Expanded",
            $[$.Collapsed = 1] = "Collapsed",
            $[$.PreserveOrExpanded = 2] = "PreserveOrExpanded",
            $[$.PreserveOrCollapsed = 3] = "PreserveOrCollapsed"
        }
        )(C || (e.ObjectTreeElementCollapseState = C = {}));
        var I;
        (function($) {
            $[$.Unknown = 0] = "Unknown",
            $[$.Twistie = 1] = "Twistie",
            $[$.Element = 2] = "Element",
            $[$.Filter = 3] = "Filter"
        }
        )(I || (e.TreeMouseEventTarget = I = {}));
        var L;
        (function($) {
            $[$.Down = 0] = "Down",
            $[$.Up = 1] = "Up"
        }
        )(L || (e.TreeDragOverBubble = L = {})),
        e.$8W = {
            acceptBubbleUp() {
                return {
                    accept: !0,
                    bubble: L.Up
                }
            },
            acceptBubbleDown($=!1) {
                return {
                    accept: !0,
                    bubble: L.Down,
                    autoExpand: $
                }
            },
            acceptCopyBubbleUp() {
                return {
                    accept: !0,
                    bubble: L.Up,
                    effect: {
                        type: t.ListDragOverEffectType.Copy,
                        position: t.ListDragOverEffectPosition.Over
                    }
                }
            },
            acceptCopyBubbleDown($=!1) {
                return {
                    accept: !0,
                    bubble: L.Down,
                    effect: {
                        type: t.ListDragOverEffectType.Copy,
                        position: t.ListDragOverEffectPosition.Over
                    },
                    autoExpand: $
                }
            }
        };
        class y extends Error {
            constructor(v, f) {
                super(`TreeError [${v}] ${f}`)
            }
        }
        e.$9W = y;
        class E {
            constructor(v) {
                this.a = v,
                this.b = new WeakMap
            }
            map(v) {
                let f = this.b.get(v);
                return f || (f = this.a(v),
                this.b.set(v, f)),
                f
            }
        }
        e.$0W = E
    }),
    define(ge[78], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$_R = void 0,
        e.$$R = t,
        e.$aS = n;
        function t(C, I) {
            const L = C;
            typeof L.vscodeWindowId != "number" && Object.defineProperty(L, "vscodeWindowId", {
                get: ()=>I
            })
        }
        e.$_R = window;
        function n(C) {
            return C === e.$_R ? !1 : typeof C?.vscodeWindowId == "number"
        }
    }),
    define(ge[931], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$S = e.LoaderEventType = e.$R = void 0,
        e.$R = !1;
        var t;
        (function(C) {
            C[C.LoaderAvailable = 1] = "LoaderAvailable",
            C[C.BeginLoadingScript = 10] = "BeginLoadingScript",
            C[C.EndLoadingScriptOK = 11] = "EndLoadingScriptOK",
            C[C.EndLoadingScriptError = 12] = "EndLoadingScriptError",
            C[C.BeginInvokeFactory = 21] = "BeginInvokeFactory",
            C[C.EndInvokeFactory = 22] = "EndInvokeFactory",
            C[C.NodeBeginEvaluatingScript = 31] = "NodeBeginEvaluatingScript",
            C[C.NodeEndEvaluatingScript = 32] = "NodeEndEvaluatingScript",
            C[C.NodeBeginNativeRequire = 33] = "NodeBeginNativeRequire",
            C[C.NodeEndNativeRequire = 34] = "NodeEndNativeRequire",
            C[C.CachedDataFound = 60] = "CachedDataFound",
            C[C.CachedDataMissed = 61] = "CachedDataMissed",
            C[C.CachedDataRejected = 62] = "CachedDataRejected",
            C[C.CachedDataCreated = 63] = "CachedDataCreated"
        }
        )(t || (e.LoaderEventType = t = {}));
        class n {
            static get() {
                const I = new Map
                  , L = new Map
                  , y = new Map
                  , E = new Map;
                function $(i, c) {
                    i.has(c.detail) || i.set(c.detail, -c.timestamp)
                }
                function v(i, c) {
                    const h = i.get(c.detail);
                    h && (h >= 0 || i.set(c.detail, h + c.timestamp))
                }
                let f = [];
                typeof ce == "function" && typeof ce.getStats == "function" && (f = ce.getStats().slice(0).sort((i,c)=>i.timestamp - c.timestamp));
                for (const i of f)
                    switch (i.type) {
                    case t.BeginLoadingScript:
                        $(I, i);
                        break;
                    case t.EndLoadingScriptOK:
                    case t.EndLoadingScriptError:
                        v(I, i);
                        break;
                    case t.BeginInvokeFactory:
                        $(L, i);
                        break;
                    case t.EndInvokeFactory:
                        v(L, i);
                        break;
                    case t.NodeBeginNativeRequire:
                        $(y, i);
                        break;
                    case t.NodeEndNativeRequire:
                        v(y, i);
                        break;
                    case t.NodeBeginEvaluatingScript:
                        $(E, i);
                        break;
                    case t.NodeEndEvaluatingScript:
                        v(E, i);
                        break
                    }
                let g = 0;
                y.forEach(i=>g += i);
                function p(i) {
                    const c = [];
                    return i.forEach((h,a)=>c.push([a, h])),
                    c
                }
                return {
                    amdLoad: p(I),
                    amdInvoke: p(L),
                    nodeRequire: p(y),
                    nodeEval: p(E),
                    nodeRequireTotal: g
                }
            }
            static toMarkdownTable(I, L) {
                let y = "";
                const E = [];
                return I.forEach(($,v)=>{
                    E[v] = $.length
                }
                ),
                L.forEach($=>{
                    $.forEach((v,f)=>{
                        typeof v > "u" && (v = $[f] = "-");
                        const g = v.toString().length;
                        E[f] = Math.max(g, E[f])
                    }
                    )
                }
                ),
                I.forEach(($,v)=>{
                    y += `| ${$ + " ".repeat(E[v] - $.toString().length)} `
                }
                ),
                y += `|
`,
                I.forEach(($,v)=>{
                    y += `| ${"-".repeat(E[v])} `
                }
                ),
                y += `|
`,
                L.forEach($=>{
                    $.forEach((v,f)=>{
                        typeof v < "u" && (y += `| ${v + " ".repeat(E[f] - v.toString().length)} `)
                    }
                    ),
                    y += `|
`
                }
                ),
                y
            }
        }
        e.$S = n
    }),
    define(ge[171], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$lb = void 0,
        e.$eb = t,
        e.$fb = n,
        e.$gb = C,
        e.$hb = I,
        e.$ib = L,
        e.$jb = y,
        e.$kb = E,
        e.$mb = v,
        e.$nb = f,
        e.$ob = g,
        e.$pb = p,
        e.$qb = i;
        function t(c, h) {
            const a = n(c, h);
            if (a !== -1)
                return c[a]
        }
        function n(c, h, a=c.length - 1) {
            for (let d = a; d >= 0; d--) {
                const u = c[d];
                if (h(u))
                    return d
            }
            return -1
        }
        function C(c, h) {
            const a = I(c, h);
            return a === -1 ? void 0 : c[a]
        }
        function I(c, h, a=0, d=c.length) {
            let u = a
              , s = d;
            for (; u < s; ) {
                const r = Math.floor((u + s) / 2);
                h(c[r]) ? u = r + 1 : s = r
            }
            return u - 1
        }
        function L(c, h) {
            const a = y(c, h);
            return a === c.length ? void 0 : c[a]
        }
        function y(c, h, a=0, d=c.length) {
            let u = a
              , s = d;
            for (; u < s; ) {
                const r = Math.floor((u + s) / 2);
                h(c[r]) ? s = r : u = r + 1
            }
            return u
        }
        function E(c, h, a=0, d=c.length) {
            const u = y(c, h, a, d);
            return u === c.length ? -1 : u
        }
        class $ {
            static{this.assertInvariants = !1
            }constructor(h) {
                this.e = h,
                this.c = 0
            }
            findLastMonotonous(h) {
                if ($.assertInvariants) {
                    if (this.d) {
                        for (const d of this.e)
                            if (this.d(d) && !h(d))
                                throw new Error("MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.")
                    }
                    this.d = h
                }
                const a = I(this.e, h, this.c);
                return this.c = a + 1,
                a === -1 ? void 0 : this.e[a]
            }
        }
        e.$lb = $;
        function v(c, h) {
            if (c.length === 0)
                return;
            let a = c[0];
            for (let d = 1; d < c.length; d++) {
                const u = c[d];
                h(u, a) > 0 && (a = u)
            }
            return a
        }
        function f(c, h) {
            if (c.length === 0)
                return;
            let a = c[0];
            for (let d = 1; d < c.length; d++) {
                const u = c[d];
                h(u, a) >= 0 && (a = u)
            }
            return a
        }
        function g(c, h) {
            return v(c, (a,d)=>-h(a, d))
        }
        function p(c, h) {
            if (c.length === 0)
                return -1;
            let a = 0;
            for (let d = 1; d < c.length; d++) {
                const u = c[d];
                h(u, c[a]) > 0 && (a = d)
            }
            return a
        }
        function i(c, h) {
            for (const a of c) {
                const d = h(a);
                if (d !== void 0)
                    return d
            }
        }
    }),
    define(ge[105], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.CharCode = void 0;
        var t;
        (function(n) {
            n[n.Null = 0] = "Null",
            n[n.Backspace = 8] = "Backspace",
            n[n.Tab = 9] = "Tab",
            n[n.LineFeed = 10] = "LineFeed",
            n[n.CarriageReturn = 13] = "CarriageReturn",
            n[n.Space = 32] = "Space",
            n[n.ExclamationMark = 33] = "ExclamationMark",
            n[n.DoubleQuote = 34] = "DoubleQuote",
            n[n.Hash = 35] = "Hash",
            n[n.DollarSign = 36] = "DollarSign",
            n[n.PercentSign = 37] = "PercentSign",
            n[n.Ampersand = 38] = "Ampersand",
            n[n.SingleQuote = 39] = "SingleQuote",
            n[n.OpenParen = 40] = "OpenParen",
            n[n.CloseParen = 41] = "CloseParen",
            n[n.Asterisk = 42] = "Asterisk",
            n[n.Plus = 43] = "Plus",
            n[n.Comma = 44] = "Comma",
            n[n.Dash = 45] = "Dash",
            n[n.Period = 46] = "Period",
            n[n.Slash = 47] = "Slash",
            n[n.Digit0 = 48] = "Digit0",
            n[n.Digit1 = 49] = "Digit1",
            n[n.Digit2 = 50] = "Digit2",
            n[n.Digit3 = 51] = "Digit3",
            n[n.Digit4 = 52] = "Digit4",
            n[n.Digit5 = 53] = "Digit5",
            n[n.Digit6 = 54] = "Digit6",
            n[n.Digit7 = 55] = "Digit7",
            n[n.Digit8 = 56] = "Digit8",
            n[n.Digit9 = 57] = "Digit9",
            n[n.Colon = 58] = "Colon",
            n[n.Semicolon = 59] = "Semicolon",
            n[n.LessThan = 60] = "LessThan",
            n[n.Equals = 61] = "Equals",
            n[n.GreaterThan = 62] = "GreaterThan",
            n[n.QuestionMark = 63] = "QuestionMark",
            n[n.AtSign = 64] = "AtSign",
            n[n.A = 65] = "A",
            n[n.B = 66] = "B",
            n[n.C = 67] = "C",
            n[n.D = 68] = "D",
            n[n.E = 69] = "E",
            n[n.F = 70] = "F",
            n[n.G = 71] = "G",
            n[n.H = 72] = "H",
            n[n.I = 73] = "I",
            n[n.J = 74] = "J",
            n[n.K = 75] = "K",
            n[n.L = 76] = "L",
            n[n.M = 77] = "M",
            n[n.N = 78] = "N",
            n[n.O = 79] = "O",
            n[n.P = 80] = "P",
            n[n.Q = 81] = "Q",
            n[n.R = 82] = "R",
            n[n.S = 83] = "S",
            n[n.T = 84] = "T",
            n[n.U = 85] = "U",
            n[n.V = 86] = "V",
            n[n.W = 87] = "W",
            n[n.X = 88] = "X",
            n[n.Y = 89] = "Y",
            n[n.Z = 90] = "Z",
            n[n.OpenSquareBracket = 91] = "OpenSquareBracket",
            n[n.Backslash = 92] = "Backslash",
            n[n.CloseSquareBracket = 93] = "CloseSquareBracket",
            n[n.Caret = 94] = "Caret",
            n[n.Underline = 95] = "Underline",
            n[n.BackTick = 96] = "BackTick",
            n[n.a = 97] = "a",
            n[n.b = 98] = "b",
            n[n.c = 99] = "c",
            n[n.d = 100] = "d",
            n[n.e = 101] = "e",
            n[n.f = 102] = "f",
            n[n.g = 103] = "g",
            n[n.h = 104] = "h",
            n[n.i = 105] = "i",
            n[n.j = 106] = "j",
            n[n.k = 107] = "k",
            n[n.l = 108] = "l",
            n[n.m = 109] = "m",
            n[n.n = 110] = "n",
            n[n.o = 111] = "o",
            n[n.p = 112] = "p",
            n[n.q = 113] = "q",
            n[n.r = 114] = "r",
            n[n.s = 115] = "s",
            n[n.t = 116] = "t",
            n[n.u = 117] = "u",
            n[n.v = 118] = "v",
            n[n.w = 119] = "w",
            n[n.x = 120] = "x",
            n[n.y = 121] = "y",
            n[n.z = 122] = "z",
            n[n.OpenCurlyBrace = 123] = "OpenCurlyBrace",
            n[n.Pipe = 124] = "Pipe",
            n[n.CloseCurlyBrace = 125] = "CloseCurlyBrace",
            n[n.Tilde = 126] = "Tilde",
            n[n.NoBreakSpace = 160] = "NoBreakSpace",
            n[n.U_Combining_Grave_Accent = 768] = "U_Combining_Grave_Accent",
            n[n.U_Combining_Acute_Accent = 769] = "U_Combining_Acute_Accent",
            n[n.U_Combining_Circumflex_Accent = 770] = "U_Combining_Circumflex_Accent",
            n[n.U_Combining_Tilde = 771] = "U_Combining_Tilde",
            n[n.U_Combining_Macron = 772] = "U_Combining_Macron",
            n[n.U_Combining_Overline = 773] = "U_Combining_Overline",
            n[n.U_Combining_Breve = 774] = "U_Combining_Breve",
            n[n.U_Combining_Dot_Above = 775] = "U_Combining_Dot_Above",
            n[n.U_Combining_Diaeresis = 776] = "U_Combining_Diaeresis",
            n[n.U_Combining_Hook_Above = 777] = "U_Combining_Hook_Above",
            n[n.U_Combining_Ring_Above = 778] = "U_Combining_Ring_Above",
            n[n.U_Combining_Double_Acute_Accent = 779] = "U_Combining_Double_Acute_Accent",
            n[n.U_Combining_Caron = 780] = "U_Combining_Caron",
            n[n.U_Combining_Vertical_Line_Above = 781] = "U_Combining_Vertical_Line_Above",
            n[n.U_Combining_Double_Vertical_Line_Above = 782] = "U_Combining_Double_Vertical_Line_Above",
            n[n.U_Combining_Double_Grave_Accent = 783] = "U_Combining_Double_Grave_Accent",
            n[n.U_Combining_Candrabindu = 784] = "U_Combining_Candrabindu",
            n[n.U_Combining_Inverted_Breve = 785] = "U_Combining_Inverted_Breve",
            n[n.U_Combining_Turned_Comma_Above = 786] = "U_Combining_Turned_Comma_Above",
            n[n.U_Combining_Comma_Above = 787] = "U_Combining_Comma_Above",
            n[n.U_Combining_Reversed_Comma_Above = 788] = "U_Combining_Reversed_Comma_Above",
            n[n.U_Combining_Comma_Above_Right = 789] = "U_Combining_Comma_Above_Right",
            n[n.U_Combining_Grave_Accent_Below = 790] = "U_Combining_Grave_Accent_Below",
            n[n.U_Combining_Acute_Accent_Below = 791] = "U_Combining_Acute_Accent_Below",
            n[n.U_Combining_Left_Tack_Below = 792] = "U_Combining_Left_Tack_Below",
            n[n.U_Combining_Right_Tack_Below = 793] = "U_Combining_Right_Tack_Below",
            n[n.U_Combining_Left_Angle_Above = 794] = "U_Combining_Left_Angle_Above",
            n[n.U_Combining_Horn = 795] = "U_Combining_Horn",
            n[n.U_Combining_Left_Half_Ring_Below = 796] = "U_Combining_Left_Half_Ring_Below",
            n[n.U_Combining_Up_Tack_Below = 797] = "U_Combining_Up_Tack_Below",
            n[n.U_Combining_Down_Tack_Below = 798] = "U_Combining_Down_Tack_Below",
            n[n.U_Combining_Plus_Sign_Below = 799] = "U_Combining_Plus_Sign_Below",
            n[n.U_Combining_Minus_Sign_Below = 800] = "U_Combining_Minus_Sign_Below",
            n[n.U_Combining_Palatalized_Hook_Below = 801] = "U_Combining_Palatalized_Hook_Below",
            n[n.U_Combining_Retroflex_Hook_Below = 802] = "U_Combining_Retroflex_Hook_Below",
            n[n.U_Combining_Dot_Below = 803] = "U_Combining_Dot_Below",
            n[n.U_Combining_Diaeresis_Below = 804] = "U_Combining_Diaeresis_Below",
            n[n.U_Combining_Ring_Below = 805] = "U_Combining_Ring_Below",
            n[n.U_Combining_Comma_Below = 806] = "U_Combining_Comma_Below",
            n[n.U_Combining_Cedilla = 807] = "U_Combining_Cedilla",
            n[n.U_Combining_Ogonek = 808] = "U_Combining_Ogonek",
            n[n.U_Combining_Vertical_Line_Below = 809] = "U_Combining_Vertical_Line_Below",
            n[n.U_Combining_Bridge_Below = 810] = "U_Combining_Bridge_Below",
            n[n.U_Combining_Inverted_Double_Arch_Below = 811] = "U_Combining_Inverted_Double_Arch_Below",
            n[n.U_Combining_Caron_Below = 812] = "U_Combining_Caron_Below",
            n[n.U_Combining_Circumflex_Accent_Below = 813] = "U_Combining_Circumflex_Accent_Below",
            n[n.U_Combining_Breve_Below = 814] = "U_Combining_Breve_Below",
            n[n.U_Combining_Inverted_Breve_Below = 815] = "U_Combining_Inverted_Breve_Below",
            n[n.U_Combining_Tilde_Below = 816] = "U_Combining_Tilde_Below",
            n[n.U_Combining_Macron_Below = 817] = "U_Combining_Macron_Below",
            n[n.U_Combining_Low_Line = 818] = "U_Combining_Low_Line",
            n[n.U_Combining_Double_Low_Line = 819] = "U_Combining_Double_Low_Line",
            n[n.U_Combining_Tilde_Overlay = 820] = "U_Combining_Tilde_Overlay",
            n[n.U_Combining_Short_Stroke_Overlay = 821] = "U_Combining_Short_Stroke_Overlay",
            n[n.U_Combining_Long_Stroke_Overlay = 822] = "U_Combining_Long_Stroke_Overlay",
            n[n.U_Combining_Short_Solidus_Overlay = 823] = "U_Combining_Short_Solidus_Overlay",
            n[n.U_Combining_Long_Solidus_Overlay = 824] = "U_Combining_Long_Solidus_Overlay",
            n[n.U_Combining_Right_Half_Ring_Below = 825] = "U_Combining_Right_Half_Ring_Below",
            n[n.U_Combining_Inverted_Bridge_Below = 826] = "U_Combining_Inverted_Bridge_Below",
            n[n.U_Combining_Square_Below = 827] = "U_Combining_Square_Below",
            n[n.U_Combining_Seagull_Below = 828] = "U_Combining_Seagull_Below",
            n[n.U_Combining_X_Above = 829] = "U_Combining_X_Above",
            n[n.U_Combining_Vertical_Tilde = 830] = "U_Combining_Vertical_Tilde",
            n[n.U_Combining_Double_Overline = 831] = "U_Combining_Double_Overline",
            n[n.U_Combining_Grave_Tone_Mark = 832] = "U_Combining_Grave_Tone_Mark",
            n[n.U_Combining_Acute_Tone_Mark = 833] = "U_Combining_Acute_Tone_Mark",
            n[n.U_Combining_Greek_Perispomeni = 834] = "U_Combining_Greek_Perispomeni",
            n[n.U_Combining_Greek_Koronis = 835] = "U_Combining_Greek_Koronis",
            n[n.U_Combining_Greek_Dialytika_Tonos = 836] = "U_Combining_Greek_Dialytika_Tonos",
            n[n.U_Combining_Greek_Ypogegrammeni = 837] = "U_Combining_Greek_Ypogegrammeni",
            n[n.U_Combining_Bridge_Above = 838] = "U_Combining_Bridge_Above",
            n[n.U_Combining_Equals_Sign_Below = 839] = "U_Combining_Equals_Sign_Below",
            n[n.U_Combining_Double_Vertical_Line_Below = 840] = "U_Combining_Double_Vertical_Line_Below",
            n[n.U_Combining_Left_Angle_Below = 841] = "U_Combining_Left_Angle_Below",
            n[n.U_Combining_Not_Tilde_Above = 842] = "U_Combining_Not_Tilde_Above",
            n[n.U_Combining_Homothetic_Above = 843] = "U_Combining_Homothetic_Above",
            n[n.U_Combining_Almost_Equal_To_Above = 844] = "U_Combining_Almost_Equal_To_Above",
            n[n.U_Combining_Left_Right_Arrow_Below = 845] = "U_Combining_Left_Right_Arrow_Below",
            n[n.U_Combining_Upwards_Arrow_Below = 846] = "U_Combining_Upwards_Arrow_Below",
            n[n.U_Combining_Grapheme_Joiner = 847] = "U_Combining_Grapheme_Joiner",
            n[n.U_Combining_Right_Arrowhead_Above = 848] = "U_Combining_Right_Arrowhead_Above",
            n[n.U_Combining_Left_Half_Ring_Above = 849] = "U_Combining_Left_Half_Ring_Above",
            n[n.U_Combining_Fermata = 850] = "U_Combining_Fermata",
            n[n.U_Combining_X_Below = 851] = "U_Combining_X_Below",
            n[n.U_Combining_Left_Arrowhead_Below = 852] = "U_Combining_Left_Arrowhead_Below",
            n[n.U_Combining_Right_Arrowhead_Below = 853] = "U_Combining_Right_Arrowhead_Below",
            n[n.U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below = 854] = "U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below",
            n[n.U_Combining_Right_Half_Ring_Above = 855] = "U_Combining_Right_Half_Ring_Above",
            n[n.U_Combining_Dot_Above_Right = 856] = "U_Combining_Dot_Above_Right",
            n[n.U_Combining_Asterisk_Below = 857] = "U_Combining_Asterisk_Below",
            n[n.U_Combining_Double_Ring_Below = 858] = "U_Combining_Double_Ring_Below",
            n[n.U_Combining_Zigzag_Above = 859] = "U_Combining_Zigzag_Above",
            n[n.U_Combining_Double_Breve_Below = 860] = "U_Combining_Double_Breve_Below",
            n[n.U_Combining_Double_Breve = 861] = "U_Combining_Double_Breve",
            n[n.U_Combining_Double_Macron = 862] = "U_Combining_Double_Macron",
            n[n.U_Combining_Double_Macron_Below = 863] = "U_Combining_Double_Macron_Below",
            n[n.U_Combining_Double_Tilde = 864] = "U_Combining_Double_Tilde",
            n[n.U_Combining_Double_Inverted_Breve = 865] = "U_Combining_Double_Inverted_Breve",
            n[n.U_Combining_Double_Rightwards_Arrow_Below = 866] = "U_Combining_Double_Rightwards_Arrow_Below",
            n[n.U_Combining_Latin_Small_Letter_A = 867] = "U_Combining_Latin_Small_Letter_A",
            n[n.U_Combining_Latin_Small_Letter_E = 868] = "U_Combining_Latin_Small_Letter_E",
            n[n.U_Combining_Latin_Small_Letter_I = 869] = "U_Combining_Latin_Small_Letter_I",
            n[n.U_Combining_Latin_Small_Letter_O = 870] = "U_Combining_Latin_Small_Letter_O",
            n[n.U_Combining_Latin_Small_Letter_U = 871] = "U_Combining_Latin_Small_Letter_U",
            n[n.U_Combining_Latin_Small_Letter_C = 872] = "U_Combining_Latin_Small_Letter_C",
            n[n.U_Combining_Latin_Small_Letter_D = 873] = "U_Combining_Latin_Small_Letter_D",
            n[n.U_Combining_Latin_Small_Letter_H = 874] = "U_Combining_Latin_Small_Letter_H",
            n[n.U_Combining_Latin_Small_Letter_M = 875] = "U_Combining_Latin_Small_Letter_M",
            n[n.U_Combining_Latin_Small_Letter_R = 876] = "U_Combining_Latin_Small_Letter_R",
            n[n.U_Combining_Latin_Small_Letter_T = 877] = "U_Combining_Latin_Small_Letter_T",
            n[n.U_Combining_Latin_Small_Letter_V = 878] = "U_Combining_Latin_Small_Letter_V",
            n[n.U_Combining_Latin_Small_Letter_X = 879] = "U_Combining_Latin_Small_Letter_X",
            n[n.LINE_SEPARATOR = 8232] = "LINE_SEPARATOR",
            n[n.PARAGRAPH_SEPARATOR = 8233] = "PARAGRAPH_SEPARATOR",
            n[n.NEXT_LINE = 133] = "NEXT_LINE",
            n[n.U_CIRCUMFLEX = 94] = "U_CIRCUMFLEX",
            n[n.U_GRAVE_ACCENT = 96] = "U_GRAVE_ACCENT",
            n[n.U_DIAERESIS = 168] = "U_DIAERESIS",
            n[n.U_MACRON = 175] = "U_MACRON",
            n[n.U_ACUTE_ACCENT = 180] = "U_ACUTE_ACCENT",
            n[n.U_CEDILLA = 184] = "U_CEDILLA",
            n[n.U_MODIFIER_LETTER_LEFT_ARROWHEAD = 706] = "U_MODIFIER_LETTER_LEFT_ARROWHEAD",
            n[n.U_MODIFIER_LETTER_RIGHT_ARROWHEAD = 707] = "U_MODIFIER_LETTER_RIGHT_ARROWHEAD",
            n[n.U_MODIFIER_LETTER_UP_ARROWHEAD = 708] = "U_MODIFIER_LETTER_UP_ARROWHEAD",
            n[n.U_MODIFIER_LETTER_DOWN_ARROWHEAD = 709] = "U_MODIFIER_LETTER_DOWN_ARROWHEAD",
            n[n.U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING = 722] = "U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING",
            n[n.U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING = 723] = "U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING",
            n[n.U_MODIFIER_LETTER_UP_TACK = 724] = "U_MODIFIER_LETTER_UP_TACK",
            n[n.U_MODIFIER_LETTER_DOWN_TACK = 725] = "U_MODIFIER_LETTER_DOWN_TACK",
            n[n.U_MODIFIER_LETTER_PLUS_SIGN = 726] = "U_MODIFIER_LETTER_PLUS_SIGN",
            n[n.U_MODIFIER_LETTER_MINUS_SIGN = 727] = "U_MODIFIER_LETTER_MINUS_SIGN",
            n[n.U_BREVE = 728] = "U_BREVE",
            n[n.U_DOT_ABOVE = 729] = "U_DOT_ABOVE",
            n[n.U_RING_ABOVE = 730] = "U_RING_ABOVE",
            n[n.U_OGONEK = 731] = "U_OGONEK",
            n[n.U_SMALL_TILDE = 732] = "U_SMALL_TILDE",
            n[n.U_DOUBLE_ACUTE_ACCENT = 733] = "U_DOUBLE_ACUTE_ACCENT",
            n[n.U_MODIFIER_LETTER_RHOTIC_HOOK = 734] = "U_MODIFIER_LETTER_RHOTIC_HOOK",
            n[n.U_MODIFIER_LETTER_CROSS_ACCENT = 735] = "U_MODIFIER_LETTER_CROSS_ACCENT",
            n[n.U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR = 741] = "U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR",
            n[n.U_MODIFIER_LETTER_HIGH_TONE_BAR = 742] = "U_MODIFIER_LETTER_HIGH_TONE_BAR",
            n[n.U_MODIFIER_LETTER_MID_TONE_BAR = 743] = "U_MODIFIER_LETTER_MID_TONE_BAR",
            n[n.U_MODIFIER_LETTER_LOW_TONE_BAR = 744] = "U_MODIFIER_LETTER_LOW_TONE_BAR",
            n[n.U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR = 745] = "U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR",
            n[n.U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK = 746] = "U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK",
            n[n.U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK = 747] = "U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK",
            n[n.U_MODIFIER_LETTER_UNASPIRATED = 749] = "U_MODIFIER_LETTER_UNASPIRATED",
            n[n.U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD = 751] = "U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD",
            n[n.U_MODIFIER_LETTER_LOW_UP_ARROWHEAD = 752] = "U_MODIFIER_LETTER_LOW_UP_ARROWHEAD",
            n[n.U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD = 753] = "U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD",
            n[n.U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD = 754] = "U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD",
            n[n.U_MODIFIER_LETTER_LOW_RING = 755] = "U_MODIFIER_LETTER_LOW_RING",
            n[n.U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT = 756] = "U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT",
            n[n.U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT = 757] = "U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT",
            n[n.U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT = 758] = "U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT",
            n[n.U_MODIFIER_LETTER_LOW_TILDE = 759] = "U_MODIFIER_LETTER_LOW_TILDE",
            n[n.U_MODIFIER_LETTER_RAISED_COLON = 760] = "U_MODIFIER_LETTER_RAISED_COLON",
            n[n.U_MODIFIER_LETTER_BEGIN_HIGH_TONE = 761] = "U_MODIFIER_LETTER_BEGIN_HIGH_TONE",
            n[n.U_MODIFIER_LETTER_END_HIGH_TONE = 762] = "U_MODIFIER_LETTER_END_HIGH_TONE",
            n[n.U_MODIFIER_LETTER_BEGIN_LOW_TONE = 763] = "U_MODIFIER_LETTER_BEGIN_LOW_TONE",
            n[n.U_MODIFIER_LETTER_END_LOW_TONE = 764] = "U_MODIFIER_LETTER_END_LOW_TONE",
            n[n.U_MODIFIER_LETTER_SHELF = 765] = "U_MODIFIER_LETTER_SHELF",
            n[n.U_MODIFIER_LETTER_OPEN_SHELF = 766] = "U_MODIFIER_LETTER_OPEN_SHELF",
            n[n.U_MODIFIER_LETTER_LOW_LEFT_ARROW = 767] = "U_MODIFIER_LETTER_LOW_LEFT_ARROW",
            n[n.U_GREEK_LOWER_NUMERAL_SIGN = 885] = "U_GREEK_LOWER_NUMERAL_SIGN",
            n[n.U_GREEK_TONOS = 900] = "U_GREEK_TONOS",
            n[n.U_GREEK_DIALYTIKA_TONOS = 901] = "U_GREEK_DIALYTIKA_TONOS",
            n[n.U_GREEK_KORONIS = 8125] = "U_GREEK_KORONIS",
            n[n.U_GREEK_PSILI = 8127] = "U_GREEK_PSILI",
            n[n.U_GREEK_PERISPOMENI = 8128] = "U_GREEK_PERISPOMENI",
            n[n.U_GREEK_DIALYTIKA_AND_PERISPOMENI = 8129] = "U_GREEK_DIALYTIKA_AND_PERISPOMENI",
            n[n.U_GREEK_PSILI_AND_VARIA = 8141] = "U_GREEK_PSILI_AND_VARIA",
            n[n.U_GREEK_PSILI_AND_OXIA = 8142] = "U_GREEK_PSILI_AND_OXIA",
            n[n.U_GREEK_PSILI_AND_PERISPOMENI = 8143] = "U_GREEK_PSILI_AND_PERISPOMENI",
            n[n.U_GREEK_DASIA_AND_VARIA = 8157] = "U_GREEK_DASIA_AND_VARIA",
            n[n.U_GREEK_DASIA_AND_OXIA = 8158] = "U_GREEK_DASIA_AND_OXIA",
            n[n.U_GREEK_DASIA_AND_PERISPOMENI = 8159] = "U_GREEK_DASIA_AND_PERISPOMENI",
            n[n.U_GREEK_DIALYTIKA_AND_VARIA = 8173] = "U_GREEK_DIALYTIKA_AND_VARIA",
            n[n.U_GREEK_DIALYTIKA_AND_OXIA = 8174] = "U_GREEK_DIALYTIKA_AND_OXIA",
            n[n.U_GREEK_VARIA = 8175] = "U_GREEK_VARIA",
            n[n.U_GREEK_OXIA = 8189] = "U_GREEK_OXIA",
            n[n.U_GREEK_DASIA = 8190] = "U_GREEK_DASIA",
            n[n.U_IDEOGRAPHIC_FULL_STOP = 12290] = "U_IDEOGRAPHIC_FULL_STOP",
            n[n.U_LEFT_CORNER_BRACKET = 12300] = "U_LEFT_CORNER_BRACKET",
            n[n.U_RIGHT_CORNER_BRACKET = 12301] = "U_RIGHT_CORNER_BRACKET",
            n[n.U_LEFT_BLACK_LENTICULAR_BRACKET = 12304] = "U_LEFT_BLACK_LENTICULAR_BRACKET",
            n[n.U_RIGHT_BLACK_LENTICULAR_BRACKET = 12305] = "U_RIGHT_BLACK_LENTICULAR_BRACKET",
            n[n.U_OVERLINE = 8254] = "U_OVERLINE",
            n[n.UTF8_BOM = 65279] = "UTF8_BOM",
            n[n.U_FULLWIDTH_SEMICOLON = 65307] = "U_FULLWIDTH_SEMICOLON",
            n[n.U_FULLWIDTH_COMMA = 65292] = "U_FULLWIDTH_COMMA"
        }
        )(t || (e.CharCode = t = {}))
    }),
    define(ge[337], be([1, 0]), function(ce, e) {
        "use strict";
        var t;
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$g = void 0,
        e.$c = n,
        e.$d = C,
        e.$e = I,
        e.$f = L;
        function n(E, $) {
            const v = Object.create(null);
            for (const f of E) {
                const g = $(f);
                let p = v[g];
                p || (p = v[g] = []),
                p.push(f)
            }
            return v
        }
        function C(E, $) {
            const v = []
              , f = [];
            for (const g of E)
                $.has(g) || v.push(g);
            for (const g of $)
                E.has(g) || f.push(g);
            return {
                removed: v,
                added: f
            }
        }
        function I(E, $) {
            const v = []
              , f = [];
            for (const [g,p] of E)
                $.has(g) || v.push(p);
            for (const [g,p] of $)
                E.has(g) || f.push(p);
            return {
                removed: v,
                added: f
            }
        }
        function L(E, $) {
            const v = new Set;
            for (const f of $)
                E.has(f) && v.add(f);
            return v
        }
        class y {
            static{t = Symbol.toStringTag
            }constructor($, v) {
                this.b = v,
                this.a = new Map,
                this[t] = "SetWithKey";
                for (const f of $)
                    this.add(f)
            }
            get size() {
                return this.a.size
            }
            add($) {
                const v = this.b($);
                return this.a.set(v, $),
                this
            }
            delete($) {
                return this.a.delete(this.b($))
            }
            has($) {
                return this.a.has(this.b($))
            }
            *entries() {
                for (const $ of this.a.values())
                    yield[$, $]
            }
            keys() {
                return this.values()
            }
            *values() {
                for (const $ of this.a.values())
                    yield $
            }
            clear() {
                this.a.clear()
            }
            forEach($, v) {
                this.a.forEach(f=>$.call(v, f, f, this))
            }
            [Symbol.iterator]() {
                return this.values()
            }
        }
        e.$g = y
    }),
    define(ge[92], be([1, 0, 105]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ou = e.$nu = e.$mu = e.$lu = void 0;
        function n(E, $) {
            const v = Math.pow(10, $);
            return Math.round(E * v) / v
        }
        class C {
            constructor($, v, f, g=1) {
                this._rgbaBrand = void 0,
                this.r = Math.min(255, Math.max(0, $)) | 0,
                this.g = Math.min(255, Math.max(0, v)) | 0,
                this.b = Math.min(255, Math.max(0, f)) | 0,
                this.a = n(Math.max(Math.min(1, g), 0), 3)
            }
            static equals($, v) {
                return $.r === v.r && $.g === v.g && $.b === v.b && $.a === v.a
            }
        }
        e.$lu = C;
        class I {
            constructor($, v, f, g) {
                this._hslaBrand = void 0,
                this.h = Math.max(Math.min(360, $), 0) | 0,
                this.s = n(Math.max(Math.min(1, v), 0), 3),
                this.l = n(Math.max(Math.min(1, f), 0), 3),
                this.a = n(Math.max(Math.min(1, g), 0), 3)
            }
            static equals($, v) {
                return $.h === v.h && $.s === v.s && $.l === v.l && $.a === v.a
            }
            static fromRGBA($) {
                const v = $.r / 255
                  , f = $.g / 255
                  , g = $.b / 255
                  , p = $.a
                  , i = Math.max(v, f, g)
                  , c = Math.min(v, f, g);
                let h = 0
                  , a = 0;
                const d = (c + i) / 2
                  , u = i - c;
                if (u > 0) {
                    switch (a = Math.min(d <= .5 ? u / (2 * d) : u / (2 - 2 * d), 1),
                    i) {
                    case v:
                        h = (f - g) / u + (f < g ? 6 : 0);
                        break;
                    case f:
                        h = (g - v) / u + 2;
                        break;
                    case g:
                        h = (v - f) / u + 4;
                        break
                    }
                    h *= 60,
                    h = Math.round(h)
                }
                return new I(h,a,d,p)
            }
            static i($, v, f) {
                return f < 0 && (f += 1),
                f > 1 && (f -= 1),
                f < 1 / 6 ? $ + (v - $) * 6 * f : f < 1 / 2 ? v : f < 2 / 3 ? $ + (v - $) * (2 / 3 - f) * 6 : $
            }
            static toRGBA($) {
                const v = $.h / 360
                  , {s: f, l: g, a: p} = $;
                let i, c, h;
                if (f === 0)
                    i = c = h = g;
                else {
                    const a = g < .5 ? g * (1 + f) : g + f - g * f
                      , d = 2 * g - a;
                    i = I.i(d, a, v + 1 / 3),
                    c = I.i(d, a, v),
                    h = I.i(d, a, v - 1 / 3)
                }
                return new C(Math.round(i * 255),Math.round(c * 255),Math.round(h * 255),p)
            }
        }
        e.$mu = I;
        class L {
            constructor($, v, f, g) {
                this._hsvaBrand = void 0,
                this.h = Math.max(Math.min(360, $), 0) | 0,
                this.s = n(Math.max(Math.min(1, v), 0), 3),
                this.v = n(Math.max(Math.min(1, f), 0), 3),
                this.a = n(Math.max(Math.min(1, g), 0), 3)
            }
            static equals($, v) {
                return $.h === v.h && $.s === v.s && $.v === v.v && $.a === v.a
            }
            static fromRGBA($) {
                const v = $.r / 255
                  , f = $.g / 255
                  , g = $.b / 255
                  , p = Math.max(v, f, g)
                  , i = Math.min(v, f, g)
                  , c = p - i
                  , h = p === 0 ? 0 : c / p;
                let a;
                return c === 0 ? a = 0 : p === v ? a = ((f - g) / c % 6 + 6) % 6 : p === f ? a = (g - v) / c + 2 : a = (v - f) / c + 4,
                new L(Math.round(a * 60),h,p,$.a)
            }
            static toRGBA($) {
                const {h: v, s: f, v: g, a: p} = $
                  , i = g * f
                  , c = i * (1 - Math.abs(v / 60 % 2 - 1))
                  , h = g - i;
                let[a,d,u] = [0, 0, 0];
                return v < 60 ? (a = i,
                d = c) : v < 120 ? (a = c,
                d = i) : v < 180 ? (d = i,
                u = c) : v < 240 ? (d = c,
                u = i) : v < 300 ? (a = c,
                u = i) : v <= 360 && (a = i,
                u = c),
                a = Math.round((a + h) * 255),
                d = Math.round((d + h) * 255),
                u = Math.round((u + h) * 255),
                new C(a,d,u,p)
            }
        }
        e.$nu = L;
        class y {
            static fromHex($) {
                return y.Format.CSS.parseHex($) || y.red
            }
            static equals($, v) {
                return !$ && !v ? !0 : !$ || !v ? !1 : $.equals(v)
            }
            get hsla() {
                return this.i ? this.i : I.fromRGBA(this.rgba)
            }
            get hsva() {
                return this.j ? this.j : L.fromRGBA(this.rgba)
            }
            constructor($) {
                if ($)
                    if ($ instanceof C)
                        this.rgba = $;
                    else if ($ instanceof I)
                        this.i = $,
                        this.rgba = I.toRGBA($);
                    else if ($ instanceof L)
                        this.j = $,
                        this.rgba = L.toRGBA($);
                    else
                        throw new Error("Invalid color ctor argument");
                else
                    throw new Error("Color needs a value")
            }
            equals($) {
                return !!$ && C.equals(this.rgba, $.rgba) && I.equals(this.hsla, $.hsla) && L.equals(this.hsva, $.hsva)
            }
            getRelativeLuminance() {
                const $ = y.k(this.rgba.r)
                  , v = y.k(this.rgba.g)
                  , f = y.k(this.rgba.b)
                  , g = .2126 * $ + .7152 * v + .0722 * f;
                return n(g, 4)
            }
            static k($) {
                const v = $ / 255;
                return v <= .03928 ? v / 12.92 : Math.pow((v + .055) / 1.055, 2.4)
            }
            getContrastRatio($) {
                const v = this.getRelativeLuminance()
                  , f = $.getRelativeLuminance();
                return v > f ? (v + .05) / (f + .05) : (f + .05) / (v + .05)
            }
            isDarker() {
                return (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1e3 < 128
            }
            isLighter() {
                return (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1e3 >= 128
            }
            isLighterThan($) {
                const v = this.getRelativeLuminance()
                  , f = $.getRelativeLuminance();
                return v > f
            }
            isDarkerThan($) {
                const v = this.getRelativeLuminance()
                  , f = $.getRelativeLuminance();
                return v < f
            }
            lighten($) {
                return new y(new I(this.hsla.h,this.hsla.s,this.hsla.l + this.hsla.l * $,this.hsla.a))
            }
            darken($) {
                return new y(new I(this.hsla.h,this.hsla.s,this.hsla.l - this.hsla.l * $,this.hsla.a))
            }
            transparent($) {
                const {r: v, g: f, b: g, a: p} = this.rgba;
                return new y(new C(v,f,g,p * $))
            }
            isTransparent() {
                return this.rgba.a === 0
            }
            isOpaque() {
                return this.rgba.a === 1
            }
            opposite() {
                return new y(new C(255 - this.rgba.r,255 - this.rgba.g,255 - this.rgba.b,this.rgba.a))
            }
            blend($) {
                const v = $.rgba
                  , f = this.rgba.a
                  , g = v.a
                  , p = f + g * (1 - f);
                if (p < 1e-6)
                    return y.transparent;
                const i = this.rgba.r * f / p + v.r * g * (1 - f) / p
                  , c = this.rgba.g * f / p + v.g * g * (1 - f) / p
                  , h = this.rgba.b * f / p + v.b * g * (1 - f) / p;
                return new y(new C(i,c,h,p))
            }
            makeOpaque($) {
                if (this.isOpaque() || $.rgba.a !== 1)
                    return this;
                const {r: v, g: f, b: g, a: p} = this.rgba;
                return new y(new C($.rgba.r - p * ($.rgba.r - v),$.rgba.g - p * ($.rgba.g - f),$.rgba.b - p * ($.rgba.b - g),1))
            }
            flatten(...$) {
                const v = $.reduceRight((f,g)=>y.o(g, f));
                return y.o(this, v)
            }
            static o($, v) {
                const f = 1 - $.rgba.a;
                return new y(new C(f * v.rgba.r + $.rgba.a * $.rgba.r,f * v.rgba.g + $.rgba.a * $.rgba.g,f * v.rgba.b + $.rgba.a * $.rgba.b))
            }
            toString() {
                return this.u || (this.u = y.Format.CSS.format(this)),
                this.u
            }
            static getLighterColor($, v, f) {
                if ($.isLighterThan(v))
                    return $;
                f = f || .5;
                const g = $.getRelativeLuminance()
                  , p = v.getRelativeLuminance();
                return f = f * (p - g) / p,
                $.lighten(f)
            }
            static getDarkerColor($, v, f) {
                if ($.isDarkerThan(v))
                    return $;
                f = f || .5;
                const g = $.getRelativeLuminance()
                  , p = v.getRelativeLuminance();
                return f = f * (g - p) / g,
                $.darken(f)
            }
            static{this.white = new y(new C(255,255,255,1))
            }static{this.black = new y(new C(0,0,0,1))
            }static{this.red = new y(new C(255,0,0,1))
            }static{this.blue = new y(new C(0,0,255,1))
            }static{this.green = new y(new C(0,255,0,1))
            }static{this.cyan = new y(new C(0,255,255,1))
            }static{this.lightgrey = new y(new C(211,211,211,1))
            }static{this.transparent = new y(new C(0,0,0,0))
            }
        }
        e.$ou = y,
        function(E) {
            let $;
            (function(v) {
                let f;
                (function(g) {
                    function p(o) {
                        return o.rgba.a === 1 ? `rgb(${o.rgba.r}, ${o.rgba.g}, ${o.rgba.b})` : E.Format.CSS.formatRGBA(o)
                    }
                    g.formatRGB = p;
                    function i(o) {
                        return `rgba(${o.rgba.r}, ${o.rgba.g}, ${o.rgba.b}, ${+o.rgba.a.toFixed(2)})`
                    }
                    g.formatRGBA = i;
                    function c(o) {
                        return o.hsla.a === 1 ? `hsl(${o.hsla.h}, ${(o.hsla.s * 100).toFixed(2)}%, ${(o.hsla.l * 100).toFixed(2)}%)` : E.Format.CSS.formatHSLA(o)
                    }
                    g.formatHSL = c;
                    function h(o) {
                        return `hsla(${o.hsla.h}, ${(o.hsla.s * 100).toFixed(2)}%, ${(o.hsla.l * 100).toFixed(2)}%, ${o.hsla.a.toFixed(2)})`
                    }
                    g.formatHSLA = h;
                    function a(o) {
                        const b = o.toString(16);
                        return b.length !== 2 ? "0" + b : b
                    }
                    function d(o) {
                        return `#${a(o.rgba.r)}${a(o.rgba.g)}${a(o.rgba.b)}`
                    }
                    g.formatHex = d;
                    function u(o, b=!1) {
                        return b && o.rgba.a === 1 ? E.Format.CSS.formatHex(o) : `#${a(o.rgba.r)}${a(o.rgba.g)}${a(o.rgba.b)}${a(Math.round(o.rgba.a * 255))}`
                    }
                    g.formatHexA = u;
                    function s(o) {
                        return o.isOpaque() ? E.Format.CSS.formatHex(o) : E.Format.CSS.formatRGBA(o)
                    }
                    g.format = s;
                    function r(o) {
                        const b = o.length;
                        if (b === 0 || o.charCodeAt(0) !== t.CharCode.Hash)
                            return null;
                        if (b === 7) {
                            const m = 16 * l(o.charCodeAt(1)) + l(o.charCodeAt(2))
                              , w = 16 * l(o.charCodeAt(3)) + l(o.charCodeAt(4))
                              , S = 16 * l(o.charCodeAt(5)) + l(o.charCodeAt(6));
                            return new E(new C(m,w,S,1))
                        }
                        if (b === 9) {
                            const m = 16 * l(o.charCodeAt(1)) + l(o.charCodeAt(2))
                              , w = 16 * l(o.charCodeAt(3)) + l(o.charCodeAt(4))
                              , S = 16 * l(o.charCodeAt(5)) + l(o.charCodeAt(6))
                              , T = 16 * l(o.charCodeAt(7)) + l(o.charCodeAt(8));
                            return new E(new C(m,w,S,T / 255))
                        }
                        if (b === 4) {
                            const m = l(o.charCodeAt(1))
                              , w = l(o.charCodeAt(2))
                              , S = l(o.charCodeAt(3));
                            return new E(new C(16 * m + m,16 * w + w,16 * S + S))
                        }
                        if (b === 5) {
                            const m = l(o.charCodeAt(1))
                              , w = l(o.charCodeAt(2))
                              , S = l(o.charCodeAt(3))
                              , T = l(o.charCodeAt(4));
                            return new E(new C(16 * m + m,16 * w + w,16 * S + S,(16 * T + T) / 255))
                        }
                        return null
                    }
                    g.parseHex = r;
                    function l(o) {
                        switch (o) {
                        case t.CharCode.Digit0:
                            return 0;
                        case t.CharCode.Digit1:
                            return 1;
                        case t.CharCode.Digit2:
                            return 2;
                        case t.CharCode.Digit3:
                            return 3;
                        case t.CharCode.Digit4:
                            return 4;
                        case t.CharCode.Digit5:
                            return 5;
                        case t.CharCode.Digit6:
                            return 6;
                        case t.CharCode.Digit7:
                            return 7;
                        case t.CharCode.Digit8:
                            return 8;
                        case t.CharCode.Digit9:
                            return 9;
                        case t.CharCode.a:
                            return 10;
                        case t.CharCode.A:
                            return 10;
                        case t.CharCode.b:
                            return 11;
                        case t.CharCode.B:
                            return 11;
                        case t.CharCode.c:
                            return 12;
                        case t.CharCode.C:
                            return 12;
                        case t.CharCode.d:
                            return 13;
                        case t.CharCode.D:
                            return 13;
                        case t.CharCode.e:
                            return 14;
                        case t.CharCode.E:
                            return 14;
                        case t.CharCode.f:
                            return 15;
                        case t.CharCode.F:
                            return 15
                        }
                        return 0
                    }
                }
                )(f = v.CSS || (v.CSS = {}))
            }
            )($ = E.Format || (E.Format = {}))
        }(y || (e.$ou = y = {}))
    }),
    define(ge[119], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$0h = n,
        e.$$h = C,
        e.$_h = I;
        function t(L) {
            return (y,E,$)=>{
                let v = null
                  , f = null;
                if (typeof $.value == "function" ? (v = "value",
                f = $.value) : typeof $.get == "function" && (v = "get",
                f = $.get),
                !f)
                    throw new Error("not supported");
                $[v] = L(f, E)
            }
        }
        function n(L, y, E) {
            let $ = null
              , v = null;
            if (typeof E.value == "function" ? ($ = "value",
            v = E.value,
            v.length !== 0 && console.warn("Memoize should only be used in functions with zero parameters")) : typeof E.get == "function" && ($ = "get",
            v = E.get),
            !v)
                throw new Error("not supported");
            const f = `$memoize$${y}`;
            E[$] = function(...g) {
                return this.hasOwnProperty(f) || Object.defineProperty(this, f, {
                    configurable: !1,
                    enumerable: !1,
                    writable: !1,
                    value: v.apply(this, g)
                }),
                this[f]
            }
        }
        function C(L, y, E) {
            return t(($,v)=>{
                const f = `$debounce$${v}`
                  , g = `$debounce$result$${v}`;
                return function(...p) {
                    this[g] || (this[g] = E ? E() : void 0),
                    clearTimeout(this[f]),
                    y && (this[g] = y(this[g], ...p),
                    p = [this[g]]),
                    this[f] = setTimeout(()=>{
                        $.apply(this, p),
                        this[g] = E ? E() : void 0
                    }
                    , L)
                }
            }
            )
        }
        function I(L, y, E) {
            return t(($,v)=>{
                const f = `$throttle$timer$${v}`
                  , g = `$throttle$result$${v}`
                  , p = `$throttle$lastRun$${v}`
                  , i = `$throttle$pending$${v}`;
                return function(...c) {
                    if (this[g] || (this[g] = E ? E() : void 0),
                    (this[p] === null || this[p] === void 0) && (this[p] = -Number.MAX_VALUE),
                    y && (this[g] = y(this[g], ...c)),
                    this[i])
                        return;
                    const h = this[p] + L;
                    h <= Date.now() ? (this[p] = Date.now(),
                    $.apply(this, [this[g]]),
                    this[g] = E ? E() : void 0) : (this[i] = !0,
                    this[f] = setTimeout(()=>{
                        this[i] = !1,
                        this[p] = Date.now(),
                        $.apply(this, [this[g]]),
                        this[g] = E ? E() : void 0
                    }
                    , h - Date.now()))
                }
            }
            )
        }
    }),
    define(ge[1327], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Rt = void 0;
        class t {
            constructor(C, I, L, y) {
                this.originalStart = C,
                this.originalLength = I,
                this.modifiedStart = L,
                this.modifiedLength = y
            }
            getOriginalEnd() {
                return this.originalStart + this.originalLength
            }
            getModifiedEnd() {
                return this.modifiedStart + this.modifiedLength
            }
        }
        e.$Rt = t
    }),
    define(ge[14], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$bb = e.$ab = e.$_ = e.$$ = e.$0 = e.$8 = e.$4 = e.$V = e.$U = void 0,
        e.setUnexpectedErrorHandler = n,
        e.$X = C,
        e.$Y = I,
        e.$Z = L,
        e.$1 = y,
        e.$2 = E,
        e.$3 = v,
        e.$5 = g,
        e.$6 = p,
        e.$7 = i,
        e.$9 = h;
        class t {
            constructor() {
                this.b = [],
                this.a = function(o) {
                    setTimeout(()=>{
                        throw o.stack ? s.isErrorNoTelemetry(o) ? new s(o.message + `

` + o.stack) : new Error(o.message + `

` + o.stack) : o
                    }
                    , 0)
                }
            }
            addListener(o) {
                return this.b.push(o),
                ()=>{
                    this.d(o)
                }
            }
            c(o) {
                this.b.forEach(b=>{
                    b(o)
                }
                )
            }
            d(o) {
                this.b.splice(this.b.indexOf(o), 1)
            }
            setUnexpectedErrorHandler(o) {
                this.a = o
            }
            getUnexpectedErrorHandler() {
                return this.a
            }
            onUnexpectedError(o) {
                this.a(o),
                this.c(o)
            }
            onUnexpectedExternalError(o) {
                this.a(o)
            }
        }
        e.$U = t,
        e.$V = new t;
        function n(l) {
            e.$V.setUnexpectedErrorHandler(l)
        }
        function C(l) {
            if (!l || typeof l != "object")
                return !1;
            const o = l;
            return o.code === "EPIPE" && o.syscall?.toUpperCase() === "WRITE"
        }
        function I(l) {
            v(l) || e.$V.onUnexpectedError(l)
        }
        function L(l) {
            v(l) || e.$V.onUnexpectedExternalError(l)
        }
        function y(l) {
            if (l instanceof Error) {
                const {name: o, message: b} = l
                  , m = l.stacktrace || l.stack;
                return {
                    $isError: !0,
                    name: o,
                    message: b,
                    stack: m,
                    noTelemetry: s.isErrorNoTelemetry(l)
                }
            }
            return l
        }
        function E(l) {
            let o;
            return l.noTelemetry ? o = new s : (o = new Error,
            o.name = l.name),
            o.message = l.message,
            o.stack = l.stack,
            o
        }
        const $ = "Canceled";
        function v(l) {
            return l instanceof f ? !0 : l instanceof Error && l.name === $ && l.message === $
        }
        class f extends Error {
            constructor() {
                super($),
                this.name = this.message
            }
        }
        e.$4 = f;
        function g() {
            const l = new Error($);
            return l.name = l.message,
            l
        }
        function p(l) {
            return l ? new Error(`Illegal argument: ${l}`) : new Error("Illegal argument")
        }
        function i(l) {
            return l ? new Error(`Illegal state: ${l}`) : new Error("Illegal state")
        }
        class c extends TypeError {
            constructor(o) {
                super(o ? `${o} is read-only and cannot be changed` : "Cannot change read-only property")
            }
        }
        e.$8 = c;
        function h(l) {
            return l ? l.message ? l.message : l.stack ? l.stack.split(`
`)[0] : String(l) : "Error"
        }
        class a extends Error {
            constructor(o) {
                super("NotImplemented"),
                o && (this.message = o)
            }
        }
        e.$0 = a;
        class d extends Error {
            constructor(o) {
                super("NotSupported"),
                o && (this.message = o)
            }
        }
        e.$$ = d;
        class u extends Error {
            constructor() {
                super(...arguments),
                this.isExpected = !0
            }
        }
        e.$_ = u;
        class s extends Error {
            constructor(o) {
                super(o),
                this.name = "CodeExpectedError"
            }
            static fromError(o) {
                if (o instanceof s)
                    return o;
                const b = new s;
                return b.message = o.message,
                b.stack = o.stack,
                b
            }
            static isErrorNoTelemetry(o) {
                return o.name === "CodeExpectedError"
            }
        }
        e.$ab = s;
        class r extends Error {
            constructor(o) {
                super(o || "An unexpected bug occurred."),
                Object.setPrototypeOf(this, r.prototype)
            }
        }
        e.$bb = r
    }),
    define(ge[358], be([1, 0, 14]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$JV = n;
        function n(C, I) {
            const L = globalThis.MonacoEnvironment;
            if (L?.createTrustedTypesPolicy)
                try {
                    return L.createTrustedTypesPolicy(C, I)
                } catch (y) {
                    (0,
                    t.$Y)(y);
                    return
                }
            try {
                return globalThis.trustedTypes?.createPolicy(C, I)
            } catch (y) {
                (0,
                t.$Y)(y);
                return
            }
        }
    }),
    define(ge[13], be([1, 0, 14, 171]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$_b = e.$$b = e.$0b = e.$8b = e.$7b = e.CompareResult = void 0,
        e.$rb = C,
        e.$sb = I,
        e.$tb = L,
        e.$ub = y,
        e.$vb = E,
        e.$wb = $,
        e.$xb = v,
        e.$yb = f,
        e.$zb = g,
        e.$Ab = p,
        e.$Bb = i,
        e.$Cb = c,
        e.$Db = h,
        e.top = a,
        e.$Fb = d,
        e.$Gb = s,
        e.$Hb = r,
        e.$Ib = l,
        e.$Jb = o,
        e.$Kb = b,
        e.$Lb = m,
        e.$Mb = w,
        e.$Nb = S,
        e.$Ob = T,
        e.$Pb = D,
        e.$Qb = k,
        e.$Rb = P,
        e.$Sb = A,
        e.$Tb = M,
        e.$Ub = O,
        e.$Vb = R,
        e.$Wb = N,
        e.$Xb = z,
        e.$Yb = V,
        e.$Zb = B,
        e.$1b = j,
        e.$2b = W,
        e.$3b = q,
        e.$4b = H,
        e.$5b = G,
        e.$6b = Z,
        e.$9b = Y,
        e.$ac = re;
        function C(se, ee=0) {
            return se[se.length - (1 + ee)]
        }
        function I(se) {
            if (se.length === 0)
                throw new Error("Invalid tail call");
            return [se.slice(0, se.length - 1), se[se.length - 1]]
        }
        function L(se, ee, J=(te,ne)=>te === ne) {
            if (se === ee)
                return !0;
            if (!se || !ee || se.length !== ee.length)
                return !1;
            for (let te = 0, ne = se.length; te < ne; te++)
                if (!J(se[te], ee[te]))
                    return !1;
            return !0
        }
        function y(se, ee) {
            const J = se.length - 1;
            ee < J && (se[ee] = se[J]),
            se.pop()
        }
        function E(se, ee, J) {
            return $(se.length, te=>J(se[te], ee))
        }
        function $(se, ee) {
            let J = 0
              , te = se - 1;
            for (; J <= te; ) {
                const ne = (J + te) / 2 | 0
                  , le = ee(ne);
                if (le < 0)
                    J = ne + 1;
                else if (le > 0)
                    te = ne - 1;
                else
                    return ne
            }
            return -(J + 1)
        }
        function v(se, ee, J) {
            if (se = se | 0,
            se >= ee.length)
                throw new TypeError("invalid index");
            const te = ee[Math.floor(ee.length * Math.random())]
              , ne = []
              , le = []
              , ie = [];
            for (const oe of ee) {
                const fe = J(oe, te);
                fe < 0 ? ne.push(oe) : fe > 0 ? le.push(oe) : ie.push(oe)
            }
            return se < ne.length ? v(se, ne, J) : se < ne.length + ie.length ? ie[0] : v(se - (ne.length + ie.length), le, J)
        }
        function f(se, ee) {
            const J = [];
            let te;
            for (const ne of se.slice(0).sort(ee))
                !te || ee(te[0], ne) !== 0 ? (te = [ne],
                J.push(te)) : te.push(ne);
            return J
        }
        function *g(se, ee) {
            let J, te;
            for (const ne of se)
                te !== void 0 && ee(te, ne) ? J.push(ne) : (J && (yield J),
                J = [ne]),
                te = ne;
            J && (yield J)
        }
        function p(se, ee) {
            for (let J = 0; J <= se.length; J++)
                ee(J === 0 ? void 0 : se[J - 1], J === se.length ? void 0 : se[J])
        }
        function i(se, ee) {
            for (let J = 0; J < se.length; J++)
                ee(J === 0 ? void 0 : se[J - 1], se[J], J + 1 === se.length ? void 0 : se[J + 1])
        }
        function c(se, ee, J) {
            const te = [];
            function ne(oe, fe, he) {
                if (fe === 0 && he.length === 0)
                    return;
                const ue = te[te.length - 1];
                ue && ue.start + ue.deleteCount === oe ? (ue.deleteCount += fe,
                ue.toInsert.push(...he)) : te.push({
                    start: oe,
                    deleteCount: fe,
                    toInsert: he
                })
            }
            let le = 0
              , ie = 0;
            for (; ; ) {
                if (le === se.length) {
                    ne(le, 0, ee.slice(ie));
                    break
                }
                if (ie === ee.length) {
                    ne(le, se.length - le, []);
                    break
                }
                const oe = se[le]
                  , fe = ee[ie]
                  , he = J(oe, fe);
                he === 0 ? (le += 1,
                ie += 1) : he < 0 ? (ne(le, 1, []),
                le += 1) : he > 0 && (ne(le, 0, [fe]),
                ie += 1)
            }
            return te
        }
        function h(se, ee, J) {
            const te = c(se, ee, J)
              , ne = []
              , le = [];
            for (const ie of te)
                ne.push(...se.slice(ie.start, ie.start + ie.deleteCount)),
                le.push(...ie.toInsert);
            return {
                removed: ne,
                added: le
            }
        }
        function a(se, ee, J) {
            if (J === 0)
                return [];
            const te = se.slice(0, J).sort(ee);
            return u(se, ee, te, J, se.length),
            te
        }
        function d(se, ee, J, te, ne) {
            return J === 0 ? Promise.resolve([]) : new Promise((le,ie)=>{
                (async()=>{
                    const oe = se.length
                      , fe = se.slice(0, J).sort(ee);
                    for (let he = J, ue = Math.min(J + te, oe); he < oe; he = ue,
                    ue = Math.min(ue + te, oe)) {
                        if (he > J && await new Promise(de=>setTimeout(de)),
                        ne && ne.isCancellationRequested)
                            throw new t.$4;
                        u(se, ee, fe, he, ue)
                    }
                    return fe
                }
                )().then(le, ie)
            }
            )
        }
        function u(se, ee, J, te, ne) {
            for (const le = J.length; te < ne; te++) {
                const ie = se[te];
                if (ee(ie, J[le - 1]) < 0) {
                    J.pop();
                    const oe = (0,
                    n.$jb)(J, fe=>ee(ie, fe) < 0);
                    J.splice(oe, 0, ie)
                }
            }
        }
        function s(se) {
            return se.filter(ee=>!!ee)
        }
        function r(se) {
            let ee = 0;
            for (let J = 0; J < se.length; J++)
                se[J] && (se[ee] = se[J],
                ee += 1);
            se.length = ee
        }
        function l(se, ee, J) {
            se.splice(J, 0, se.splice(ee, 1)[0])
        }
        function o(se) {
            return !Array.isArray(se) || se.length === 0
        }
        function b(se) {
            return Array.isArray(se) && se.length > 0
        }
        function m(se, ee=J=>J) {
            const J = new Set;
            return se.filter(te=>{
                const ne = ee(te);
                return J.has(ne) ? !1 : (J.add(ne),
                !0)
            }
            )
        }
        function w(se) {
            const ee = new Set;
            return J=>{
                const te = se(J);
                return ee.has(te) ? !1 : (ee.add(te),
                !0)
            }
        }
        function S(se, ee) {
            return se.length > 0 ? se[0] : ee
        }
        function T(se, ee) {
            return se.length > 0 ? se[se.length - 1] : ee
        }
        function D(se, ee, J=(te,ne)=>te === ne) {
            let te = 0;
            for (let ne = 0, le = Math.min(se.length, ee.length); ne < le && J(se[ne], ee[ne]); ne++)
                te++;
            return te
        }
        function k(se, ee) {
            let J = typeof ee == "number" ? se : 0;
            typeof ee == "number" ? J = se : (J = 0,
            ee = se);
            const te = [];
            if (J <= ee)
                for (let ne = J; ne < ee; ne++)
                    te.push(ne);
            else
                for (let ne = J; ne > ee; ne--)
                    te.push(ne);
            return te
        }
        function P(se, ee, J) {
            return se.reduce((te,ne)=>(te[ee(ne)] = J ? J(ne) : ne,
            te), Object.create(null))
        }
        function A(se, ee) {
            return se.push(ee),
            ()=>M(se, ee)
        }
        function M(se, ee) {
            const J = se.indexOf(ee);
            if (J > -1)
                return se.splice(J, 1),
                ee
        }
        function O(se, ee, J) {
            const te = se.slice(0, ee)
              , ne = se.slice(ee);
            return te.concat(J, ne)
        }
        function R(se, ee) {
            let J;
            if (typeof ee == "number") {
                let te = ee;
                J = ()=>{
                    const ne = Math.sin(te++) * 179426549;
                    return ne - Math.floor(ne)
                }
            } else
                J = Math.random;
            for (let te = se.length - 1; te > 0; te -= 1) {
                const ne = Math.floor(J() * (te + 1))
                  , le = se[te];
                se[te] = se[ne],
                se[ne] = le
            }
        }
        function N(se, ee) {
            const J = se.indexOf(ee);
            J > -1 && (se.splice(J, 1),
            se.unshift(ee))
        }
        function z(se, ee) {
            const J = se.indexOf(ee);
            J > -1 && (se.splice(J, 1),
            se.push(ee))
        }
        function V(se, ee) {
            for (const J of ee)
                se.push(J)
        }
        function B(se, ee) {
            return Array.isArray(se) ? se.map(ee) : ee(se)
        }
        function j(se) {
            return Array.isArray(se) ? se : [se]
        }
        function W(se) {
            return se[Math.floor(Math.random() * se.length)]
        }
        function q(se, ee, J) {
            const te = U(se, ee)
              , ne = se.length
              , le = J.length;
            se.length = ne + le;
            for (let ie = ne - 1; ie >= te; ie--)
                se[ie + le] = se[ie];
            for (let ie = 0; ie < le; ie++)
                se[ie + te] = J[ie]
        }
        function H(se, ee, J, te) {
            const ne = U(se, ee);
            let le = se.splice(ne, J);
            return le === void 0 && (le = []),
            q(se, ne, te),
            le
        }
        function U(se, ee) {
            return ee < 0 ? Math.max(ee + se.length, 0) : Math.min(ee, se.length)
        }
        var K;
        (function(se) {
            function ee(le) {
                return le < 0
            }
            se.isLessThan = ee;
            function J(le) {
                return le <= 0
            }
            se.isLessThanOrEqual = J;
            function te(le) {
                return le > 0
            }
            se.isGreaterThan = te;
            function ne(le) {
                return le === 0
            }
            se.isNeitherLessOrGreaterThan = ne,
            se.greaterThan = 1,
            se.lessThan = -1,
            se.neitherLessOrGreaterThan = 0
        }
        )(K || (e.CompareResult = K = {}));
        function G(se, ee) {
            return (J,te)=>ee(se(J), se(te))
        }
        function Z(...se) {
            return (ee,J)=>{
                for (const te of se) {
                    const ne = te(ee, J);
                    if (!K.isNeitherLessOrGreaterThan(ne))
                        return ne
                }
                return K.neitherLessOrGreaterThan
            }
        }
        const x = (se,ee)=>se - ee;
        e.$7b = x;
        const X = (se,ee)=>(0,
        e.$7b)(se ? 1 : 0, ee ? 1 : 0);
        e.$8b = X;
        function Y(se) {
            return (ee,J)=>-se(ee, J)
        }
        class Q {
            constructor(ee) {
                this.g = ee,
                this.c = 0,
                this.d = this.g.length - 1
            }
            get length() {
                return this.d - this.c + 1
            }
            takeWhile(ee) {
                let J = this.c;
                for (; J < this.g.length && ee(this.g[J]); )
                    J++;
                const te = J === this.c ? null : this.g.slice(this.c, J);
                return this.c = J,
                te
            }
            takeFromEndWhile(ee) {
                let J = this.d;
                for (; J >= 0 && ee(this.g[J]); )
                    J--;
                const te = J === this.d ? null : this.g.slice(J + 1, this.d + 1);
                return this.d = J,
                te
            }
            peek() {
                if (this.length !== 0)
                    return this.g[this.c]
            }
            peekLast() {
                if (this.length !== 0)
                    return this.g[this.d]
            }
            dequeue() {
                const ee = this.g[this.c];
                return this.c++,
                ee
            }
            removeLast() {
                const ee = this.g[this.d];
                return this.d--,
                ee
            }
            takeCount(ee) {
                const J = this.g.slice(this.c, this.c + ee);
                return this.c += ee,
                J
            }
        }
        e.$0b = Q;
        class _ {
            static{this.empty = new _(ee=>{}
            )
            }constructor(ee) {
                this.iterate = ee
            }
            forEach(ee) {
                this.iterate(J=>(ee(J),
                !0))
            }
            toArray() {
                const ee = [];
                return this.iterate(J=>(ee.push(J),
                !0)),
                ee
            }
            filter(ee) {
                return new _(J=>this.iterate(te=>ee(te) ? J(te) : !0))
            }
            map(ee) {
                return new _(J=>this.iterate(te=>J(ee(te))))
            }
            some(ee) {
                let J = !1;
                return this.iterate(te=>(J = ee(te),
                !J)),
                J
            }
            findFirst(ee) {
                let J;
                return this.iterate(te=>ee(te) ? (J = te,
                !1) : !0),
                J
            }
            findLast(ee) {
                let J;
                return this.iterate(te=>(ee(te) && (J = te),
                !0)),
                J
            }
            findLastMaxBy(ee) {
                let J, te = !0;
                return this.iterate(ne=>((te || K.isGreaterThan(ee(ne, J))) && (te = !1,
                J = ne),
                !0)),
                J
            }
        }
        e.$$b = _;
        class ae {
            constructor(ee) {
                this.c = ee
            }
            static createSortPermutation(ee, J) {
                const te = Array.from(ee.keys()).sort((ne,le)=>J(ee[ne], ee[le]));
                return new ae(te)
            }
            apply(ee) {
                return ee.map((J,te)=>ee[this.c[te]])
            }
            inverse() {
                const ee = this.c.slice();
                for (let J = 0; J < this.c.length; J++)
                    ee[this.c[J]] = J;
                return new ae(ee)
            }
        }
        e.$_b = ae;
        async function re(se, ee) {
            return (await Promise.all(se.map(async(te,ne)=>({
                element: te,
                ok: await ee(te, ne)
            })))).find(te=>te.ok)?.element
        }
    }),
    define(ge[180], be([1, 0, 14]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.ok = n,
        e.$ed = C,
        e.$fd = I,
        e.$gd = L,
        e.$hd = y,
        e.$id = E;
        function n($, v) {
            if (!$)
                throw new Error(v ? `Assertion failed (${v})` : "Assertion Failed")
        }
        function C($, v="Unreachable") {
            throw new Error(v)
        }
        function I($, v="unexpected state") {
            if (!$)
                throw new t.$bb(`Assertion Failed: ${v}`)
        }
        function L($) {
            $ || (0,
            t.$Y)(new t.$bb("Soft Assertion Failed"))
        }
        function y($) {
            if (!$()) {
                debugger ;$(),
                (0,
                t.$Y)(new t.$bb("Assertion Failed"))
            }
        }
        function E($, v) {
            let f = 0;
            for (; f < $.length - 1; ) {
                const g = $[f]
                  , p = $[f + 1];
                if (!v(g, p))
                    return !1;
                f++
            }
            return !0
        }
    }),
    define(ge[739], be([1, 0, 14]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$uX = void 0;
        class n {
            constructor() {
                this.a = !1
            }
            runExclusivelyOrSkip(I) {
                if (!this.a) {
                    this.a = !0;
                    try {
                        I()
                    } finally {
                        this.a = !1
                    }
                }
            }
            runExclusivelyOrThrow(I) {
                if (this.a)
                    throw new t.$bb("ReentrancyBarrier: reentrant call detected!");
                this.a = !0;
                try {
                    I()
                } finally {
                    this.a = !1
                }
            }
            get isOccupied() {
                return this.a
            }
            makeExclusiveOrSkip(I) {
                return (...L)=>{
                    if (!this.a) {
                        this.a = !0;
                        try {
                            return I(...L)
                        } finally {
                            this.a = !1
                        }
                    }
                }
            }
        }
        e.$uX = n
    });
    var Gn = this && this.__createBinding || (Object.create ? function(ce, e, t, n) {
        n === void 0 && (n = t);
        var C = Object.getOwnPropertyDescriptor(e, t);
        (!C || ("get"in C ? !e.__esModule : C.writable || C.configurable)) && (C = {
            enumerable: !0,
            get: function() {
                return e[t]
            }
        }),
        Object.defineProperty(ce, n, C)
    }
    : function(ce, e, t, n) {
        n === void 0 && (n = t),
        ce[n] = e[t]
    }
    )
      , _s = this && this.__setModuleDefault || (Object.create ? function(ce, e) {
        Object.defineProperty(ce, "default", {
            enumerable: !0,
            value: e
        })
    }
    : function(ce, e) {
        ce.default = e
    }
    )
      , xe = this && this.__importStar || function(ce) {
        if (ce && ce.__esModule)
            return ce;
        var e = {};
        if (ce != null)
            for (var t in ce)
                t !== "default" && Object.prototype.hasOwnProperty.call(ce, t) && Gn(e, ce, t);
        return _s(e, ce),
        e
    }
    ;
    define(ge[320], be([1, 0, 13]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$6c = void 0,
        e.$7c = C,
        e.$8c = I,
        e.$9c = L,
        e.$0c = y,
        e.$$c = E,
        e.$_c = $,
        t = xe(t);
        const n = (p,i)=>p === i;
        e.$6c = n;
        function C(p=e.$6c) {
            return (i,c)=>t.$tb(i, c, p)
        }
        function I() {
            return (p,i)=>JSON.stringify(p) === JSON.stringify(i)
        }
        function L() {
            return (p,i)=>p.equals(i)
        }
        function y(p, i, c) {
            if (c !== void 0) {
                const h = p;
                return h == null || i === void 0 || i === null ? i === h : c(h, i)
            } else {
                const h = p;
                return (a,d)=>a == null || d === void 0 || d === null ? d === a : h(a, d)
            }
        }
        function E(p, i) {
            if (p === i)
                return !0;
            if (Array.isArray(p) && Array.isArray(i)) {
                if (p.length !== i.length)
                    return !1;
                for (let c = 0; c < p.length; c++)
                    if (!E(p[c], i[c]))
                        return !1;
                return !0
            }
            if (p && typeof p == "object" && i && typeof i == "object" && Object.getPrototypeOf(p) === Object.prototype && Object.getPrototypeOf(i) === Object.prototype) {
                const c = p
                  , h = i
                  , a = Object.keys(c)
                  , d = Object.keys(h)
                  , u = new Set(d);
                if (a.length !== d.length)
                    return !1;
                for (const s of a)
                    if (!u.has(s) || !E(c[s], h[s]))
                        return !1;
                return !0
            }
            return !1
        }
        function $(p) {
            return JSON.stringify(g(p))
        }
        let v = 0;
        const f = new WeakMap;
        function g(p) {
            if (Array.isArray(p))
                return p.map(g);
            if (p && typeof p == "object")
                if (Object.getPrototypeOf(p) === Object.prototype) {
                    const i = p
                      , c = Object.create(null);
                    for (const h of Object.keys(i).sort())
                        c[h] = g(i[h]);
                    return c
                } else {
                    let i = f.get(p);
                    return i === void 0 && (i = v++,
                    f.set(p, i)),
                    i + "----2b76a038c20c4bcc"
                }
            return p
        }
    }),
    define(ge[224], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$cb = t;
        function t(n, C) {
            const I = this;
            let L = !1, y;
            return function() {
                if (L)
                    return y;
                if (L = !0,
                C)
                    try {
                        y = n.apply(I, arguments)
                    } finally {
                        C()
                    }
                else
                    y = n.apply(I, arguments);
                return y
            }
        }
    }),
    define(ge[247], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$uu = void 0;
        class t {
            static{this.sep = "."
            }static{this.None = new t("@@none@@")
            }static{this.Empty = new t("")
            }constructor(C) {
                this.value = C
            }
            equals(C) {
                return this.value === C.value
            }
            contains(C) {
                return this.equals(C) || this.value === "" || C.value.startsWith(this.value + t.sep)
            }
            intersects(C) {
                return this.contains(C) || C.contains(this)
            }
            append(...C) {
                return new t((this.value ? [this.value, ...C] : C).join(t.sep))
            }
        }
        e.$uu = t
    }),
    define(ge[457], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$qQ = e.$pQ = void 0;
        class t {
            constructor(C) {
                this.a = C,
                this.b = 0
            }
            nextId() {
                return this.a + ++this.b
            }
        }
        e.$pQ = t,
        e.$qQ = new t("id#")
    }),
    define(ge[89], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.Iterable = void 0;
        var t;
        (function(n) {
            function C(o) {
                return o && typeof o == "object" && typeof o[Symbol.iterator] == "function"
            }
            n.is = C;
            const I = Object.freeze([]);
            function L() {
                return I
            }
            n.empty = L;
            function *y(o) {
                yield o
            }
            n.single = y;
            function E(o) {
                return C(o) ? o : y(o)
            }
            n.wrap = E;
            function $(o) {
                return o || I
            }
            n.from = $;
            function *v(o) {
                for (let b = o.length - 1; b >= 0; b--)
                    yield o[b]
            }
            n.reverse = v;
            function f(o) {
                return !o || o[Symbol.iterator]().next().done === !0
            }
            n.isEmpty = f;
            function g(o) {
                return o[Symbol.iterator]().next().value
            }
            n.first = g;
            function p(o, b) {
                let m = 0;
                for (const w of o)
                    if (b(w, m++))
                        return !0;
                return !1
            }
            n.some = p;
            function i(o, b) {
                for (const m of o)
                    if (b(m))
                        return m
            }
            n.find = i;
            function *c(o, b) {
                for (const m of o)
                    b(m) && (yield m)
            }
            n.filter = c;
            function *h(o, b) {
                let m = 0;
                for (const w of o)
                    yield b(w, m++)
            }
            n.map = h;
            function *a(o, b) {
                let m = 0;
                for (const w of o)
                    yield*b(w, m++)
            }
            n.flatMap = a;
            function *d(...o) {
                for (const b of o)
                    yield*b
            }
            n.concat = d;
            function u(o, b, m) {
                let w = m;
                for (const S of o)
                    w = b(w, S);
                return w
            }
            n.reduce = u;
            function *s(o, b, m=o.length) {
                for (b < 0 && (b += o.length),
                m < 0 ? m += o.length : m > o.length && (m = o.length); b < m; b++)
                    yield o[b]
            }
            n.slice = s;
            function r(o, b=Number.POSITIVE_INFINITY) {
                const m = [];
                if (b === 0)
                    return [m, o];
                const w = o[Symbol.iterator]();
                for (let S = 0; S < b; S++) {
                    const T = w.next();
                    if (T.done)
                        return [m, n.empty()];
                    m.push(T.value)
                }
                return [m, {
                    [Symbol.iterator]() {
                        return w
                    }
                }]
            }
            n.consume = r;
            async function l(o) {
                const b = [];
                for await(const m of o)
                    b.push(m);
                return Promise.resolve(b)
            }
            n.asyncToArray = l
        }
        )(t || (e.Iterable = t = {}))
    }),
    define(ge[161], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.ParseOptions = e.ParseErrorCode = e.SyntaxKind = e.ScanError = void 0,
        e.$Wn = L,
        e.$Xn = f,
        e.$Yn = g,
        e.$Zn = p,
        e.$1n = i,
        e.$2n = c,
        e.$3n = h,
        e.$4n = a,
        e.$5n = d,
        e.$6n = u,
        e.$7n = s;
        var t;
        (function(r) {
            r[r.None = 0] = "None",
            r[r.UnexpectedEndOfComment = 1] = "UnexpectedEndOfComment",
            r[r.UnexpectedEndOfString = 2] = "UnexpectedEndOfString",
            r[r.UnexpectedEndOfNumber = 3] = "UnexpectedEndOfNumber",
            r[r.InvalidUnicode = 4] = "InvalidUnicode",
            r[r.InvalidEscapeCharacter = 5] = "InvalidEscapeCharacter",
            r[r.InvalidCharacter = 6] = "InvalidCharacter"
        }
        )(t || (e.ScanError = t = {}));
        var n;
        (function(r) {
            r[r.OpenBraceToken = 1] = "OpenBraceToken",
            r[r.CloseBraceToken = 2] = "CloseBraceToken",
            r[r.OpenBracketToken = 3] = "OpenBracketToken",
            r[r.CloseBracketToken = 4] = "CloseBracketToken",
            r[r.CommaToken = 5] = "CommaToken",
            r[r.ColonToken = 6] = "ColonToken",
            r[r.NullKeyword = 7] = "NullKeyword",
            r[r.TrueKeyword = 8] = "TrueKeyword",
            r[r.FalseKeyword = 9] = "FalseKeyword",
            r[r.StringLiteral = 10] = "StringLiteral",
            r[r.NumericLiteral = 11] = "NumericLiteral",
            r[r.LineCommentTrivia = 12] = "LineCommentTrivia",
            r[r.BlockCommentTrivia = 13] = "BlockCommentTrivia",
            r[r.LineBreakTrivia = 14] = "LineBreakTrivia",
            r[r.Trivia = 15] = "Trivia",
            r[r.Unknown = 16] = "Unknown",
            r[r.EOF = 17] = "EOF"
        }
        )(n || (e.SyntaxKind = n = {}));
        var C;
        (function(r) {
            r[r.InvalidSymbol = 1] = "InvalidSymbol",
            r[r.InvalidNumberFormat = 2] = "InvalidNumberFormat",
            r[r.PropertyNameExpected = 3] = "PropertyNameExpected",
            r[r.ValueExpected = 4] = "ValueExpected",
            r[r.ColonExpected = 5] = "ColonExpected",
            r[r.CommaExpected = 6] = "CommaExpected",
            r[r.CloseBraceExpected = 7] = "CloseBraceExpected",
            r[r.CloseBracketExpected = 8] = "CloseBracketExpected",
            r[r.EndOfFileExpected = 9] = "EndOfFileExpected",
            r[r.InvalidCommentToken = 10] = "InvalidCommentToken",
            r[r.UnexpectedEndOfComment = 11] = "UnexpectedEndOfComment",
            r[r.UnexpectedEndOfString = 12] = "UnexpectedEndOfString",
            r[r.UnexpectedEndOfNumber = 13] = "UnexpectedEndOfNumber",
            r[r.InvalidUnicode = 14] = "InvalidUnicode",
            r[r.InvalidEscapeCharacter = 15] = "InvalidEscapeCharacter",
            r[r.InvalidCharacter = 16] = "InvalidCharacter"
        }
        )(C || (e.ParseErrorCode = C = {}));
        var I;
        (function(r) {
            r.DEFAULT = {
                allowTrailingComma: !0
            }
        }
        )(I || (e.ParseOptions = I = {}));
        function L(r, l=!1) {
            let o = 0;
            const b = r.length;
            let m = ""
              , w = 0
              , S = n.Unknown
              , T = t.None;
            function D(N) {
                let z = 0
                  , V = 0;
                for (; z < N; ) {
                    const B = r.charCodeAt(o);
                    if (B >= v._0 && B <= v._9)
                        V = V * 16 + B - v._0;
                    else if (B >= v.A && B <= v.F)
                        V = V * 16 + B - v.A + 10;
                    else if (B >= v.a && B <= v.f)
                        V = V * 16 + B - v.a + 10;
                    else
                        break;
                    o++,
                    z++
                }
                return z < N && (V = -1),
                V
            }
            function k(N) {
                o = N,
                m = "",
                w = 0,
                S = n.Unknown,
                T = t.None
            }
            function P() {
                const N = o;
                if (r.charCodeAt(o) === v._0)
                    o++;
                else
                    for (o++; o < r.length && $(r.charCodeAt(o)); )
                        o++;
                if (o < r.length && r.charCodeAt(o) === v.dot)
                    if (o++,
                    o < r.length && $(r.charCodeAt(o)))
                        for (o++; o < r.length && $(r.charCodeAt(o)); )
                            o++;
                    else
                        return T = t.UnexpectedEndOfNumber,
                        r.substring(N, o);
                let z = o;
                if (o < r.length && (r.charCodeAt(o) === v.E || r.charCodeAt(o) === v.e))
                    if (o++,
                    (o < r.length && r.charCodeAt(o) === v.plus || r.charCodeAt(o) === v.minus) && o++,
                    o < r.length && $(r.charCodeAt(o))) {
                        for (o++; o < r.length && $(r.charCodeAt(o)); )
                            o++;
                        z = o
                    } else
                        T = t.UnexpectedEndOfNumber;
                return r.substring(N, z)
            }
            function A() {
                let N = ""
                  , z = o;
                for (; ; ) {
                    if (o >= b) {
                        N += r.substring(z, o),
                        T = t.UnexpectedEndOfString;
                        break
                    }
                    const V = r.charCodeAt(o);
                    if (V === v.doubleQuote) {
                        N += r.substring(z, o),
                        o++;
                        break
                    }
                    if (V === v.backslash) {
                        if (N += r.substring(z, o),
                        o++,
                        o >= b) {
                            T = t.UnexpectedEndOfString;
                            break
                        }
                        switch (r.charCodeAt(o++)) {
                        case v.doubleQuote:
                            N += '"';
                            break;
                        case v.backslash:
                            N += "\\";
                            break;
                        case v.slash:
                            N += "/";
                            break;
                        case v.b:
                            N += "\b";
                            break;
                        case v.f:
                            N += "\f";
                            break;
                        case v.n:
                            N += `
`;
                            break;
                        case v.r:
                            N += "\r";
                            break;
                        case v.t:
                            N += "	";
                            break;
                        case v.u:
                            {
                                const j = D(4);
                                j >= 0 ? N += String.fromCharCode(j) : T = t.InvalidUnicode;
                                break
                            }
                        default:
                            T = t.InvalidEscapeCharacter
                        }
                        z = o;
                        continue
                    }
                    if (V >= 0 && V <= 31)
                        if (E(V)) {
                            N += r.substring(z, o),
                            T = t.UnexpectedEndOfString;
                            break
                        } else
                            T = t.InvalidCharacter;
                    o++
                }
                return N
            }
            function M() {
                if (m = "",
                T = t.None,
                w = o,
                o >= b)
                    return w = b,
                    S = n.EOF;
                let N = r.charCodeAt(o);
                if (y(N)) {
                    do
                        o++,
                        m += String.fromCharCode(N),
                        N = r.charCodeAt(o);
                    while (y(N));
                    return S = n.Trivia
                }
                if (E(N))
                    return o++,
                    m += String.fromCharCode(N),
                    N === v.carriageReturn && r.charCodeAt(o) === v.lineFeed && (o++,
                    m += `
`),
                    S = n.LineBreakTrivia;
                switch (N) {
                case v.openBrace:
                    return o++,
                    S = n.OpenBraceToken;
                case v.closeBrace:
                    return o++,
                    S = n.CloseBraceToken;
                case v.openBracket:
                    return o++,
                    S = n.OpenBracketToken;
                case v.closeBracket:
                    return o++,
                    S = n.CloseBracketToken;
                case v.colon:
                    return o++,
                    S = n.ColonToken;
                case v.comma:
                    return o++,
                    S = n.CommaToken;
                case v.doubleQuote:
                    return o++,
                    m = A(),
                    S = n.StringLiteral;
                case v.slash:
                    {
                        const z = o - 1;
                        if (r.charCodeAt(o + 1) === v.slash) {
                            for (o += 2; o < b && !E(r.charCodeAt(o)); )
                                o++;
                            return m = r.substring(z, o),
                            S = n.LineCommentTrivia
                        }
                        if (r.charCodeAt(o + 1) === v.asterisk) {
                            o += 2;
                            const V = b - 1;
                            let B = !1;
                            for (; o < V; ) {
                                if (r.charCodeAt(o) === v.asterisk && r.charCodeAt(o + 1) === v.slash) {
                                    o += 2,
                                    B = !0;
                                    break
                                }
                                o++
                            }
                            return B || (o++,
                            T = t.UnexpectedEndOfComment),
                            m = r.substring(z, o),
                            S = n.BlockCommentTrivia
                        }
                        return m += String.fromCharCode(N),
                        o++,
                        S = n.Unknown
                    }
                case v.minus:
                    if (m += String.fromCharCode(N),
                    o++,
                    o === b || !$(r.charCodeAt(o)))
                        return S = n.Unknown;
                case v._0:
                case v._1:
                case v._2:
                case v._3:
                case v._4:
                case v._5:
                case v._6:
                case v._7:
                case v._8:
                case v._9:
                    return m += P(),
                    S = n.NumericLiteral;
                default:
                    for (; o < b && O(N); )
                        o++,
                        N = r.charCodeAt(o);
                    if (w !== o) {
                        switch (m = r.substring(w, o),
                        m) {
                        case "true":
                            return S = n.TrueKeyword;
                        case "false":
                            return S = n.FalseKeyword;
                        case "null":
                            return S = n.NullKeyword
                        }
                        return S = n.Unknown
                    }
                    return m += String.fromCharCode(N),
                    o++,
                    S = n.Unknown
                }
            }
            function O(N) {
                if (y(N) || E(N))
                    return !1;
                switch (N) {
                case v.closeBrace:
                case v.closeBracket:
                case v.openBrace:
                case v.openBracket:
                case v.doubleQuote:
                case v.colon:
                case v.comma:
                case v.slash:
                    return !1
                }
                return !0
            }
            function R() {
                let N;
                do
                    N = M();
                while (N >= n.LineCommentTrivia && N <= n.Trivia);
                return N
            }
            return {
                setPosition: k,
                getPosition: ()=>o,
                scan: l ? R : M,
                getToken: ()=>S,
                getTokenValue: ()=>m,
                getTokenOffset: ()=>w,
                getTokenLength: ()=>o - w,
                getTokenError: ()=>T
            }
        }
        function y(r) {
            return r === v.space || r === v.tab || r === v.verticalTab || r === v.formFeed || r === v.nonBreakingSpace || r === v.ogham || r >= v.enQuad && r <= v.zeroWidthSpace || r === v.narrowNoBreakSpace || r === v.mathematicalSpace || r === v.ideographicSpace || r === v.byteOrderMark
        }
        function E(r) {
            return r === v.lineFeed || r === v.carriageReturn || r === v.lineSeparator || r === v.paragraphSeparator
        }
        function $(r) {
            return r >= v._0 && r <= v._9
        }
        var v;
        (function(r) {
            r[r.nullCharacter = 0] = "nullCharacter",
            r[r.maxAsciiCharacter = 127] = "maxAsciiCharacter",
            r[r.lineFeed = 10] = "lineFeed",
            r[r.carriageReturn = 13] = "carriageReturn",
            r[r.lineSeparator = 8232] = "lineSeparator",
            r[r.paragraphSeparator = 8233] = "paragraphSeparator",
            r[r.nextLine = 133] = "nextLine",
            r[r.space = 32] = "space",
            r[r.nonBreakingSpace = 160] = "nonBreakingSpace",
            r[r.enQuad = 8192] = "enQuad",
            r[r.emQuad = 8193] = "emQuad",
            r[r.enSpace = 8194] = "enSpace",
            r[r.emSpace = 8195] = "emSpace",
            r[r.threePerEmSpace = 8196] = "threePerEmSpace",
            r[r.fourPerEmSpace = 8197] = "fourPerEmSpace",
            r[r.sixPerEmSpace = 8198] = "sixPerEmSpace",
            r[r.figureSpace = 8199] = "figureSpace",
            r[r.punctuationSpace = 8200] = "punctuationSpace",
            r[r.thinSpace = 8201] = "thinSpace",
            r[r.hairSpace = 8202] = "hairSpace",
            r[r.zeroWidthSpace = 8203] = "zeroWidthSpace",
            r[r.narrowNoBreakSpace = 8239] = "narrowNoBreakSpace",
            r[r.ideographicSpace = 12288] = "ideographicSpace",
            r[r.mathematicalSpace = 8287] = "mathematicalSpace",
            r[r.ogham = 5760] = "ogham",
            r[r._ = 95] = "_",
            r[r.$ = 36] = "$",
            r[r._0 = 48] = "_0",
            r[r._1 = 49] = "_1",
            r[r._2 = 50] = "_2",
            r[r._3 = 51] = "_3",
            r[r._4 = 52] = "_4",
            r[r._5 = 53] = "_5",
            r[r._6 = 54] = "_6",
            r[r._7 = 55] = "_7",
            r[r._8 = 56] = "_8",
            r[r._9 = 57] = "_9",
            r[r.a = 97] = "a",
            r[r.b = 98] = "b",
            r[r.c = 99] = "c",
            r[r.d = 100] = "d",
            r[r.e = 101] = "e",
            r[r.f = 102] = "f",
            r[r.g = 103] = "g",
            r[r.h = 104] = "h",
            r[r.i = 105] = "i",
            r[r.j = 106] = "j",
            r[r.k = 107] = "k",
            r[r.l = 108] = "l",
            r[r.m = 109] = "m",
            r[r.n = 110] = "n",
            r[r.o = 111] = "o",
            r[r.p = 112] = "p",
            r[r.q = 113] = "q",
            r[r.r = 114] = "r",
            r[r.s = 115] = "s",
            r[r.t = 116] = "t",
            r[r.u = 117] = "u",
            r[r.v = 118] = "v",
            r[r.w = 119] = "w",
            r[r.x = 120] = "x",
            r[r.y = 121] = "y",
            r[r.z = 122] = "z",
            r[r.A = 65] = "A",
            r[r.B = 66] = "B",
            r[r.C = 67] = "C",
            r[r.D = 68] = "D",
            r[r.E = 69] = "E",
            r[r.F = 70] = "F",
            r[r.G = 71] = "G",
            r[r.H = 72] = "H",
            r[r.I = 73] = "I",
            r[r.J = 74] = "J",
            r[r.K = 75] = "K",
            r[r.L = 76] = "L",
            r[r.M = 77] = "M",
            r[r.N = 78] = "N",
            r[r.O = 79] = "O",
            r[r.P = 80] = "P",
            r[r.Q = 81] = "Q",
            r[r.R = 82] = "R",
            r[r.S = 83] = "S",
            r[r.T = 84] = "T",
            r[r.U = 85] = "U",
            r[r.V = 86] = "V",
            r[r.W = 87] = "W",
            r[r.X = 88] = "X",
            r[r.Y = 89] = "Y",
            r[r.Z = 90] = "Z",
            r[r.ampersand = 38] = "ampersand",
            r[r.asterisk = 42] = "asterisk",
            r[r.at = 64] = "at",
            r[r.backslash = 92] = "backslash",
            r[r.bar = 124] = "bar",
            r[r.caret = 94] = "caret",
            r[r.closeBrace = 125] = "closeBrace",
            r[r.closeBracket = 93] = "closeBracket",
            r[r.closeParen = 41] = "closeParen",
            r[r.colon = 58] = "colon",
            r[r.comma = 44] = "comma",
            r[r.dot = 46] = "dot",
            r[r.doubleQuote = 34] = "doubleQuote",
            r[r.equals = 61] = "equals",
            r[r.exclamation = 33] = "exclamation",
            r[r.greaterThan = 62] = "greaterThan",
            r[r.lessThan = 60] = "lessThan",
            r[r.minus = 45] = "minus",
            r[r.openBrace = 123] = "openBrace",
            r[r.openBracket = 91] = "openBracket",
            r[r.openParen = 40] = "openParen",
            r[r.percent = 37] = "percent",
            r[r.plus = 43] = "plus",
            r[r.question = 63] = "question",
            r[r.semicolon = 59] = "semicolon",
            r[r.singleQuote = 39] = "singleQuote",
            r[r.slash = 47] = "slash",
            r[r.tilde = 126] = "tilde",
            r[r.backspace = 8] = "backspace",
            r[r.formFeed = 12] = "formFeed",
            r[r.byteOrderMark = 65279] = "byteOrderMark",
            r[r.tab = 9] = "tab",
            r[r.verticalTab = 11] = "verticalTab"
        }
        )(v || (v = {}));
        function f(r, l) {
            const o = []
              , b = new Object;
            let m;
            const w = {
                value: {},
                offset: 0,
                length: 0,
                type: "object",
                parent: void 0
            };
            let S = !1;
            function T(D, k, P, A) {
                w.value = D,
                w.offset = k,
                w.length = P,
                w.type = A,
                w.colonOffset = void 0,
                m = w
            }
            try {
                u(r, {
                    onObjectBegin: (D,k)=>{
                        if (l <= D)
                            throw b;
                        m = void 0,
                        S = l > D,
                        o.push("")
                    }
                    ,
                    onObjectProperty: (D,k,P)=>{
                        if (l < k || (T(D, k, P, "property"),
                        o[o.length - 1] = D,
                        l <= k + P))
                            throw b
                    }
                    ,
                    onObjectEnd: (D,k)=>{
                        if (l <= D)
                            throw b;
                        m = void 0,
                        o.pop()
                    }
                    ,
                    onArrayBegin: (D,k)=>{
                        if (l <= D)
                            throw b;
                        m = void 0,
                        o.push(0)
                    }
                    ,
                    onArrayEnd: (D,k)=>{
                        if (l <= D)
                            throw b;
                        m = void 0,
                        o.pop()
                    }
                    ,
                    onLiteralValue: (D,k,P)=>{
                        if (l < k || (T(D, k, P, s(D)),
                        l <= k + P))
                            throw b
                    }
                    ,
                    onSeparator: (D,k,P)=>{
                        if (l <= k)
                            throw b;
                        if (D === ":" && m && m.type === "property")
                            m.colonOffset = k,
                            S = !1,
                            m = void 0;
                        else if (D === ",") {
                            const A = o[o.length - 1];
                            typeof A == "number" ? o[o.length - 1] = A + 1 : (S = !0,
                            o[o.length - 1] = ""),
                            m = void 0
                        }
                    }
                })
            } catch (D) {
                if (D !== b)
                    throw D
            }
            return {
                path: o,
                previousNode: m,
                isAtPropertyKey: S,
                matches: D=>{
                    let k = 0;
                    for (let P = 0; k < D.length && P < o.length; P++)
                        if (D[k] === o[P] || D[k] === "*")
                            k++;
                        else if (D[k] !== "**")
                            return !1;
                    return k === D.length
                }
            }
        }
        function g(r, l=[], o=I.DEFAULT) {
            let b = null
              , m = [];
            const w = [];
            function S(D) {
                Array.isArray(m) ? m.push(D) : b !== null && (m[b] = D)
            }
            return u(r, {
                onObjectBegin: ()=>{
                    const D = {};
                    S(D),
                    w.push(m),
                    m = D,
                    b = null
                }
                ,
                onObjectProperty: D=>{
                    b = D
                }
                ,
                onObjectEnd: ()=>{
                    m = w.pop()
                }
                ,
                onArrayBegin: ()=>{
                    const D = [];
                    S(D),
                    w.push(m),
                    m = D,
                    b = null
                }
                ,
                onArrayEnd: ()=>{
                    m = w.pop()
                }
                ,
                onLiteralValue: S,
                onError: (D,k,P)=>{
                    l.push({
                        error: D,
                        offset: k,
                        length: P
                    })
                }
            }, o),
            m[0]
        }
        function p(r, l=[], o=I.DEFAULT) {
            let b = {
                type: "array",
                offset: -1,
                length: -1,
                children: [],
                parent: void 0
            };
            function m(D) {
                b.type === "property" && (b.length = D - b.offset,
                b = b.parent)
            }
            function w(D) {
                return b.children.push(D),
                D
            }
            u(r, {
                onObjectBegin: D=>{
                    b = w({
                        type: "object",
                        offset: D,
                        length: -1,
                        parent: b,
                        children: []
                    })
                }
                ,
                onObjectProperty: (D,k,P)=>{
                    b = w({
                        type: "property",
                        offset: k,
                        length: -1,
                        parent: b,
                        children: []
                    }),
                    b.children.push({
                        type: "string",
                        value: D,
                        offset: k,
                        length: P,
                        parent: b
                    })
                }
                ,
                onObjectEnd: (D,k)=>{
                    b.length = D + k - b.offset,
                    b = b.parent,
                    m(D + k)
                }
                ,
                onArrayBegin: (D,k)=>{
                    b = w({
                        type: "array",
                        offset: D,
                        length: -1,
                        parent: b,
                        children: []
                    })
                }
                ,
                onArrayEnd: (D,k)=>{
                    b.length = D + k - b.offset,
                    b = b.parent,
                    m(D + k)
                }
                ,
                onLiteralValue: (D,k,P)=>{
                    w({
                        type: s(D),
                        offset: k,
                        length: P,
                        parent: b,
                        value: D
                    }),
                    m(k + P)
                }
                ,
                onSeparator: (D,k,P)=>{
                    b.type === "property" && (D === ":" ? b.colonOffset = k : D === "," && m(k))
                }
                ,
                onError: (D,k,P)=>{
                    l.push({
                        error: D,
                        offset: k,
                        length: P
                    })
                }
            }, o);
            const T = b.children[0];
            return T && delete T.parent,
            T
        }
        function i(r, l) {
            if (!r)
                return;
            let o = r;
            for (const b of l)
                if (typeof b == "string") {
                    if (o.type !== "object" || !Array.isArray(o.children))
                        return;
                    let m = !1;
                    for (const w of o.children)
                        if (Array.isArray(w.children) && w.children[0].value === b) {
                            o = w.children[1],
                            m = !0;
                            break
                        }
                    if (!m)
                        return
                } else {
                    const m = b;
                    if (o.type !== "array" || m < 0 || !Array.isArray(o.children) || m >= o.children.length)
                        return;
                    o = o.children[m]
                }
            return o
        }
        function c(r) {
            if (!r.parent || !r.parent.children)
                return [];
            const l = c(r.parent);
            if (r.parent.type === "property") {
                const o = r.parent.children[0].value;
                l.push(o)
            } else if (r.parent.type === "array") {
                const o = r.parent.children.indexOf(r);
                o !== -1 && l.push(o)
            }
            return l
        }
        function h(r) {
            switch (r.type) {
            case "array":
                return r.children.map(h);
            case "object":
                {
                    const l = Object.create(null);
                    for (const o of r.children) {
                        const b = o.children[1];
                        b && (l[o.children[0].value] = h(b))
                    }
                    return l
                }
            case "null":
            case "string":
            case "number":
            case "boolean":
                return r.value;
            default:
                return
            }
        }
        function a(r, l, o=!1) {
            return l >= r.offset && l < r.offset + r.length || o && l === r.offset + r.length
        }
        function d(r, l, o=!1) {
            if (a(r, l, o)) {
                const b = r.children;
                if (Array.isArray(b))
                    for (let m = 0; m < b.length && b[m].offset <= l; m++) {
                        const w = d(b[m], l, o);
                        if (w)
                            return w
                    }
                return r
            }
        }
        function u(r, l, o=I.DEFAULT) {
            const b = L(r, !1);
            function m(G) {
                return G ? ()=>G(b.getTokenOffset(), b.getTokenLength()) : ()=>!0
            }
            function w(G) {
                return G ? Z=>G(Z, b.getTokenOffset(), b.getTokenLength()) : ()=>!0
            }
            const S = m(l.onObjectBegin)
              , T = w(l.onObjectProperty)
              , D = m(l.onObjectEnd)
              , k = m(l.onArrayBegin)
              , P = m(l.onArrayEnd)
              , A = w(l.onLiteralValue)
              , M = w(l.onSeparator)
              , O = m(l.onComment)
              , R = w(l.onError)
              , N = o && o.disallowComments
              , z = o && o.allowTrailingComma;
            function V() {
                for (; ; ) {
                    const G = b.scan();
                    switch (b.getTokenError()) {
                    case t.InvalidUnicode:
                        B(C.InvalidUnicode);
                        break;
                    case t.InvalidEscapeCharacter:
                        B(C.InvalidEscapeCharacter);
                        break;
                    case t.UnexpectedEndOfNumber:
                        B(C.UnexpectedEndOfNumber);
                        break;
                    case t.UnexpectedEndOfComment:
                        N || B(C.UnexpectedEndOfComment);
                        break;
                    case t.UnexpectedEndOfString:
                        B(C.UnexpectedEndOfString);
                        break;
                    case t.InvalidCharacter:
                        B(C.InvalidCharacter);
                        break
                    }
                    switch (G) {
                    case n.LineCommentTrivia:
                    case n.BlockCommentTrivia:
                        N ? B(C.InvalidCommentToken) : O();
                        break;
                    case n.Unknown:
                        B(C.InvalidSymbol);
                        break;
                    case n.Trivia:
                    case n.LineBreakTrivia:
                        break;
                    default:
                        return G
                    }
                }
            }
            function B(G, Z=[], x=[]) {
                if (R(G),
                Z.length + x.length > 0) {
                    let X = b.getToken();
                    for (; X !== n.EOF; ) {
                        if (Z.indexOf(X) !== -1) {
                            V();
                            break
                        } else if (x.indexOf(X) !== -1)
                            break;
                        X = V()
                    }
                }
            }
            function j(G) {
                const Z = b.getTokenValue();
                return G ? A(Z) : T(Z),
                V(),
                !0
            }
            function W() {
                switch (b.getToken()) {
                case n.NumericLiteral:
                    {
                        let G = 0;
                        try {
                            G = JSON.parse(b.getTokenValue()),
                            typeof G != "number" && (B(C.InvalidNumberFormat),
                            G = 0)
                        } catch {
                            B(C.InvalidNumberFormat)
                        }
                        A(G);
                        break
                    }
                case n.NullKeyword:
                    A(null);
                    break;
                case n.TrueKeyword:
                    A(!0);
                    break;
                case n.FalseKeyword:
                    A(!1);
                    break;
                default:
                    return !1
                }
                return V(),
                !0
            }
            function q() {
                return b.getToken() !== n.StringLiteral ? (B(C.PropertyNameExpected, [], [n.CloseBraceToken, n.CommaToken]),
                !1) : (j(!1),
                b.getToken() === n.ColonToken ? (M(":"),
                V(),
                K() || B(C.ValueExpected, [], [n.CloseBraceToken, n.CommaToken])) : B(C.ColonExpected, [], [n.CloseBraceToken, n.CommaToken]),
                !0)
            }
            function H() {
                S(),
                V();
                let G = !1;
                for (; b.getToken() !== n.CloseBraceToken && b.getToken() !== n.EOF; ) {
                    if (b.getToken() === n.CommaToken) {
                        if (G || B(C.ValueExpected, [], []),
                        M(","),
                        V(),
                        b.getToken() === n.CloseBraceToken && z)
                            break
                    } else
                        G && B(C.CommaExpected, [], []);
                    q() || B(C.ValueExpected, [], [n.CloseBraceToken, n.CommaToken]),
                    G = !0
                }
                return D(),
                b.getToken() !== n.CloseBraceToken ? B(C.CloseBraceExpected, [n.CloseBraceToken], []) : V(),
                !0
            }
            function U() {
                k(),
                V();
                let G = !1;
                for (; b.getToken() !== n.CloseBracketToken && b.getToken() !== n.EOF; ) {
                    if (b.getToken() === n.CommaToken) {
                        if (G || B(C.ValueExpected, [], []),
                        M(","),
                        V(),
                        b.getToken() === n.CloseBracketToken && z)
                            break
                    } else
                        G && B(C.CommaExpected, [], []);
                    K() || B(C.ValueExpected, [], [n.CloseBracketToken, n.CommaToken]),
                    G = !0
                }
                return P(),
                b.getToken() !== n.CloseBracketToken ? B(C.CloseBracketExpected, [n.CloseBracketToken], []) : V(),
                !0
            }
            function K() {
                switch (b.getToken()) {
                case n.OpenBracketToken:
                    return U();
                case n.OpenBraceToken:
                    return H();
                case n.StringLiteral:
                    return j(!0);
                default:
                    return W()
                }
            }
            return V(),
            b.getToken() === n.EOF ? o.allowEmptyContent ? !0 : (B(C.ValueExpected, [], []),
            !1) : K() ? (b.getToken() !== n.EOF && B(C.EndOfFileExpected, [], []),
            !0) : (B(C.ValueExpected, [], []),
            !1)
        }
        function s(r) {
            switch (typeof r) {
            case "boolean":
                return "boolean";
            case "number":
                return "number";
            case "string":
                return "string";
            case "object":
                {
                    if (r) {
                        if (Array.isArray(r))
                            return "array"
                    } else
                        return "null";
                    return "object"
                }
            default:
                return "null"
            }
        }
    }),
    define(ge[421], be([1, 0, 161]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$8n = n,
        e.$9n = C,
        e.$0n = y,
        e.$$n = E;
        function n($, v, f) {
            let g, p, i, c, h;
            if (v) {
                for (c = v.offset,
                h = c + v.length,
                i = c; i > 0 && !E($, i - 1); )
                    i--;
                let T = h;
                for (; T < $.length && !E($, T); )
                    T++;
                p = $.substring(i, T),
                g = L(p, f)
            } else
                p = $,
                g = 0,
                i = 0,
                c = 0,
                h = $.length;
            const a = y(f, $);
            let d = !1, u = 0, s;
            f.insertSpaces ? s = I(" ", f.tabSize || 4) : s = "	";
            const r = (0,
            t.$Wn)(p, !1);
            let l = !1;
            function o() {
                return a + I(s, g + u)
            }
            function b() {
                let T = r.scan();
                for (d = !1; T === t.SyntaxKind.Trivia || T === t.SyntaxKind.LineBreakTrivia; )
                    d = d || T === t.SyntaxKind.LineBreakTrivia,
                    T = r.scan();
                return l = T === t.SyntaxKind.Unknown || r.getTokenError() !== t.ScanError.None,
                T
            }
            const m = [];
            function w(T, D, k) {
                !l && D < h && k > c && $.substring(D, k) !== T && m.push({
                    offset: D,
                    length: k - D,
                    content: T
                })
            }
            let S = b();
            if (S !== t.SyntaxKind.EOF) {
                const T = r.getTokenOffset() + i
                  , D = I(s, g);
                w(D, i, T)
            }
            for (; S !== t.SyntaxKind.EOF; ) {
                let T = r.getTokenOffset() + r.getTokenLength() + i
                  , D = b()
                  , k = "";
                for (; !d && (D === t.SyntaxKind.LineCommentTrivia || D === t.SyntaxKind.BlockCommentTrivia); ) {
                    const A = r.getTokenOffset() + i;
                    w(" ", T, A),
                    T = r.getTokenOffset() + r.getTokenLength() + i,
                    k = D === t.SyntaxKind.LineCommentTrivia ? o() : "",
                    D = b()
                }
                if (D === t.SyntaxKind.CloseBraceToken)
                    S !== t.SyntaxKind.OpenBraceToken && (u--,
                    k = o());
                else if (D === t.SyntaxKind.CloseBracketToken)
                    S !== t.SyntaxKind.OpenBracketToken && (u--,
                    k = o());
                else {
                    switch (S) {
                    case t.SyntaxKind.OpenBracketToken:
                    case t.SyntaxKind.OpenBraceToken:
                        u++,
                        k = o();
                        break;
                    case t.SyntaxKind.CommaToken:
                    case t.SyntaxKind.LineCommentTrivia:
                        k = o();
                        break;
                    case t.SyntaxKind.BlockCommentTrivia:
                        d ? k = o() : k = " ";
                        break;
                    case t.SyntaxKind.ColonToken:
                        k = " ";
                        break;
                    case t.SyntaxKind.StringLiteral:
                        if (D === t.SyntaxKind.ColonToken) {
                            k = "";
                            break
                        }
                    case t.SyntaxKind.NullKeyword:
                    case t.SyntaxKind.TrueKeyword:
                    case t.SyntaxKind.FalseKeyword:
                    case t.SyntaxKind.NumericLiteral:
                    case t.SyntaxKind.CloseBraceToken:
                    case t.SyntaxKind.CloseBracketToken:
                        D === t.SyntaxKind.LineCommentTrivia || D === t.SyntaxKind.BlockCommentTrivia ? k = " " : D !== t.SyntaxKind.CommaToken && D !== t.SyntaxKind.EOF && (l = !0);
                        break;
                    case t.SyntaxKind.Unknown:
                        l = !0;
                        break
                    }
                    d && (D === t.SyntaxKind.LineCommentTrivia || D === t.SyntaxKind.BlockCommentTrivia) && (k = o())
                }
                const P = r.getTokenOffset() + i;
                w(k, T, P),
                S = D
            }
            return m
        }
        function C($, v) {
            const f = JSON.stringify($, void 0, v.insertSpaces ? v.tabSize || 4 : "	");
            return v.eol !== void 0 ? f.replace(/\r\n|\r|\n/g, v.eol) : f
        }
        function I($, v) {
            let f = "";
            for (let g = 0; g < v; g++)
                f += $;
            return f
        }
        function L($, v) {
            let f = 0
              , g = 0;
            const p = v.tabSize || 4;
            for (; f < $.length; ) {
                const i = $.charAt(f);
                if (i === " ")
                    g++;
                else if (i === "	")
                    g += p;
                else
                    break;
                f++
            }
            return Math.floor(g / p)
        }
        function y($, v) {
            for (let f = 0; f < v.length; f++) {
                const g = v.charAt(f);
                if (g === "\r")
                    return f + 1 < v.length && v.charAt(f + 1) === `
` ? `\r
` : "\r";
                if (g === `
`)
                    return `
`
            }
            return $ && $.eol || `
`
        }
        function E($, v) {
            return `\r
`.indexOf($.charAt(v)) !== -1
        }
    }),
    define(ge[422], be([1, 0, 161, 421]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$_n = C,
        e.$ao = I,
        e.$bo = L,
        e.$co = y,
        e.$do = E;
        function C($, v, f) {
            return I($, v, void 0, f)
        }
        function I($, v, f, g, p) {
            const i = v.slice()
              , c = []
              , h = (0,
            t.$Zn)($, c);
            let a, d;
            for (; i.length > 0 && (d = i.pop(),
            a = (0,
            t.$1n)(h, i),
            a === void 0 && f !== void 0); )
                typeof d == "string" ? f = {
                    [d]: f
                } : f = [f];
            if (a)
                if (a.type === "object" && typeof d == "string" && Array.isArray(a.children)) {
                    const u = (0,
                    t.$1n)(a, [d]);
                    if (u !== void 0)
                        if (f === void 0) {
                            if (!u.parent)
                                throw new Error("Malformed AST");
                            const s = a.children.indexOf(u.parent);
                            let r, l = u.parent.offset + u.parent.length;
                            if (s > 0) {
                                const o = a.children[s - 1];
                                r = o.offset + o.length
                            } else
                                r = a.offset + 1,
                                a.children.length > 1 && (l = a.children[1].offset);
                            return L($, {
                                offset: r,
                                length: l - r,
                                content: ""
                            }, g)
                        } else
                            return L($, {
                                offset: u.offset,
                                length: u.length,
                                content: JSON.stringify(f)
                            }, g);
                    else {
                        if (f === void 0)
                            return [];
                        const s = `${JSON.stringify(d)}: ${JSON.stringify(f)}`
                          , r = p ? p(a.children.map(o=>o.children[0].value)) : a.children.length;
                        let l;
                        if (r > 0) {
                            const o = a.children[r - 1];
                            l = {
                                offset: o.offset + o.length,
                                length: 0,
                                content: "," + s
                            }
                        } else
                            a.children.length === 0 ? l = {
                                offset: a.offset + 1,
                                length: 0,
                                content: s
                            } : l = {
                                offset: a.offset + 1,
                                length: 0,
                                content: s + ","
                            };
                        return L($, l, g)
                    }
                } else if (a.type === "array" && typeof d == "number" && Array.isArray(a.children))
                    if (f !== void 0) {
                        const u = `${JSON.stringify(f)}`;
                        let s;
                        if (a.children.length === 0 || d === 0)
                            s = {
                                offset: a.offset + 1,
                                length: 0,
                                content: a.children.length === 0 ? u : u + ","
                            };
                        else {
                            const r = d === -1 || d > a.children.length ? a.children.length : d
                              , l = a.children[r - 1];
                            s = {
                                offset: l.offset + l.length,
                                length: 0,
                                content: "," + u
                            }
                        }
                        return L($, s, g)
                    } else {
                        const u = d
                          , s = a.children[u];
                        let r;
                        if (a.children.length === 1)
                            r = {
                                offset: a.offset + 1,
                                length: a.length - 2,
                                content: ""
                            };
                        else if (a.children.length - 1 === u) {
                            const l = a.children[u - 1]
                              , o = l.offset + l.length
                              , b = a.offset + a.length;
                            r = {
                                offset: o,
                                length: b - 2 - o,
                                content: ""
                            }
                        } else
                            r = {
                                offset: s.offset,
                                length: a.children[u + 1].offset - s.offset,
                                content: ""
                            };
                        return L($, r, g)
                    }
                else
                    throw new Error(`Can not add ${typeof d != "number" ? "index" : "property"} to parent of type ${a.type}`);
            else
                return f === void 0 ? [] : L($, {
                    offset: h ? h.offset : 0,
                    length: h ? h.length : 0,
                    content: JSON.stringify(f)
                }, g)
        }
        function L($, v, f) {
            let g = y($, v)
              , p = v.offset
              , i = v.offset + v.content.length;
            if (v.length === 0 || v.content.length === 0) {
                for (; p > 0 && !(0,
                n.$$n)(g, p - 1); )
                    p--;
                for (; i < g.length && !(0,
                n.$$n)(g, i); )
                    i++
            }
            const c = (0,
            n.$8n)(g, {
                offset: p,
                length: i - p
            }, f);
            for (let a = c.length - 1; a >= 0; a--) {
                const d = c[a];
                g = y(g, d),
                p = Math.min(p, d.offset),
                i = Math.max(i, d.offset + d.length),
                i += d.content.length - d.length
            }
            const h = $.length - (g.length - i) - p;
            return [{
                offset: p,
                length: h,
                content: g.substring(p, i)
            }]
        }
        function y($, v) {
            return $.substring(0, v.offset) + v.content + $.substring(v.offset + v.length)
        }
        function E($, v) {
            const f = v.slice(0).sort((p,i)=>{
                const c = p.offset - i.offset;
                return c === 0 ? p.length - i.length : c
            }
            );
            let g = $.length;
            for (let p = f.length - 1; p >= 0; p--) {
                const i = f[p];
                if (i.offset + i.length <= g)
                    $ = y($, i);
                else
                    throw new Error("Overlapping edit");
                g = i.offset
            }
            return $
        }
    }),
    define(ge[1328], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$8j = t;
        function t(I) {
            let L = !1;
            const y = new Map
              , E = new Map;
            if (C(I, c=>{
                if (I === c)
                    return !0;
                const h = JSON.stringify(c);
                if (h.length < 30)
                    return !0;
                const a = y.get(h);
                if (!a) {
                    const d = {
                        schemas: [c]
                    };
                    return y.set(h, d),
                    E.set(c, d),
                    !0
                }
                return a.schemas.push(c),
                E.set(c, a),
                L = !0,
                !1
            }
            ),
            y.clear(),
            !L)
                return JSON.stringify(I);
            let v = "$defs";
            for (; I.hasOwnProperty(v); )
                v += "_";
            const f = [];
            function g(c) {
                return JSON.stringify(c, (h,a)=>{
                    if (a !== c) {
                        const d = E.get(a);
                        if (d && d.schemas.length > 1)
                            return d.id || (d.id = `_${f.length}`,
                            f.push(d.schemas[0])),
                            {
                                $ref: `#/${v}/${d.id}`
                            }
                    }
                    return a
                }
                )
            }
            const p = g(I)
              , i = [];
            for (let c = 0; c < f.length; c++)
                i.push(`"_${c}":${g(f[c])}`);
            return i.length ? `${p.substring(0, p.length - 1)},"${v}":{${i.join(",")}}}` : p
        }
        function n(I) {
            return typeof I == "object" && I !== null
        }
        function C(I, L) {
            if (!I || typeof I != "object")
                return;
            const y = (...p)=>{
                for (const i of p)
                    n(i) && f.push(i)
            }
              , E = (...p)=>{
                for (const i of p)
                    if (n(i))
                        for (const c in i) {
                            const h = i[c];
                            n(h) && f.push(h)
                        }
            }
              , $ = (...p)=>{
                for (const i of p)
                    if (Array.isArray(i))
                        for (const c of i)
                            n(c) && f.push(c)
            }
              , v = p=>{
                if (Array.isArray(p))
                    for (const i of p)
                        n(i) && f.push(i);
                else
                    n(p) && f.push(p)
            }
              , f = [I];
            let g = f.pop();
            for (; g; )
                L(g) && (y(g.additionalItems, g.additionalProperties, g.not, g.contains, g.propertyNames, g.if, g.then, g.else, g.unevaluatedItems, g.unevaluatedProperties),
                E(g.definitions, g.$defs, g.properties, g.patternProperties, g.dependencies, g.dependentSchemas),
                $(g.anyOf, g.allOf, g.oneOf, g.prefixItems),
                v(g.items)),
                g = f.pop()
        }
    }),
    function() {
        function ce() {
            const e = /("[^"\\]*(?:\\.[^"\\]*)*")|('[^'\\]*(?:\\.[^'\\]*)*')|(\/\*[^\/\*]*(?:(?:\*|\/)[^\/\*]*)*?\*\/)|(\/{2,}.*?(?:(?:\r?\n)|$))|(,\s*[}\]])/g;
            function t(C) {
                return C.replace(e, function(I, L, y, E, $, v) {
                    if (E)
                        return "";
                    if ($) {
                        const f = $.length;
                        return $[f - 1] === `
` ? $[f - 2] === "\r" ? `\r
` : `
` : ""
                    } else
                        return v ? I.substring(1) : I
                })
            }
            function n(C) {
                const I = t(C);
                try {
                    return JSON.parse(I)
                } catch {
                    const y = I.replace(/,\s*([}\]])/g, "$1");
                    return JSON.parse(y)
                }
            }
            return {
                stripComments: t,
                parse: n
            }
        }
        typeof define == "function" ? define("vs/base/common/jsonc", [], function() {
            return ce()
        }) : typeof module == "object" && typeof module.exports == "object" ? module.exports = ce() : console.trace("jsonc defined in UNKNOWN context (neither requirejs or commonjs)")
    }(),
    define(ge[17], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.KeyMod = e.KeyCodeUtils = e.$Xr = e.$Wr = e.$Vr = e.$Ur = e.$Tr = e.ScanCode = e.KeyCode = void 0,
        e.$Yr = p;
        var t;
        (function(i) {
            i[i.DependsOnKbLayout = -1] = "DependsOnKbLayout",
            i[i.Unknown = 0] = "Unknown",
            i[i.Backspace = 1] = "Backspace",
            i[i.Tab = 2] = "Tab",
            i[i.Enter = 3] = "Enter",
            i[i.Shift = 4] = "Shift",
            i[i.Ctrl = 5] = "Ctrl",
            i[i.Alt = 6] = "Alt",
            i[i.PauseBreak = 7] = "PauseBreak",
            i[i.CapsLock = 8] = "CapsLock",
            i[i.Escape = 9] = "Escape",
            i[i.Space = 10] = "Space",
            i[i.PageUp = 11] = "PageUp",
            i[i.PageDown = 12] = "PageDown",
            i[i.End = 13] = "End",
            i[i.Home = 14] = "Home",
            i[i.LeftArrow = 15] = "LeftArrow",
            i[i.UpArrow = 16] = "UpArrow",
            i[i.RightArrow = 17] = "RightArrow",
            i[i.DownArrow = 18] = "DownArrow",
            i[i.Insert = 19] = "Insert",
            i[i.Delete = 20] = "Delete",
            i[i.Digit0 = 21] = "Digit0",
            i[i.Digit1 = 22] = "Digit1",
            i[i.Digit2 = 23] = "Digit2",
            i[i.Digit3 = 24] = "Digit3",
            i[i.Digit4 = 25] = "Digit4",
            i[i.Digit5 = 26] = "Digit5",
            i[i.Digit6 = 27] = "Digit6",
            i[i.Digit7 = 28] = "Digit7",
            i[i.Digit8 = 29] = "Digit8",
            i[i.Digit9 = 30] = "Digit9",
            i[i.KeyA = 31] = "KeyA",
            i[i.KeyB = 32] = "KeyB",
            i[i.KeyC = 33] = "KeyC",
            i[i.KeyD = 34] = "KeyD",
            i[i.KeyE = 35] = "KeyE",
            i[i.KeyF = 36] = "KeyF",
            i[i.KeyG = 37] = "KeyG",
            i[i.KeyH = 38] = "KeyH",
            i[i.KeyI = 39] = "KeyI",
            i[i.KeyJ = 40] = "KeyJ",
            i[i.KeyK = 41] = "KeyK",
            i[i.KeyL = 42] = "KeyL",
            i[i.KeyM = 43] = "KeyM",
            i[i.KeyN = 44] = "KeyN",
            i[i.KeyO = 45] = "KeyO",
            i[i.KeyP = 46] = "KeyP",
            i[i.KeyQ = 47] = "KeyQ",
            i[i.KeyR = 48] = "KeyR",
            i[i.KeyS = 49] = "KeyS",
            i[i.KeyT = 50] = "KeyT",
            i[i.KeyU = 51] = "KeyU",
            i[i.KeyV = 52] = "KeyV",
            i[i.KeyW = 53] = "KeyW",
            i[i.KeyX = 54] = "KeyX",
            i[i.KeyY = 55] = "KeyY",
            i[i.KeyZ = 56] = "KeyZ",
            i[i.Meta = 57] = "Meta",
            i[i.ContextMenu = 58] = "ContextMenu",
            i[i.F1 = 59] = "F1",
            i[i.F2 = 60] = "F2",
            i[i.F3 = 61] = "F3",
            i[i.F4 = 62] = "F4",
            i[i.F5 = 63] = "F5",
            i[i.F6 = 64] = "F6",
            i[i.F7 = 65] = "F7",
            i[i.F8 = 66] = "F8",
            i[i.F9 = 67] = "F9",
            i[i.F10 = 68] = "F10",
            i[i.F11 = 69] = "F11",
            i[i.F12 = 70] = "F12",
            i[i.F13 = 71] = "F13",
            i[i.F14 = 72] = "F14",
            i[i.F15 = 73] = "F15",
            i[i.F16 = 74] = "F16",
            i[i.F17 = 75] = "F17",
            i[i.F18 = 76] = "F18",
            i[i.F19 = 77] = "F19",
            i[i.F20 = 78] = "F20",
            i[i.F21 = 79] = "F21",
            i[i.F22 = 80] = "F22",
            i[i.F23 = 81] = "F23",
            i[i.F24 = 82] = "F24",
            i[i.NumLock = 83] = "NumLock",
            i[i.ScrollLock = 84] = "ScrollLock",
            i[i.Semicolon = 85] = "Semicolon",
            i[i.Equal = 86] = "Equal",
            i[i.Comma = 87] = "Comma",
            i[i.Minus = 88] = "Minus",
            i[i.Period = 89] = "Period",
            i[i.Slash = 90] = "Slash",
            i[i.Backquote = 91] = "Backquote",
            i[i.BracketLeft = 92] = "BracketLeft",
            i[i.Backslash = 93] = "Backslash",
            i[i.BracketRight = 94] = "BracketRight",
            i[i.Quote = 95] = "Quote",
            i[i.OEM_8 = 96] = "OEM_8",
            i[i.IntlBackslash = 97] = "IntlBackslash",
            i[i.Numpad0 = 98] = "Numpad0",
            i[i.Numpad1 = 99] = "Numpad1",
            i[i.Numpad2 = 100] = "Numpad2",
            i[i.Numpad3 = 101] = "Numpad3",
            i[i.Numpad4 = 102] = "Numpad4",
            i[i.Numpad5 = 103] = "Numpad5",
            i[i.Numpad6 = 104] = "Numpad6",
            i[i.Numpad7 = 105] = "Numpad7",
            i[i.Numpad8 = 106] = "Numpad8",
            i[i.Numpad9 = 107] = "Numpad9",
            i[i.NumpadMultiply = 108] = "NumpadMultiply",
            i[i.NumpadAdd = 109] = "NumpadAdd",
            i[i.NUMPAD_SEPARATOR = 110] = "NUMPAD_SEPARATOR",
            i[i.NumpadSubtract = 111] = "NumpadSubtract",
            i[i.NumpadDecimal = 112] = "NumpadDecimal",
            i[i.NumpadDivide = 113] = "NumpadDivide",
            i[i.KEY_IN_COMPOSITION = 114] = "KEY_IN_COMPOSITION",
            i[i.ABNT_C1 = 115] = "ABNT_C1",
            i[i.ABNT_C2 = 116] = "ABNT_C2",
            i[i.AudioVolumeMute = 117] = "AudioVolumeMute",
            i[i.AudioVolumeUp = 118] = "AudioVolumeUp",
            i[i.AudioVolumeDown = 119] = "AudioVolumeDown",
            i[i.BrowserSearch = 120] = "BrowserSearch",
            i[i.BrowserHome = 121] = "BrowserHome",
            i[i.BrowserBack = 122] = "BrowserBack",
            i[i.BrowserForward = 123] = "BrowserForward",
            i[i.MediaTrackNext = 124] = "MediaTrackNext",
            i[i.MediaTrackPrevious = 125] = "MediaTrackPrevious",
            i[i.MediaStop = 126] = "MediaStop",
            i[i.MediaPlayPause = 127] = "MediaPlayPause",
            i[i.LaunchMediaPlayer = 128] = "LaunchMediaPlayer",
            i[i.LaunchMail = 129] = "LaunchMail",
            i[i.LaunchApp2 = 130] = "LaunchApp2",
            i[i.Clear = 131] = "Clear",
            i[i.MAX_VALUE = 132] = "MAX_VALUE"
        }
        )(t || (e.KeyCode = t = {}));
        var n;
        (function(i) {
            i[i.DependsOnKbLayout = -1] = "DependsOnKbLayout",
            i[i.None = 0] = "None",
            i[i.Hyper = 1] = "Hyper",
            i[i.Super = 2] = "Super",
            i[i.Fn = 3] = "Fn",
            i[i.FnLock = 4] = "FnLock",
            i[i.Suspend = 5] = "Suspend",
            i[i.Resume = 6] = "Resume",
            i[i.Turbo = 7] = "Turbo",
            i[i.Sleep = 8] = "Sleep",
            i[i.WakeUp = 9] = "WakeUp",
            i[i.KeyA = 10] = "KeyA",
            i[i.KeyB = 11] = "KeyB",
            i[i.KeyC = 12] = "KeyC",
            i[i.KeyD = 13] = "KeyD",
            i[i.KeyE = 14] = "KeyE",
            i[i.KeyF = 15] = "KeyF",
            i[i.KeyG = 16] = "KeyG",
            i[i.KeyH = 17] = "KeyH",
            i[i.KeyI = 18] = "KeyI",
            i[i.KeyJ = 19] = "KeyJ",
            i[i.KeyK = 20] = "KeyK",
            i[i.KeyL = 21] = "KeyL",
            i[i.KeyM = 22] = "KeyM",
            i[i.KeyN = 23] = "KeyN",
            i[i.KeyO = 24] = "KeyO",
            i[i.KeyP = 25] = "KeyP",
            i[i.KeyQ = 26] = "KeyQ",
            i[i.KeyR = 27] = "KeyR",
            i[i.KeyS = 28] = "KeyS",
            i[i.KeyT = 29] = "KeyT",
            i[i.KeyU = 30] = "KeyU",
            i[i.KeyV = 31] = "KeyV",
            i[i.KeyW = 32] = "KeyW",
            i[i.KeyX = 33] = "KeyX",
            i[i.KeyY = 34] = "KeyY",
            i[i.KeyZ = 35] = "KeyZ",
            i[i.Digit1 = 36] = "Digit1",
            i[i.Digit2 = 37] = "Digit2",
            i[i.Digit3 = 38] = "Digit3",
            i[i.Digit4 = 39] = "Digit4",
            i[i.Digit5 = 40] = "Digit5",
            i[i.Digit6 = 41] = "Digit6",
            i[i.Digit7 = 42] = "Digit7",
            i[i.Digit8 = 43] = "Digit8",
            i[i.Digit9 = 44] = "Digit9",
            i[i.Digit0 = 45] = "Digit0",
            i[i.Enter = 46] = "Enter",
            i[i.Escape = 47] = "Escape",
            i[i.Backspace = 48] = "Backspace",
            i[i.Tab = 49] = "Tab",
            i[i.Space = 50] = "Space",
            i[i.Minus = 51] = "Minus",
            i[i.Equal = 52] = "Equal",
            i[i.BracketLeft = 53] = "BracketLeft",
            i[i.BracketRight = 54] = "BracketRight",
            i[i.Backslash = 55] = "Backslash",
            i[i.IntlHash = 56] = "IntlHash",
            i[i.Semicolon = 57] = "Semicolon",
            i[i.Quote = 58] = "Quote",
            i[i.Backquote = 59] = "Backquote",
            i[i.Comma = 60] = "Comma",
            i[i.Period = 61] = "Period",
            i[i.Slash = 62] = "Slash",
            i[i.CapsLock = 63] = "CapsLock",
            i[i.F1 = 64] = "F1",
            i[i.F2 = 65] = "F2",
            i[i.F3 = 66] = "F3",
            i[i.F4 = 67] = "F4",
            i[i.F5 = 68] = "F5",
            i[i.F6 = 69] = "F6",
            i[i.F7 = 70] = "F7",
            i[i.F8 = 71] = "F8",
            i[i.F9 = 72] = "F9",
            i[i.F10 = 73] = "F10",
            i[i.F11 = 74] = "F11",
            i[i.F12 = 75] = "F12",
            i[i.PrintScreen = 76] = "PrintScreen",
            i[i.ScrollLock = 77] = "ScrollLock",
            i[i.Pause = 78] = "Pause",
            i[i.Insert = 79] = "Insert",
            i[i.Home = 80] = "Home",
            i[i.PageUp = 81] = "PageUp",
            i[i.Delete = 82] = "Delete",
            i[i.End = 83] = "End",
            i[i.PageDown = 84] = "PageDown",
            i[i.ArrowRight = 85] = "ArrowRight",
            i[i.ArrowLeft = 86] = "ArrowLeft",
            i[i.ArrowDown = 87] = "ArrowDown",
            i[i.ArrowUp = 88] = "ArrowUp",
            i[i.NumLock = 89] = "NumLock",
            i[i.NumpadDivide = 90] = "NumpadDivide",
            i[i.NumpadMultiply = 91] = "NumpadMultiply",
            i[i.NumpadSubtract = 92] = "NumpadSubtract",
            i[i.NumpadAdd = 93] = "NumpadAdd",
            i[i.NumpadEnter = 94] = "NumpadEnter",
            i[i.Numpad1 = 95] = "Numpad1",
            i[i.Numpad2 = 96] = "Numpad2",
            i[i.Numpad3 = 97] = "Numpad3",
            i[i.Numpad4 = 98] = "Numpad4",
            i[i.Numpad5 = 99] = "Numpad5",
            i[i.Numpad6 = 100] = "Numpad6",
            i[i.Numpad7 = 101] = "Numpad7",
            i[i.Numpad8 = 102] = "Numpad8",
            i[i.Numpad9 = 103] = "Numpad9",
            i[i.Numpad0 = 104] = "Numpad0",
            i[i.NumpadDecimal = 105] = "NumpadDecimal",
            i[i.IntlBackslash = 106] = "IntlBackslash",
            i[i.ContextMenu = 107] = "ContextMenu",
            i[i.Power = 108] = "Power",
            i[i.NumpadEqual = 109] = "NumpadEqual",
            i[i.F13 = 110] = "F13",
            i[i.F14 = 111] = "F14",
            i[i.F15 = 112] = "F15",
            i[i.F16 = 113] = "F16",
            i[i.F17 = 114] = "F17",
            i[i.F18 = 115] = "F18",
            i[i.F19 = 116] = "F19",
            i[i.F20 = 117] = "F20",
            i[i.F21 = 118] = "F21",
            i[i.F22 = 119] = "F22",
            i[i.F23 = 120] = "F23",
            i[i.F24 = 121] = "F24",
            i[i.Open = 122] = "Open",
            i[i.Help = 123] = "Help",
            i[i.Select = 124] = "Select",
            i[i.Again = 125] = "Again",
            i[i.Undo = 126] = "Undo",
            i[i.Cut = 127] = "Cut",
            i[i.Copy = 128] = "Copy",
            i[i.Paste = 129] = "Paste",
            i[i.Find = 130] = "Find",
            i[i.AudioVolumeMute = 131] = "AudioVolumeMute",
            i[i.AudioVolumeUp = 132] = "AudioVolumeUp",
            i[i.AudioVolumeDown = 133] = "AudioVolumeDown",
            i[i.NumpadComma = 134] = "NumpadComma",
            i[i.IntlRo = 135] = "IntlRo",
            i[i.KanaMode = 136] = "KanaMode",
            i[i.IntlYen = 137] = "IntlYen",
            i[i.Convert = 138] = "Convert",
            i[i.NonConvert = 139] = "NonConvert",
            i[i.Lang1 = 140] = "Lang1",
            i[i.Lang2 = 141] = "Lang2",
            i[i.Lang3 = 142] = "Lang3",
            i[i.Lang4 = 143] = "Lang4",
            i[i.Lang5 = 144] = "Lang5",
            i[i.Abort = 145] = "Abort",
            i[i.Props = 146] = "Props",
            i[i.NumpadParenLeft = 147] = "NumpadParenLeft",
            i[i.NumpadParenRight = 148] = "NumpadParenRight",
            i[i.NumpadBackspace = 149] = "NumpadBackspace",
            i[i.NumpadMemoryStore = 150] = "NumpadMemoryStore",
            i[i.NumpadMemoryRecall = 151] = "NumpadMemoryRecall",
            i[i.NumpadMemoryClear = 152] = "NumpadMemoryClear",
            i[i.NumpadMemoryAdd = 153] = "NumpadMemoryAdd",
            i[i.NumpadMemorySubtract = 154] = "NumpadMemorySubtract",
            i[i.NumpadClear = 155] = "NumpadClear",
            i[i.NumpadClearEntry = 156] = "NumpadClearEntry",
            i[i.ControlLeft = 157] = "ControlLeft",
            i[i.ShiftLeft = 158] = "ShiftLeft",
            i[i.AltLeft = 159] = "AltLeft",
            i[i.MetaLeft = 160] = "MetaLeft",
            i[i.ControlRight = 161] = "ControlRight",
            i[i.ShiftRight = 162] = "ShiftRight",
            i[i.AltRight = 163] = "AltRight",
            i[i.MetaRight = 164] = "MetaRight",
            i[i.BrightnessUp = 165] = "BrightnessUp",
            i[i.BrightnessDown = 166] = "BrightnessDown",
            i[i.MediaPlay = 167] = "MediaPlay",
            i[i.MediaRecord = 168] = "MediaRecord",
            i[i.MediaFastForward = 169] = "MediaFastForward",
            i[i.MediaRewind = 170] = "MediaRewind",
            i[i.MediaTrackNext = 171] = "MediaTrackNext",
            i[i.MediaTrackPrevious = 172] = "MediaTrackPrevious",
            i[i.MediaStop = 173] = "MediaStop",
            i[i.Eject = 174] = "Eject",
            i[i.MediaPlayPause = 175] = "MediaPlayPause",
            i[i.MediaSelect = 176] = "MediaSelect",
            i[i.LaunchMail = 177] = "LaunchMail",
            i[i.LaunchApp2 = 178] = "LaunchApp2",
            i[i.LaunchApp1 = 179] = "LaunchApp1",
            i[i.SelectTask = 180] = "SelectTask",
            i[i.LaunchScreenSaver = 181] = "LaunchScreenSaver",
            i[i.BrowserSearch = 182] = "BrowserSearch",
            i[i.BrowserHome = 183] = "BrowserHome",
            i[i.BrowserBack = 184] = "BrowserBack",
            i[i.BrowserForward = 185] = "BrowserForward",
            i[i.BrowserStop = 186] = "BrowserStop",
            i[i.BrowserRefresh = 187] = "BrowserRefresh",
            i[i.BrowserFavorites = 188] = "BrowserFavorites",
            i[i.ZoomToggle = 189] = "ZoomToggle",
            i[i.MailReply = 190] = "MailReply",
            i[i.MailForward = 191] = "MailForward",
            i[i.MailSend = 192] = "MailSend",
            i[i.MAX_VALUE = 193] = "MAX_VALUE"
        }
        )(n || (e.ScanCode = n = {}));
        class C {
            constructor() {
                this._keyCodeToStr = [],
                this._strToKeyCode = Object.create(null)
            }
            define(c, h) {
                this._keyCodeToStr[c] = h,
                this._strToKeyCode[h.toLowerCase()] = c
            }
            keyCodeToStr(c) {
                return this._keyCodeToStr[c]
            }
            strToKeyCode(c) {
                return this._strToKeyCode[c.toLowerCase()] || t.Unknown
            }
        }
        const I = new C
          , L = new C
          , y = new C;
        e.$Tr = new Array(230),
        e.$Ur = {};
        const E = []
          , $ = Object.create(null)
          , v = Object.create(null);
        e.$Vr = {
            lowerCaseToEnum: i=>v[i] || n.None,
            toEnum: i=>$[i] || n.None,
            toString: i=>E[i] || "None"
        },
        e.$Wr = [],
        e.$Xr = [];
        for (let i = 0; i <= n.MAX_VALUE; i++)
            e.$Wr[i] = t.DependsOnKbLayout;
        for (let i = 0; i <= t.MAX_VALUE; i++)
            e.$Xr[i] = n.DependsOnKbLayout;
        (function() {
            const i = ""
              , c = [[1, n.None, "None", t.Unknown, "unknown", 0, "VK_UNKNOWN", i, i], [1, n.Hyper, "Hyper", t.Unknown, i, 0, i, i, i], [1, n.Super, "Super", t.Unknown, i, 0, i, i, i], [1, n.Fn, "Fn", t.Unknown, i, 0, i, i, i], [1, n.FnLock, "FnLock", t.Unknown, i, 0, i, i, i], [1, n.Suspend, "Suspend", t.Unknown, i, 0, i, i, i], [1, n.Resume, "Resume", t.Unknown, i, 0, i, i, i], [1, n.Turbo, "Turbo", t.Unknown, i, 0, i, i, i], [1, n.Sleep, "Sleep", t.Unknown, i, 0, "VK_SLEEP", i, i], [1, n.WakeUp, "WakeUp", t.Unknown, i, 0, i, i, i], [0, n.KeyA, "KeyA", t.KeyA, "A", 65, "VK_A", i, i], [0, n.KeyB, "KeyB", t.KeyB, "B", 66, "VK_B", i, i], [0, n.KeyC, "KeyC", t.KeyC, "C", 67, "VK_C", i, i], [0, n.KeyD, "KeyD", t.KeyD, "D", 68, "VK_D", i, i], [0, n.KeyE, "KeyE", t.KeyE, "E", 69, "VK_E", i, i], [0, n.KeyF, "KeyF", t.KeyF, "F", 70, "VK_F", i, i], [0, n.KeyG, "KeyG", t.KeyG, "G", 71, "VK_G", i, i], [0, n.KeyH, "KeyH", t.KeyH, "H", 72, "VK_H", i, i], [0, n.KeyI, "KeyI", t.KeyI, "I", 73, "VK_I", i, i], [0, n.KeyJ, "KeyJ", t.KeyJ, "J", 74, "VK_J", i, i], [0, n.KeyK, "KeyK", t.KeyK, "K", 75, "VK_K", i, i], [0, n.KeyL, "KeyL", t.KeyL, "L", 76, "VK_L", i, i], [0, n.KeyM, "KeyM", t.KeyM, "M", 77, "VK_M", i, i], [0, n.KeyN, "KeyN", t.KeyN, "N", 78, "VK_N", i, i], [0, n.KeyO, "KeyO", t.KeyO, "O", 79, "VK_O", i, i], [0, n.KeyP, "KeyP", t.KeyP, "P", 80, "VK_P", i, i], [0, n.KeyQ, "KeyQ", t.KeyQ, "Q", 81, "VK_Q", i, i], [0, n.KeyR, "KeyR", t.KeyR, "R", 82, "VK_R", i, i], [0, n.KeyS, "KeyS", t.KeyS, "S", 83, "VK_S", i, i], [0, n.KeyT, "KeyT", t.KeyT, "T", 84, "VK_T", i, i], [0, n.KeyU, "KeyU", t.KeyU, "U", 85, "VK_U", i, i], [0, n.KeyV, "KeyV", t.KeyV, "V", 86, "VK_V", i, i], [0, n.KeyW, "KeyW", t.KeyW, "W", 87, "VK_W", i, i], [0, n.KeyX, "KeyX", t.KeyX, "X", 88, "VK_X", i, i], [0, n.KeyY, "KeyY", t.KeyY, "Y", 89, "VK_Y", i, i], [0, n.KeyZ, "KeyZ", t.KeyZ, "Z", 90, "VK_Z", i, i], [0, n.Digit1, "Digit1", t.Digit1, "1", 49, "VK_1", i, i], [0, n.Digit2, "Digit2", t.Digit2, "2", 50, "VK_2", i, i], [0, n.Digit3, "Digit3", t.Digit3, "3", 51, "VK_3", i, i], [0, n.Digit4, "Digit4", t.Digit4, "4", 52, "VK_4", i, i], [0, n.Digit5, "Digit5", t.Digit5, "5", 53, "VK_5", i, i], [0, n.Digit6, "Digit6", t.Digit6, "6", 54, "VK_6", i, i], [0, n.Digit7, "Digit7", t.Digit7, "7", 55, "VK_7", i, i], [0, n.Digit8, "Digit8", t.Digit8, "8", 56, "VK_8", i, i], [0, n.Digit9, "Digit9", t.Digit9, "9", 57, "VK_9", i, i], [0, n.Digit0, "Digit0", t.Digit0, "0", 48, "VK_0", i, i], [1, n.Enter, "Enter", t.Enter, "Enter", 13, "VK_RETURN", i, i], [1, n.Escape, "Escape", t.Escape, "Escape", 27, "VK_ESCAPE", i, i], [1, n.Backspace, "Backspace", t.Backspace, "Backspace", 8, "VK_BACK", i, i], [1, n.Tab, "Tab", t.Tab, "Tab", 9, "VK_TAB", i, i], [1, n.Space, "Space", t.Space, "Space", 32, "VK_SPACE", i, i], [0, n.Minus, "Minus", t.Minus, "-", 189, "VK_OEM_MINUS", "-", "OEM_MINUS"], [0, n.Equal, "Equal", t.Equal, "=", 187, "VK_OEM_PLUS", "=", "OEM_PLUS"], [0, n.BracketLeft, "BracketLeft", t.BracketLeft, "[", 219, "VK_OEM_4", "[", "OEM_4"], [0, n.BracketRight, "BracketRight", t.BracketRight, "]", 221, "VK_OEM_6", "]", "OEM_6"], [0, n.Backslash, "Backslash", t.Backslash, "\\", 220, "VK_OEM_5", "\\", "OEM_5"], [0, n.IntlHash, "IntlHash", t.Unknown, i, 0, i, i, i], [0, n.Semicolon, "Semicolon", t.Semicolon, ";", 186, "VK_OEM_1", ";", "OEM_1"], [0, n.Quote, "Quote", t.Quote, "'", 222, "VK_OEM_7", "'", "OEM_7"], [0, n.Backquote, "Backquote", t.Backquote, "`", 192, "VK_OEM_3", "`", "OEM_3"], [0, n.Comma, "Comma", t.Comma, ",", 188, "VK_OEM_COMMA", ",", "OEM_COMMA"], [0, n.Period, "Period", t.Period, ".", 190, "VK_OEM_PERIOD", ".", "OEM_PERIOD"], [0, n.Slash, "Slash", t.Slash, "/", 191, "VK_OEM_2", "/", "OEM_2"], [1, n.CapsLock, "CapsLock", t.CapsLock, "CapsLock", 20, "VK_CAPITAL", i, i], [1, n.F1, "F1", t.F1, "F1", 112, "VK_F1", i, i], [1, n.F2, "F2", t.F2, "F2", 113, "VK_F2", i, i], [1, n.F3, "F3", t.F3, "F3", 114, "VK_F3", i, i], [1, n.F4, "F4", t.F4, "F4", 115, "VK_F4", i, i], [1, n.F5, "F5", t.F5, "F5", 116, "VK_F5", i, i], [1, n.F6, "F6", t.F6, "F6", 117, "VK_F6", i, i], [1, n.F7, "F7", t.F7, "F7", 118, "VK_F7", i, i], [1, n.F8, "F8", t.F8, "F8", 119, "VK_F8", i, i], [1, n.F9, "F9", t.F9, "F9", 120, "VK_F9", i, i], [1, n.F10, "F10", t.F10, "F10", 121, "VK_F10", i, i], [1, n.F11, "F11", t.F11, "F11", 122, "VK_F11", i, i], [1, n.F12, "F12", t.F12, "F12", 123, "VK_F12", i, i], [1, n.PrintScreen, "PrintScreen", t.Unknown, i, 0, i, i, i], [1, n.ScrollLock, "ScrollLock", t.ScrollLock, "ScrollLock", 145, "VK_SCROLL", i, i], [1, n.Pause, "Pause", t.PauseBreak, "PauseBreak", 19, "VK_PAUSE", i, i], [1, n.Insert, "Insert", t.Insert, "Insert", 45, "VK_INSERT", i, i], [1, n.Home, "Home", t.Home, "Home", 36, "VK_HOME", i, i], [1, n.PageUp, "PageUp", t.PageUp, "PageUp", 33, "VK_PRIOR", i, i], [1, n.Delete, "Delete", t.Delete, "Delete", 46, "VK_DELETE", i, i], [1, n.End, "End", t.End, "End", 35, "VK_END", i, i], [1, n.PageDown, "PageDown", t.PageDown, "PageDown", 34, "VK_NEXT", i, i], [1, n.ArrowRight, "ArrowRight", t.RightArrow, "RightArrow", 39, "VK_RIGHT", "Right", i], [1, n.ArrowLeft, "ArrowLeft", t.LeftArrow, "LeftArrow", 37, "VK_LEFT", "Left", i], [1, n.ArrowDown, "ArrowDown", t.DownArrow, "DownArrow", 40, "VK_DOWN", "Down", i], [1, n.ArrowUp, "ArrowUp", t.UpArrow, "UpArrow", 38, "VK_UP", "Up", i], [1, n.NumLock, "NumLock", t.NumLock, "NumLock", 144, "VK_NUMLOCK", i, i], [1, n.NumpadDivide, "NumpadDivide", t.NumpadDivide, "NumPad_Divide", 111, "VK_DIVIDE", i, i], [1, n.NumpadMultiply, "NumpadMultiply", t.NumpadMultiply, "NumPad_Multiply", 106, "VK_MULTIPLY", i, i], [1, n.NumpadSubtract, "NumpadSubtract", t.NumpadSubtract, "NumPad_Subtract", 109, "VK_SUBTRACT", i, i], [1, n.NumpadAdd, "NumpadAdd", t.NumpadAdd, "NumPad_Add", 107, "VK_ADD", i, i], [1, n.NumpadEnter, "NumpadEnter", t.Enter, i, 0, i, i, i], [1, n.Numpad1, "Numpad1", t.Numpad1, "NumPad1", 97, "VK_NUMPAD1", i, i], [1, n.Numpad2, "Numpad2", t.Numpad2, "NumPad2", 98, "VK_NUMPAD2", i, i], [1, n.Numpad3, "Numpad3", t.Numpad3, "NumPad3", 99, "VK_NUMPAD3", i, i], [1, n.Numpad4, "Numpad4", t.Numpad4, "NumPad4", 100, "VK_NUMPAD4", i, i], [1, n.Numpad5, "Numpad5", t.Numpad5, "NumPad5", 101, "VK_NUMPAD5", i, i], [1, n.Numpad6, "Numpad6", t.Numpad6, "NumPad6", 102, "VK_NUMPAD6", i, i], [1, n.Numpad7, "Numpad7", t.Numpad7, "NumPad7", 103, "VK_NUMPAD7", i, i], [1, n.Numpad8, "Numpad8", t.Numpad8, "NumPad8", 104, "VK_NUMPAD8", i, i], [1, n.Numpad9, "Numpad9", t.Numpad9, "NumPad9", 105, "VK_NUMPAD9", i, i], [1, n.Numpad0, "Numpad0", t.Numpad0, "NumPad0", 96, "VK_NUMPAD0", i, i], [1, n.NumpadDecimal, "NumpadDecimal", t.NumpadDecimal, "NumPad_Decimal", 110, "VK_DECIMAL", i, i], [0, n.IntlBackslash, "IntlBackslash", t.IntlBackslash, "OEM_102", 226, "VK_OEM_102", i, i], [1, n.ContextMenu, "ContextMenu", t.ContextMenu, "ContextMenu", 93, i, i, i], [1, n.Power, "Power", t.Unknown, i, 0, i, i, i], [1, n.NumpadEqual, "NumpadEqual", t.Unknown, i, 0, i, i, i], [1, n.F13, "F13", t.F13, "F13", 124, "VK_F13", i, i], [1, n.F14, "F14", t.F14, "F14", 125, "VK_F14", i, i], [1, n.F15, "F15", t.F15, "F15", 126, "VK_F15", i, i], [1, n.F16, "F16", t.F16, "F16", 127, "VK_F16", i, i], [1, n.F17, "F17", t.F17, "F17", 128, "VK_F17", i, i], [1, n.F18, "F18", t.F18, "F18", 129, "VK_F18", i, i], [1, n.F19, "F19", t.F19, "F19", 130, "VK_F19", i, i], [1, n.F20, "F20", t.F20, "F20", 131, "VK_F20", i, i], [1, n.F21, "F21", t.F21, "F21", 132, "VK_F21", i, i], [1, n.F22, "F22", t.F22, "F22", 133, "VK_F22", i, i], [1, n.F23, "F23", t.F23, "F23", 134, "VK_F23", i, i], [1, n.F24, "F24", t.F24, "F24", 135, "VK_F24", i, i], [1, n.Open, "Open", t.Unknown, i, 0, i, i, i], [1, n.Help, "Help", t.Unknown, i, 0, i, i, i], [1, n.Select, "Select", t.Unknown, i, 0, i, i, i], [1, n.Again, "Again", t.Unknown, i, 0, i, i, i], [1, n.Undo, "Undo", t.Unknown, i, 0, i, i, i], [1, n.Cut, "Cut", t.Unknown, i, 0, i, i, i], [1, n.Copy, "Copy", t.Unknown, i, 0, i, i, i], [1, n.Paste, "Paste", t.Unknown, i, 0, i, i, i], [1, n.Find, "Find", t.Unknown, i, 0, i, i, i], [1, n.AudioVolumeMute, "AudioVolumeMute", t.AudioVolumeMute, "AudioVolumeMute", 173, "VK_VOLUME_MUTE", i, i], [1, n.AudioVolumeUp, "AudioVolumeUp", t.AudioVolumeUp, "AudioVolumeUp", 175, "VK_VOLUME_UP", i, i], [1, n.AudioVolumeDown, "AudioVolumeDown", t.AudioVolumeDown, "AudioVolumeDown", 174, "VK_VOLUME_DOWN", i, i], [1, n.NumpadComma, "NumpadComma", t.NUMPAD_SEPARATOR, "NumPad_Separator", 108, "VK_SEPARATOR", i, i], [0, n.IntlRo, "IntlRo", t.ABNT_C1, "ABNT_C1", 193, "VK_ABNT_C1", i, i], [1, n.KanaMode, "KanaMode", t.Unknown, i, 0, i, i, i], [0, n.IntlYen, "IntlYen", t.Unknown, i, 0, i, i, i], [1, n.Convert, "Convert", t.Unknown, i, 0, i, i, i], [1, n.NonConvert, "NonConvert", t.Unknown, i, 0, i, i, i], [1, n.Lang1, "Lang1", t.Unknown, i, 0, i, i, i], [1, n.Lang2, "Lang2", t.Unknown, i, 0, i, i, i], [1, n.Lang3, "Lang3", t.Unknown, i, 0, i, i, i], [1, n.Lang4, "Lang4", t.Unknown, i, 0, i, i, i], [1, n.Lang5, "Lang5", t.Unknown, i, 0, i, i, i], [1, n.Abort, "Abort", t.Unknown, i, 0, i, i, i], [1, n.Props, "Props", t.Unknown, i, 0, i, i, i], [1, n.NumpadParenLeft, "NumpadParenLeft", t.Unknown, i, 0, i, i, i], [1, n.NumpadParenRight, "NumpadParenRight", t.Unknown, i, 0, i, i, i], [1, n.NumpadBackspace, "NumpadBackspace", t.Unknown, i, 0, i, i, i], [1, n.NumpadMemoryStore, "NumpadMemoryStore", t.Unknown, i, 0, i, i, i], [1, n.NumpadMemoryRecall, "NumpadMemoryRecall", t.Unknown, i, 0, i, i, i], [1, n.NumpadMemoryClear, "NumpadMemoryClear", t.Unknown, i, 0, i, i, i], [1, n.NumpadMemoryAdd, "NumpadMemoryAdd", t.Unknown, i, 0, i, i, i], [1, n.NumpadMemorySubtract, "NumpadMemorySubtract", t.Unknown, i, 0, i, i, i], [1, n.NumpadClear, "NumpadClear", t.Clear, "Clear", 12, "VK_CLEAR", i, i], [1, n.NumpadClearEntry, "NumpadClearEntry", t.Unknown, i, 0, i, i, i], [1, n.None, i, t.Ctrl, "Ctrl", 17, "VK_CONTROL", i, i], [1, n.None, i, t.Shift, "Shift", 16, "VK_SHIFT", i, i], [1, n.None, i, t.Alt, "Alt", 18, "VK_MENU", i, i], [1, n.None, i, t.Meta, "Meta", 91, "VK_COMMAND", i, i], [1, n.ControlLeft, "ControlLeft", t.Ctrl, i, 0, "VK_LCONTROL", i, i], [1, n.ShiftLeft, "ShiftLeft", t.Shift, i, 0, "VK_LSHIFT", i, i], [1, n.AltLeft, "AltLeft", t.Alt, i, 0, "VK_LMENU", i, i], [1, n.MetaLeft, "MetaLeft", t.Meta, i, 0, "VK_LWIN", i, i], [1, n.ControlRight, "ControlRight", t.Ctrl, i, 0, "VK_RCONTROL", i, i], [1, n.ShiftRight, "ShiftRight", t.Shift, i, 0, "VK_RSHIFT", i, i], [1, n.AltRight, "AltRight", t.Alt, i, 0, "VK_RMENU", i, i], [1, n.MetaRight, "MetaRight", t.Meta, i, 0, "VK_RWIN", i, i], [1, n.BrightnessUp, "BrightnessUp", t.Unknown, i, 0, i, i, i], [1, n.BrightnessDown, "BrightnessDown", t.Unknown, i, 0, i, i, i], [1, n.MediaPlay, "MediaPlay", t.Unknown, i, 0, i, i, i], [1, n.MediaRecord, "MediaRecord", t.Unknown, i, 0, i, i, i], [1, n.MediaFastForward, "MediaFastForward", t.Unknown, i, 0, i, i, i], [1, n.MediaRewind, "MediaRewind", t.Unknown, i, 0, i, i, i], [1, n.MediaTrackNext, "MediaTrackNext", t.MediaTrackNext, "MediaTrackNext", 176, "VK_MEDIA_NEXT_TRACK", i, i], [1, n.MediaTrackPrevious, "MediaTrackPrevious", t.MediaTrackPrevious, "MediaTrackPrevious", 177, "VK_MEDIA_PREV_TRACK", i, i], [1, n.MediaStop, "MediaStop", t.MediaStop, "MediaStop", 178, "VK_MEDIA_STOP", i, i], [1, n.Eject, "Eject", t.Unknown, i, 0, i, i, i], [1, n.MediaPlayPause, "MediaPlayPause", t.MediaPlayPause, "MediaPlayPause", 179, "VK_MEDIA_PLAY_PAUSE", i, i], [1, n.MediaSelect, "MediaSelect", t.LaunchMediaPlayer, "LaunchMediaPlayer", 181, "VK_MEDIA_LAUNCH_MEDIA_SELECT", i, i], [1, n.LaunchMail, "LaunchMail", t.LaunchMail, "LaunchMail", 180, "VK_MEDIA_LAUNCH_MAIL", i, i], [1, n.LaunchApp2, "LaunchApp2", t.LaunchApp2, "LaunchApp2", 183, "VK_MEDIA_LAUNCH_APP2", i, i], [1, n.LaunchApp1, "LaunchApp1", t.Unknown, i, 0, "VK_MEDIA_LAUNCH_APP1", i, i], [1, n.SelectTask, "SelectTask", t.Unknown, i, 0, i, i, i], [1, n.LaunchScreenSaver, "LaunchScreenSaver", t.Unknown, i, 0, i, i, i], [1, n.BrowserSearch, "BrowserSearch", t.BrowserSearch, "BrowserSearch", 170, "VK_BROWSER_SEARCH", i, i], [1, n.BrowserHome, "BrowserHome", t.BrowserHome, "BrowserHome", 172, "VK_BROWSER_HOME", i, i], [1, n.BrowserBack, "BrowserBack", t.BrowserBack, "BrowserBack", 166, "VK_BROWSER_BACK", i, i], [1, n.BrowserForward, "BrowserForward", t.BrowserForward, "BrowserForward", 167, "VK_BROWSER_FORWARD", i, i], [1, n.BrowserStop, "BrowserStop", t.Unknown, i, 0, "VK_BROWSER_STOP", i, i], [1, n.BrowserRefresh, "BrowserRefresh", t.Unknown, i, 0, "VK_BROWSER_REFRESH", i, i], [1, n.BrowserFavorites, "BrowserFavorites", t.Unknown, i, 0, "VK_BROWSER_FAVORITES", i, i], [1, n.ZoomToggle, "ZoomToggle", t.Unknown, i, 0, i, i, i], [1, n.MailReply, "MailReply", t.Unknown, i, 0, i, i, i], [1, n.MailForward, "MailForward", t.Unknown, i, 0, i, i, i], [1, n.MailSend, "MailSend", t.Unknown, i, 0, i, i, i], [1, n.None, i, t.KEY_IN_COMPOSITION, "KeyInComposition", 229, i, i, i], [1, n.None, i, t.ABNT_C2, "ABNT_C2", 194, "VK_ABNT_C2", i, i], [1, n.None, i, t.OEM_8, "OEM_8", 223, "VK_OEM_8", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_KANA", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_HANGUL", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_JUNJA", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_FINAL", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_HANJA", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_KANJI", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_CONVERT", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_NONCONVERT", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_ACCEPT", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_MODECHANGE", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_SELECT", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_PRINT", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_EXECUTE", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_SNAPSHOT", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_HELP", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_APPS", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_PROCESSKEY", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_PACKET", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_DBE_SBCSCHAR", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_DBE_DBCSCHAR", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_ATTN", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_CRSEL", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_EXSEL", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_EREOF", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_PLAY", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_ZOOM", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_NONAME", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_PA1", i, i], [1, n.None, i, t.Unknown, i, 0, "VK_OEM_CLEAR", i, i]]
              , h = []
              , a = [];
            for (const d of c) {
                const [u,s,r,l,o,b,m,w,S] = d;
                if (a[s] || (a[s] = !0,
                E[s] = r,
                $[r] = s,
                v[r.toLowerCase()] = s,
                u && (e.$Wr[s] = l,
                l !== t.Unknown && l !== t.Enter && l !== t.Ctrl && l !== t.Shift && l !== t.Alt && l !== t.Meta && (e.$Xr[l] = s))),
                !h[l]) {
                    if (h[l] = !0,
                    !o)
                        throw new Error(`String representation missing for key code ${l} around scan code ${r}`);
                    I.define(l, o),
                    L.define(l, w || o),
                    y.define(l, S || w || o)
                }
                b && (e.$Tr[b] = l),
                m && (e.$Ur[m] = l)
            }
            e.$Xr[t.Enter] = n.Enter
        }
        )();
        var f;
        (function(i) {
            function c(r) {
                return I.keyCodeToStr(r)
            }
            i.toString = c;
            function h(r) {
                return I.strToKeyCode(r)
            }
            i.fromString = h;
            function a(r) {
                return L.keyCodeToStr(r)
            }
            i.toUserSettingsUS = a;
            function d(r) {
                return y.keyCodeToStr(r)
            }
            i.toUserSettingsGeneral = d;
            function u(r) {
                return L.strToKeyCode(r) || y.strToKeyCode(r)
            }
            i.fromUserSettings = u;
            function s(r) {
                if (r >= t.Numpad0 && r <= t.NumpadDivide)
                    return null;
                switch (r) {
                case t.UpArrow:
                    return "Up";
                case t.DownArrow:
                    return "Down";
                case t.LeftArrow:
                    return "Left";
                case t.RightArrow:
                    return "Right"
                }
                return I.keyCodeToStr(r)
            }
            i.toElectronAccelerator = s
        }
        )(f || (e.KeyCodeUtils = f = {}));
        var g;
        (function(i) {
            i[i.CtrlCmd = 2048] = "CtrlCmd",
            i[i.Shift = 1024] = "Shift",
            i[i.Alt = 512] = "Alt",
            i[i.WinCtrl = 256] = "WinCtrl"
        }
        )(g || (e.KeyMod = g = {}));
        function p(i, c) {
            const h = (c & 65535) << 16 >>> 0;
            return (i | h) >>> 0
        }
    }),
    define(ge[147], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$T = void 0;
        class t {
            constructor(C) {
                this.d = C,
                this.a = !1
            }
            get hasValue() {
                return this.a
            }
            get value() {
                if (!this.a)
                    try {
                        this.b = this.d()
                    } catch (C) {
                        this.c = C
                    } finally {
                        this.a = !0
                    }
                if (this.c)
                    throw this.c;
                return this.b
            }
            get rawValue() {
                return this.b
            }
        }
        e.$T = t
    }),
    define(ge[90], be([1, 0, 147]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$JU = y,
        e.$KU = E,
        e.$LU = $;
        let C = ()=>({
            get delay() {
                return -1
            },
            dispose: ()=>{}
            ,
            showHover: ()=>{}
        });
        const I = new t.$T(()=>C("mouse", !1))
          , L = new t.$T(()=>C("element", !1));
        function y(v) {
            C = v
        }
        function E(v) {
            return v === "element" ? L.value : I.value
        }
        function $() {
            return C("element", !0)
        }
    }),
    define(ge[216], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$5c = void 0;
        class t {
            static{this.Undefined = new t(void 0)
            }constructor(I) {
                this.element = I,
                this.next = t.Undefined,
                this.prev = t.Undefined
            }
        }
        class n {
            constructor() {
                this.a = t.Undefined,
                this.b = t.Undefined,
                this.c = 0
            }
            get size() {
                return this.c
            }
            isEmpty() {
                return this.a === t.Undefined
            }
            clear() {
                let I = this.a;
                for (; I !== t.Undefined; ) {
                    const L = I.next;
                    I.prev = t.Undefined,
                    I.next = t.Undefined,
                    I = L
                }
                this.a = t.Undefined,
                this.b = t.Undefined,
                this.c = 0
            }
            unshift(I) {
                return this.d(I, !1)
            }
            push(I) {
                return this.d(I, !0)
            }
            d(I, L) {
                const y = new t(I);
                if (this.a === t.Undefined)
                    this.a = y,
                    this.b = y;
                else if (L) {
                    const $ = this.b;
                    this.b = y,
                    y.prev = $,
                    $.next = y
                } else {
                    const $ = this.a;
                    this.a = y,
                    y.next = $,
                    $.prev = y
                }
                this.c += 1;
                let E = !1;
                return ()=>{
                    E || (E = !0,
                    this.e(y))
                }
            }
            shift() {
                if (this.a !== t.Undefined) {
                    const I = this.a.element;
                    return this.e(this.a),
                    I
                }
            }
            pop() {
                if (this.b !== t.Undefined) {
                    const I = this.b.element;
                    return this.e(this.b),
                    I
                }
            }
            e(I) {
                if (I.prev !== t.Undefined && I.next !== t.Undefined) {
                    const L = I.prev;
                    L.next = I.next,
                    I.next.prev = L
                } else
                    I.prev === t.Undefined && I.next === t.Undefined ? (this.a = t.Undefined,
                    this.b = t.Undefined) : I.next === t.Undefined ? (this.b = this.b.prev,
                    this.b.next = t.Undefined) : I.prev === t.Undefined && (this.a = this.a.next,
                    this.a.prev = t.Undefined);
                this.c -= 1
            }
            *[Symbol.iterator]() {
                let I = this.a;
                for (; I !== t.Undefined; )
                    yield I.element,
                    I = I.next
            }
        }
        e.$5c = n
    });
    var Ee = this && this.__decorate || function(ce, e, t, n) {
        var C = arguments.length, I = C < 3 ? e : n === null ? n = Object.getOwnPropertyDescriptor(e, t) : n, L;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
            I = Reflect.decorate(ce, e, t, n);
        else
            for (var y = ce.length - 1; y >= 0; y--)
                (L = ce[y]) && (I = (C < 3 ? L(I) : C > 3 ? L(e, t, I) : L(e, t)) || I);
        return C > 3 && I && Object.defineProperty(e, t, I),
        I
    }
    ;
    define(ge[359], be([1, 0, 119]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$DX = void 0,
        e.$EX = I;
        class n {
            constructor(y) {
                this.nodes = y
            }
            toString() {
                return this.nodes.map(y=>typeof y == "string" ? y : y.label).join("")
            }
        }
        e.$DX = n,
        Ee([t.$0h], n.prototype, "toString", null);
        const C = /\[([^\]]+)\]\(((?:https?:\/\/|command:|file:)[^\)\s]+)(?: (["'])(.+?)(\3))?\)/gi;
        function I(L) {
            const y = [];
            let E = 0, $;
            for (; $ = C.exec(L); ) {
                $.index - E > 0 && y.push(L.substring(E, $.index));
                const [,v,f,,g] = $;
                g ? y.push({
                    label: v,
                    href: f,
                    title: g
                }) : y.push({
                    label: v,
                    href: f
                }),
                E = $.index + $[0].length
            }
            return E < L.length && y.push(L.substring(E)),
            new n(y)
        }
    }),
    define(ge[56], be([1, 0]), function(ce, e) {
        "use strict";
        var t, n, C;
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Hc = e.$Gc = e.$Fc = e.$Ec = e.$Dc = e.$Cc = e.Touch = e.$Bc = e.$Ac = void 0,
        e.$xc = I,
        e.$yc = L,
        e.$zc = y,
        e.$Ic = s;
        function I(r, l, o) {
            let b = r.get(l);
            return b === void 0 && (b = o,
            r.set(l, b)),
            b
        }
        function L(r) {
            const l = [];
            return r.forEach((o,b)=>{
                l.push(`${b} => ${o}`)
            }
            ),
            `Map(${r.size}) {${l.join(", ")}}`
        }
        function y(r) {
            const l = [];
            return r.forEach(o=>{
                l.push(o)
            }
            ),
            `Set(${r.size}) {${l.join(", ")}}`
        }
        class E {
            constructor(l, o) {
                this.uri = l,
                this.value = o
            }
        }
        function $(r) {
            return Array.isArray(r)
        }
        class v {
            static{this.c = l=>l.toString()
            }constructor(l, o) {
                if (this[t] = "ResourceMap",
                l instanceof v)
                    this.d = new Map(l.d),
                    this.e = o ?? v.c;
                else if ($(l)) {
                    this.d = new Map,
                    this.e = o ?? v.c;
                    for (const [b,m] of l)
                        this.set(b, m)
                } else
                    this.d = new Map,
                    this.e = l ?? v.c
            }
            set(l, o) {
                return this.d.set(this.e(l), new E(l,o)),
                this
            }
            get(l) {
                return this.d.get(this.e(l))?.value
            }
            has(l) {
                return this.d.has(this.e(l))
            }
            get size() {
                return this.d.size
            }
            clear() {
                this.d.clear()
            }
            delete(l) {
                return this.d.delete(this.e(l))
            }
            forEach(l, o) {
                typeof o < "u" && (l = l.bind(o));
                for (const [b,m] of this.d)
                    l(m.value, m.uri, this)
            }
            *values() {
                for (const l of this.d.values())
                    yield l.value
            }
            *keys() {
                for (const l of this.d.values())
                    yield l.uri
            }
            *entries() {
                for (const l of this.d.values())
                    yield[l.uri, l.value]
            }
            *[(t = Symbol.toStringTag,
            Symbol.iterator)]() {
                for (const [,l] of this.d)
                    yield[l.uri, l.value]
            }
        }
        e.$Ac = v;
        class f {
            constructor(l, o) {
                this[n] = "ResourceSet",
                !l || typeof l == "function" ? this.c = new v(l) : (this.c = new v(o),
                l.forEach(this.add, this))
            }
            get size() {
                return this.c.size
            }
            add(l) {
                return this.c.set(l, l),
                this
            }
            clear() {
                this.c.clear()
            }
            delete(l) {
                return this.c.delete(l)
            }
            forEach(l, o) {
                this.c.forEach((b,m)=>l.call(o, m, m, this))
            }
            has(l) {
                return this.c.has(l)
            }
            entries() {
                return this.c.entries()
            }
            keys() {
                return this.c.keys()
            }
            values() {
                return this.c.keys()
            }
            [(n = Symbol.toStringTag,
            Symbol.iterator)]() {
                return this.keys()
            }
        }
        e.$Bc = f;
        var g;
        (function(r) {
            r[r.None = 0] = "None",
            r[r.AsOld = 1] = "AsOld",
            r[r.AsNew = 2] = "AsNew"
        }
        )(g || (e.Touch = g = {}));
        class p {
            constructor() {
                this[C] = "LinkedMap",
                this.c = new Map,
                this.d = void 0,
                this.e = void 0,
                this.f = 0,
                this.g = 0
            }
            clear() {
                this.c.clear(),
                this.d = void 0,
                this.e = void 0,
                this.f = 0,
                this.g++
            }
            isEmpty() {
                return !this.d && !this.e
            }
            get size() {
                return this.f
            }
            get first() {
                return this.d?.value
            }
            get last() {
                return this.e?.value
            }
            has(l) {
                return this.c.has(l)
            }
            get(l, o=g.None) {
                const b = this.c.get(l);
                if (b)
                    return o !== g.None && this.m(b, o),
                    b.value
            }
            set(l, o, b=g.None) {
                let m = this.c.get(l);
                if (m)
                    m.value = o,
                    b !== g.None && this.m(m, b);
                else {
                    switch (m = {
                        key: l,
                        value: o,
                        next: void 0,
                        previous: void 0
                    },
                    b) {
                    case g.None:
                        this.k(m);
                        break;
                    case g.AsOld:
                        this.j(m);
                        break;
                    case g.AsNew:
                        this.k(m);
                        break;
                    default:
                        this.k(m);
                        break
                    }
                    this.c.set(l, m),
                    this.f++
                }
                return this
            }
            delete(l) {
                return !!this.remove(l)
            }
            remove(l) {
                const o = this.c.get(l);
                if (o)
                    return this.c.delete(l),
                    this.l(o),
                    this.f--,
                    o.value
            }
            shift() {
                if (!this.d && !this.e)
                    return;
                if (!this.d || !this.e)
                    throw new Error("Invalid list");
                const l = this.d;
                return this.c.delete(l.key),
                this.l(l),
                this.f--,
                l.value
            }
            forEach(l, o) {
                const b = this.g;
                let m = this.d;
                for (; m; ) {
                    if (o ? l.bind(o)(m.value, m.key, this) : l(m.value, m.key, this),
                    this.g !== b)
                        throw new Error("LinkedMap got modified during iteration.");
                    m = m.next
                }
            }
            keys() {
                const l = this
                  , o = this.g;
                let b = this.d;
                const m = {
                    [Symbol.iterator]() {
                        return m
                    },
                    next() {
                        if (l.g !== o)
                            throw new Error("LinkedMap got modified during iteration.");
                        if (b) {
                            const w = {
                                value: b.key,
                                done: !1
                            };
                            return b = b.next,
                            w
                        } else
                            return {
                                value: void 0,
                                done: !0
                            }
                    }
                };
                return m
            }
            values() {
                const l = this
                  , o = this.g;
                let b = this.d;
                const m = {
                    [Symbol.iterator]() {
                        return m
                    },
                    next() {
                        if (l.g !== o)
                            throw new Error("LinkedMap got modified during iteration.");
                        if (b) {
                            const w = {
                                value: b.value,
                                done: !1
                            };
                            return b = b.next,
                            w
                        } else
                            return {
                                value: void 0,
                                done: !0
                            }
                    }
                };
                return m
            }
            entries() {
                const l = this
                  , o = this.g;
                let b = this.d;
                const m = {
                    [Symbol.iterator]() {
                        return m
                    },
                    next() {
                        if (l.g !== o)
                            throw new Error("LinkedMap got modified during iteration.");
                        if (b) {
                            const w = {
                                value: [b.key, b.value],
                                done: !1
                            };
                            return b = b.next,
                            w
                        } else
                            return {
                                value: void 0,
                                done: !0
                            }
                    }
                };
                return m
            }
            [(C = Symbol.toStringTag,
            Symbol.iterator)]() {
                return this.entries()
            }
            h(l) {
                if (l >= this.size)
                    return;
                if (l === 0) {
                    this.clear();
                    return
                }
                let o = this.d
                  , b = this.size;
                for (; o && b > l; )
                    this.c.delete(o.key),
                    o = o.next,
                    b--;
                this.d = o,
                this.f = b,
                o && (o.previous = void 0),
                this.g++
            }
            i(l) {
                if (l >= this.size)
                    return;
                if (l === 0) {
                    this.clear();
                    return
                }
                let o = this.e
                  , b = this.size;
                for (; o && b > l; )
                    this.c.delete(o.key),
                    o = o.previous,
                    b--;
                this.e = o,
                this.f = b,
                o && (o.next = void 0),
                this.g++
            }
            j(l) {
                if (!this.d && !this.e)
                    this.e = l;
                else if (this.d)
                    l.next = this.d,
                    this.d.previous = l;
                else
                    throw new Error("Invalid list");
                this.d = l,
                this.g++
            }
            k(l) {
                if (!this.d && !this.e)
                    this.d = l;
                else if (this.e)
                    l.previous = this.e,
                    this.e.next = l;
                else
                    throw new Error("Invalid list");
                this.e = l,
                this.g++
            }
            l(l) {
                if (l === this.d && l === this.e)
                    this.d = void 0,
                    this.e = void 0;
                else if (l === this.d) {
                    if (!l.next)
                        throw new Error("Invalid list");
                    l.next.previous = void 0,
                    this.d = l.next
                } else if (l === this.e) {
                    if (!l.previous)
                        throw new Error("Invalid list");
                    l.previous.next = void 0,
                    this.e = l.previous
                } else {
                    const o = l.next
                      , b = l.previous;
                    if (!o || !b)
                        throw new Error("Invalid list");
                    o.previous = b,
                    b.next = o
                }
                l.next = void 0,
                l.previous = void 0,
                this.g++
            }
            m(l, o) {
                if (!this.d || !this.e)
                    throw new Error("Invalid list");
                if (!(o !== g.AsOld && o !== g.AsNew)) {
                    if (o === g.AsOld) {
                        if (l === this.d)
                            return;
                        const b = l.next
                          , m = l.previous;
                        l === this.e ? (m.next = void 0,
                        this.e = m) : (b.previous = m,
                        m.next = b),
                        l.previous = void 0,
                        l.next = this.d,
                        this.d.previous = l,
                        this.d = l,
                        this.g++
                    } else if (o === g.AsNew) {
                        if (l === this.e)
                            return;
                        const b = l.next
                          , m = l.previous;
                        l === this.d ? (b.previous = void 0,
                        this.d = b) : (b.previous = m,
                        m.next = b),
                        l.next = void 0,
                        l.previous = this.e,
                        this.e.next = l,
                        this.e = l,
                        this.g++
                    }
                }
            }
            toJSON() {
                const l = [];
                return this.forEach((o,b)=>{
                    l.push([b, o])
                }
                ),
                l
            }
            fromJSON(l) {
                this.clear();
                for (const [o,b] of l)
                    this.set(o, b)
            }
        }
        e.$Cc = p;
        class i extends p {
            constructor(l, o=1) {
                super(),
                this.n = l,
                this.o = Math.min(Math.max(0, o), 1)
            }
            get limit() {
                return this.n
            }
            set limit(l) {
                this.n = l,
                this.p()
            }
            get ratio() {
                return this.o
            }
            set ratio(l) {
                this.o = Math.min(Math.max(0, l), 1),
                this.p()
            }
            get(l, o=g.AsNew) {
                return super.get(l, o)
            }
            peek(l) {
                return super.get(l, g.None)
            }
            set(l, o) {
                return super.set(l, o, g.AsNew),
                this
            }
            p() {
                this.size > this.n && this.q(Math.round(this.n * this.o))
            }
        }
        class c extends i {
            constructor(l, o=1) {
                super(l, o)
            }
            q(l) {
                this.h(l)
            }
            set(l, o) {
                return super.set(l, o),
                this.p(),
                this
            }
        }
        e.$Dc = c;
        class h extends i {
            constructor(l, o=1) {
                super(l, o)
            }
            q(l) {
                this.i(l)
            }
            set(l, o) {
                return this.n <= this.size && !this.has(l) && this.q(Math.round(this.n * this.o) - 1),
                super.set(l, o),
                this
            }
        }
        e.$Ec = h;
        class a {
            constructor() {
                this.c = new Map
            }
            add(l) {
                return this.c.set(l, (this.c.get(l) || 0) + 1),
                this
            }
            delete(l) {
                let o = this.c.get(l) || 0;
                return o === 0 ? !1 : (o--,
                o === 0 ? this.c.delete(l) : this.c.set(l, o),
                !0)
            }
            has(l) {
                return this.c.has(l)
            }
        }
        e.$Fc = a;
        class d {
            constructor(l) {
                if (this.c = new Map,
                this.d = new Map,
                l)
                    for (const [o,b] of l)
                        this.set(o, b)
            }
            clear() {
                this.c.clear(),
                this.d.clear()
            }
            set(l, o) {
                this.c.set(l, o),
                this.d.set(o, l)
            }
            get(l) {
                return this.c.get(l)
            }
            getKey(l) {
                return this.d.get(l)
            }
            delete(l) {
                const o = this.c.get(l);
                return o === void 0 ? !1 : (this.c.delete(l),
                this.d.delete(o),
                !0)
            }
            forEach(l, o) {
                this.c.forEach((b,m)=>{
                    l.call(o, b, m, this)
                }
                )
            }
            keys() {
                return this.c.keys()
            }
            values() {
                return this.c.values()
            }
        }
        e.$Gc = d;
        class u {
            constructor() {
                this.c = new Map
            }
            add(l, o) {
                let b = this.c.get(l);
                b || (b = new Set,
                this.c.set(l, b)),
                b.add(o)
            }
            delete(l, o) {
                const b = this.c.get(l);
                b && (b.delete(o),
                b.size === 0 && this.c.delete(l))
            }
            forEach(l, o) {
                const b = this.c.get(l);
                b && b.forEach(o)
            }
            get(l) {
                const o = this.c.get(l);
                return o || new Set
            }
        }
        e.$Hc = u;
        function s(r, l) {
            if (r === l)
                return !0;
            if (r.size !== l.size)
                return !1;
            for (const [o,b] of r)
                if (!l.has(o) || l.get(o) !== b)
                    return !1;
            for (const [o] of l)
                if (!r.has(o))
                    return !1;
            return !0
        }
    }),
    define(ge[2], be([1, 0, 13, 337, 56, 224, 89]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$4c = e.$2c = e.$1c = e.$Zc = e.$Yc = e.$Xc = e.$Wc = e.$Vc = e.$Uc = e.$Tc = e.$Jc = void 0,
        e.$Kc = v,
        e.$Lc = f,
        e.$Mc = g,
        e.$Nc = c,
        e.$Oc = h,
        e.$Pc = a,
        e.$Qc = d,
        e.$Rc = u,
        e.$Sc = s,
        e.$3c = k;
        const y = !1;
        let E = null;
        class $ {
            constructor() {
                this.b = new Map
            }
            static{this.a = 0
            }c(M) {
                let O = this.b.get(M);
                return O || (O = {
                    parent: null,
                    source: null,
                    isSingleton: !1,
                    value: M,
                    idx: $.a++
                },
                this.b.set(M, O)),
                O
            }
            trackDisposable(M) {
                const O = this.c(M);
                O.source || (O.source = new Error().stack)
            }
            setParent(M, O) {
                const R = this.c(M);
                R.parent = O
            }
            markAsDisposed(M) {
                this.b.delete(M)
            }
            markAsSingleton(M) {
                this.c(M).isSingleton = !0
            }
            f(M, O) {
                const R = O.get(M);
                if (R)
                    return R;
                const N = M.parent ? this.f(this.c(M.parent), O) : M;
                return O.set(M, N),
                N
            }
            getTrackedDisposables() {
                const M = new Map;
                return [...this.b.entries()].filter(([,R])=>R.source !== null && !this.f(R, M).isSingleton).flatMap(([R])=>R)
            }
            computeLeakingDisposables(M=10, O) {
                let R;
                if (O)
                    R = O;
                else {
                    const j = new Map
                      , W = [...this.b.values()].filter(H=>H.source !== null && !this.f(H, j).isSingleton);
                    if (W.length === 0)
                        return;
                    const q = new Set(W.map(H=>H.value));
                    if (R = W.filter(H=>!(H.parent && q.has(H.parent))),
                    R.length === 0)
                        throw new Error("There are cyclic diposable chains!")
                }
                if (!R)
                    return;
                function N(j) {
                    function W(H, U) {
                        for (; H.length > 0 && U.some(K=>typeof K == "string" ? K === H[0] : H[0].match(K)); )
                            H.shift()
                    }
                    const q = j.source.split(`
`).map(H=>H.trim().replace("at ", "")).filter(H=>H !== "");
                    return W(q, ["Error", /^trackDisposable \(.*\)$/, /^DisposableTracker.trackDisposable \(.*\)$/]),
                    q.reverse()
                }
                const z = new C.$Hc;
                for (const j of R) {
                    const W = N(j);
                    for (let q = 0; q <= W.length; q++)
                        z.add(W.slice(0, q).join(`
`), j)
                }
                R.sort((0,
                t.$5b)(j=>j.idx, t.$7b));
                let V = ""
                  , B = 0;
                for (const j of R.slice(0, M)) {
                    B++;
                    const W = N(j)
                      , q = [];
                    for (let H = 0; H < W.length; H++) {
                        let U = W[H];
                        U = `(shared with ${z.get(W.slice(0, H + 1).join(`
`)).size}/${R.length} leaks) at ${U}`;
                        const G = z.get(W.slice(0, H).join(`
`))
                          , Z = (0,
                        n.$c)([...G].map(x=>N(x)[H]), x=>x);
                        delete Z[W[H]];
                        for (const [x,X] of Object.entries(Z))
                            q.unshift(`    - stacktraces of ${X.length} other leaks continue with ${x}`);
                        q.unshift(U)
                    }
                    V += `


==================== Leaking disposable ${B}/${R.length}: ${j.value.constructor.name} ====================
${q.join(`
`)}
============================================================

`
                }
                return R.length > M && (V += `


... and ${R.length - M} more leaking disposables

`),
                {
                    leaks: R,
                    details: V
                }
            }
        }
        e.$Jc = $;
        function v(A) {
            E = A
        }
        if (y) {
            const A = "__is_disposable_tracked__";
            v(new class {
                trackDisposable(M) {
                    const O = new Error("Potentially leaked disposable").stack;
                    setTimeout(()=>{
                        M[A] || console.log(O)
                    }
                    , 3e3)
                }
                setParent(M, O) {
                    if (M && M !== l.None)
                        try {
                            M[A] = !0
                        } catch {}
                }
                markAsDisposed(M) {
                    if (M && M !== l.None)
                        try {
                            M[A] = !0
                        } catch {}
                }
                markAsSingleton(M) {}
            }
            )
        }
        function f(A) {
            return E?.trackDisposable(A),
            A
        }
        function g(A) {
            E?.markAsDisposed(A)
        }
        function p(A, M) {
            E?.setParent(A, M)
        }
        function i(A, M) {
            if (E)
                for (const O of A)
                    E.setParent(O, M)
        }
        function c(A) {
            return E?.markAsSingleton(A),
            A
        }
        function h(A) {
            return typeof A == "object" && A !== null && typeof A.dispose == "function" && A.dispose.length === 0
        }
        function a(A) {
            if (L.Iterable.is(A)) {
                const M = [];
                for (const O of A)
                    if (O)
                        try {
                            O.dispose()
                        } catch (R) {
                            M.push(R)
                        }
                if (M.length === 1)
                    throw M[0];
                if (M.length > 1)
                    throw new AggregateError(M,"Encountered errors while disposing of store");
                return Array.isArray(A) ? [] : A
            } else if (A)
                return A.dispose(),
                A
        }
        function d(A) {
            for (const M of A)
                h(M) && M.dispose();
            return []
        }
        function u(...A) {
            const M = s(()=>a(A));
            return i(A, M),
            M
        }
        function s(A) {
            const M = f({
                dispose: (0,
                I.$cb)(()=>{
                    g(M),
                    A()
                }
                )
            });
            return M
        }
        class r {
            static{this.DISABLE_DISPOSED_WARNING = !1
            }constructor() {
                this.f = new Set,
                this.g = !1,
                f(this)
            }
            dispose() {
                this.g || (g(this),
                this.g = !0,
                this.clear())
            }
            get isDisposed() {
                return this.g
            }
            clear() {
                if (this.f.size !== 0)
                    try {
                        a(this.f)
                    } finally {
                        this.f.clear()
                    }
            }
            add(M) {
                if (!M)
                    return M;
                if (M === this)
                    throw new Error("Cannot register a disposable on itself!");
                return p(M, this),
                this.g ? r.DISABLE_DISPOSED_WARNING || console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack) : this.f.add(M),
                M
            }
            delete(M) {
                if (M) {
                    if (M === this)
                        throw new Error("Cannot dispose a disposable on itself!");
                    this.f.delete(M),
                    M.dispose()
                }
            }
            deleteAndLeak(M) {
                M && this.f.has(M) && (this.f.delete(M),
                p(M, null))
            }
        }
        e.$Tc = r;
        class l {
            static{this.None = Object.freeze({
                dispose() {}
            })
            }constructor() {
                this.q = new r,
                f(this),
                p(this.q, this)
            }
            dispose() {
                g(this),
                this.q.dispose()
            }
            B(M) {
                if (M === this)
                    throw new Error("Cannot register a disposable on itself!");
                return this.q.add(M)
            }
        }
        e.$Uc = l;
        class o {
            constructor() {
                this.b = !1,
                f(this)
            }
            get value() {
                return this.b ? void 0 : this.a
            }
            set value(M) {
                this.b || M === this.a || (this.a?.dispose(),
                M && p(M, this),
                this.a = M)
            }
            clear() {
                this.value = void 0
            }
            dispose() {
                this.b = !0,
                g(this),
                this.a?.dispose(),
                this.a = void 0
            }
            clearAndLeak() {
                const M = this.a;
                return this.a = void 0,
                M && p(M, null),
                M
            }
        }
        e.$Vc = o;
        class b {
            constructor(M) {
                this.a = new o,
                this.b = !1,
                this.a.value = M
            }
            get value() {
                return this.a.value
            }
            set value(M) {
                this.b || M === this.a.value || (this.a.value = M)
            }
            dispose() {
                this.b = !0,
                this.a.dispose()
            }
        }
        e.$Wc = b;
        class m {
            constructor(M) {
                this.b = M,
                this.a = 1
            }
            acquire() {
                return this.a++,
                this
            }
            release() {
                return --this.a === 0 && this.b.dispose(),
                this
            }
        }
        e.$Xc = m;
        class w {
            constructor() {
                this.dispose = ()=>{}
                ,
                this.unset = ()=>{}
                ,
                this.isset = ()=>!1,
                f(this)
            }
            set(M) {
                let O = M;
                return this.unset = ()=>O = void 0,
                this.isset = ()=>O !== void 0,
                this.dispose = ()=>{
                    O && (O(),
                    O = void 0,
                    g(this))
                }
                ,
                this
            }
        }
        e.$Yc = w;
        class S {
            constructor() {
                this.a = new Map
            }
            acquire(M, ...O) {
                let R = this.a.get(M);
                R || (R = {
                    counter: 0,
                    object: this.b(M, ...O)
                },
                this.a.set(M, R));
                const {object: N} = R
                  , z = (0,
                I.$cb)(()=>{
                    --R.counter === 0 && (this.c(M, R.object),
                    this.a.delete(M))
                }
                );
                return R.counter++,
                {
                    object: N,
                    dispose: z
                }
            }
        }
        e.$Zc = S;
        class T {
            constructor(M) {
                this.a = M
            }
            async acquire(M, ...O) {
                const R = this.a.acquire(M, ...O);
                try {
                    return {
                        object: await R.object,
                        dispose: ()=>R.dispose()
                    }
                } catch (N) {
                    throw R.dispose(),
                    N
                }
            }
        }
        e.$1c = T;
        class D {
            constructor(M) {
                this.object = M
            }
            dispose() {}
        }
        e.$2c = D;
        function k(A) {
            const M = new r;
            try {
                A(M)
            } finally {
                M.dispose()
            }
        }
        class P {
            constructor() {
                this.a = new Map,
                this.b = !1,
                f(this)
            }
            dispose() {
                g(this),
                this.b = !0,
                this.clearAndDisposeAll()
            }
            clearAndDisposeAll() {
                if (this.a.size)
                    try {
                        a(this.a.values())
                    } finally {
                        this.a.clear()
                    }
            }
            has(M) {
                return this.a.has(M)
            }
            get size() {
                return this.a.size
            }
            get(M) {
                return this.a.get(M)
            }
            set(M, O, R=!1) {
                this.b && console.warn(new Error("Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!").stack),
                R || this.a.get(M)?.dispose(),
                this.a.set(M, O)
            }
            deleteAndDispose(M) {
                this.a.get(M)?.dispose(),
                this.a.delete(M)
            }
            deleteAndLeak(M) {
                const O = this.a.get(M);
                return this.a.delete(M),
                O
            }
            keys() {
                return this.a.keys()
            }
            values() {
                return this.a.values()
            }
            [Symbol.iterator]() {
                return this.a[Symbol.iterator]()
            }
        }
        e.$4c = P
    }),
    function(ce, e) {
        typeof define == "function" && define.amd ? define(ge[321], be([0]), e) : typeof exports == "object" && typeof module < "u" ? e(exports) : (ce = typeof globalThis < "u" ? globalThis : ce || self,
        e(ce.marked = {}))
    }(this, function(ce) {
        "use strict";
        function e(se, ee) {
            for (var J = 0; J < ee.length; J++) {
                var te = ee[J];
                te.enumerable = te.enumerable || !1,
                te.configurable = !0,
                "value"in te && (te.writable = !0),
                Object.defineProperty(se, te.key, te)
            }
        }
        function t(se, ee, J) {
            return ee && e(se.prototype, ee),
            J && e(se, J),
            Object.defineProperty(se, "prototype", {
                writable: !1
            }),
            se
        }
        function n(se, ee) {
            if (se) {
                if (typeof se == "string")
                    return C(se, ee);
                var J = Object.prototype.toString.call(se).slice(8, -1);
                if (J === "Object" && se.constructor && (J = se.constructor.name),
                J === "Map" || J === "Set")
                    return Array.from(se);
                if (J === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(J))
                    return C(se, ee)
            }
        }
        function C(se, ee) {
            (ee == null || ee > se.length) && (ee = se.length);
            for (var J = 0, te = new Array(ee); J < ee; J++)
                te[J] = se[J];
            return te
        }
        function I(se, ee) {
            var J = typeof Symbol < "u" && se[Symbol.iterator] || se["@@iterator"];
            if (J)
                return (J = J.call(se)).next.bind(J);
            if (Array.isArray(se) || (J = n(se)) || ee && se && typeof se.length == "number") {
                J && (se = J);
                var te = 0;
                return function() {
                    return te >= se.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: se[te++]
                    }
                }
            }
            throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        function L() {
            return {
                async: !1,
                baseUrl: null,
                breaks: !1,
                extensions: null,
                gfm: !0,
                headerIds: !0,
                headerPrefix: "",
                highlight: null,
                langPrefix: "language-",
                mangle: !0,
                pedantic: !1,
                renderer: null,
                sanitize: !1,
                sanitizer: null,
                silent: !1,
                smartLists: !1,
                smartypants: !1,
                tokenizer: null,
                walkTokens: null,
                xhtml: !1
            }
        }
        ce.defaults = L();
        function y(se) {
            ce.defaults = se
        }
        var E = /[&<>"']/
          , $ = /[&<>"']/g
          , v = /[<>"']|&(?!#?\w+;)/
          , f = /[<>"']|&(?!#?\w+;)/g
          , g = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;"
        }
          , p = function(ee) {
            return g[ee]
        };
        function i(se, ee) {
            if (ee) {
                if (E.test(se))
                    return se.replace($, p)
            } else if (v.test(se))
                return se.replace(f, p);
            return se
        }
        var c = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;
        function h(se) {
            return se.replace(c, function(ee, J) {
                return J = J.toLowerCase(),
                J === "colon" ? ":" : J.charAt(0) === "#" ? J.charAt(1) === "x" ? String.fromCharCode(parseInt(J.substring(2), 16)) : String.fromCharCode(+J.substring(1)) : ""
            })
        }
        var a = /(^|[^\[])\^/g;
        function d(se, ee) {
            se = typeof se == "string" ? se : se.source,
            ee = ee || "";
            var J = {
                replace: function(ne, le) {
                    return le = le.source || le,
                    le = le.replace(a, "$1"),
                    se = se.replace(ne, le),
                    J
                },
                getRegex: function() {
                    return new RegExp(se,ee)
                }
            };
            return J
        }
        var u = /[^\w:]/g
          , s = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
        function r(se, ee, J) {
            if (se) {
                var te;
                try {
                    te = decodeURIComponent(h(J)).replace(u, "").toLowerCase()
                } catch {
                    return null
                }
                if (te.indexOf("javascript:") === 0 || te.indexOf("vbscript:") === 0 || te.indexOf("data:") === 0)
                    return null
            }
            ee && !s.test(J) && (J = w(ee, J));
            try {
                J = encodeURI(J).replace(/%25/g, "%")
            } catch {
                return null
            }
            return J
        }
        var l = {}
          , o = /^[^:]+:\/*[^/]*$/
          , b = /^([^:]+:)[\s\S]*$/
          , m = /^([^:]+:\/*[^/]*)[\s\S]*$/;
        function w(se, ee) {
            l[" " + se] || (o.test(se) ? l[" " + se] = se + "/" : l[" " + se] = k(se, "/", !0)),
            se = l[" " + se];
            var J = se.indexOf(":") === -1;
            return ee.substring(0, 2) === "//" ? J ? ee : se.replace(b, "$1") + ee : ee.charAt(0) === "/" ? J ? ee : se.replace(m, "$1") + ee : se + ee
        }
        var S = {
            exec: function() {}
        };
        function T(se) {
            for (var ee = 1, J, te; ee < arguments.length; ee++) {
                J = arguments[ee];
                for (te in J)
                    Object.prototype.hasOwnProperty.call(J, te) && (se[te] = J[te])
            }
            return se
        }
        function D(se, ee) {
            var J = se.replace(/\|/g, function(le, ie, oe) {
                for (var fe = !1, he = ie; --he >= 0 && oe[he] === "\\"; )
                    fe = !fe;
                return fe ? "|" : " |"
            })
              , te = J.split(/ \|/)
              , ne = 0;
            if (te[0].trim() || te.shift(),
            te.length > 0 && !te[te.length - 1].trim() && te.pop(),
            te.length > ee)
                te.splice(ee);
            else
                for (; te.length < ee; )
                    te.push("");
            for (; ne < te.length; ne++)
                te[ne] = te[ne].trim().replace(/\\\|/g, "|");
            return te
        }
        function k(se, ee, J) {
            var te = se.length;
            if (te === 0)
                return "";
            for (var ne = 0; ne < te; ) {
                var le = se.charAt(te - ne - 1);
                if (le === ee && !J)
                    ne++;
                else if (le !== ee && J)
                    ne++;
                else
                    break
            }
            return se.slice(0, te - ne)
        }
        function P(se, ee) {
            if (se.indexOf(ee[1]) === -1)
                return -1;
            for (var J = se.length, te = 0, ne = 0; ne < J; ne++)
                if (se[ne] === "\\")
                    ne++;
                else if (se[ne] === ee[0])
                    te++;
                else if (se[ne] === ee[1] && (te--,
                te < 0))
                    return ne;
            return -1
        }
        function A(se) {
            se && se.sanitize && !se.silent && console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options")
        }
        function M(se, ee) {
            if (ee < 1)
                return "";
            for (var J = ""; ee > 1; )
                ee & 1 && (J += se),
                ee >>= 1,
                se += se;
            return J + se
        }
        function O(se, ee, J, te) {
            var ne = ee.href
              , le = ee.title ? i(ee.title) : null
              , ie = se[1].replace(/\\([\[\]])/g, "$1");
            if (se[0].charAt(0) !== "!") {
                te.state.inLink = !0;
                var oe = {
                    type: "link",
                    raw: J,
                    href: ne,
                    title: le,
                    text: ie,
                    tokens: te.inlineTokens(ie)
                };
                return te.state.inLink = !1,
                oe
            }
            return {
                type: "image",
                raw: J,
                href: ne,
                title: le,
                text: i(ie)
            }
        }
        function R(se, ee) {
            var J = se.match(/^(\s+)(?:```)/);
            if (J === null)
                return ee;
            var te = J[1];
            return ee.split(`
`).map(function(ne) {
                var le = ne.match(/^\s+/);
                if (le === null)
                    return ne;
                var ie = le[0];
                return ie.length >= te.length ? ne.slice(te.length) : ne
            }).join(`
`)
        }
        var N = function() {
            function se(J) {
                this.options = J || ce.defaults
            }
            var ee = se.prototype;
            return ee.space = function(te) {
                var ne = this.rules.block.newline.exec(te);
                if (ne && ne[0].length > 0)
                    return {
                        type: "space",
                        raw: ne[0]
                    }
            }
            ,
            ee.code = function(te) {
                var ne = this.rules.block.code.exec(te);
                if (ne) {
                    var le = ne[0].replace(/^ {1,4}/gm, "");
                    return {
                        type: "code",
                        raw: ne[0],
                        codeBlockStyle: "indented",
                        text: this.options.pedantic ? le : k(le, `
`)
                    }
                }
            }
            ,
            ee.fences = function(te) {
                var ne = this.rules.block.fences.exec(te);
                if (ne) {
                    var le = ne[0]
                      , ie = R(le, ne[3] || "");
                    return {
                        type: "code",
                        raw: le,
                        lang: ne[2] ? ne[2].trim() : ne[2],
                        text: ie
                    }
                }
            }
            ,
            ee.heading = function(te) {
                var ne = this.rules.block.heading.exec(te);
                if (ne) {
                    var le = ne[2].trim();
                    if (/#$/.test(le)) {
                        var ie = k(le, "#");
                        (this.options.pedantic || !ie || / $/.test(ie)) && (le = ie.trim())
                    }
                    return {
                        type: "heading",
                        raw: ne[0],
                        depth: ne[1].length,
                        text: le,
                        tokens: this.lexer.inline(le)
                    }
                }
            }
            ,
            ee.hr = function(te) {
                var ne = this.rules.block.hr.exec(te);
                if (ne)
                    return {
                        type: "hr",
                        raw: ne[0]
                    }
            }
            ,
            ee.blockquote = function(te) {
                var ne = this.rules.block.blockquote.exec(te);
                if (ne) {
                    var le = ne[0].replace(/^ *>[ \t]?/gm, "");
                    return {
                        type: "blockquote",
                        raw: ne[0],
                        tokens: this.lexer.blockTokens(le, []),
                        text: le
                    }
                }
            }
            ,
            ee.list = function(te) {
                var ne = this.rules.block.list.exec(te);
                if (ne) {
                    var le, ie, oe, fe, he, ue, de, $e, pe, ve, me, we, ye = ne[1].trim(), Le = ye.length > 1, De = {
                        type: "list",
                        raw: "",
                        ordered: Le,
                        start: Le ? +ye.slice(0, -1) : "",
                        loose: !1,
                        items: []
                    };
                    ye = Le ? "\\d{1,9}\\" + ye.slice(-1) : "\\" + ye,
                    this.options.pedantic && (ye = Le ? ye : "[*+-]");
                    for (var Pe = new RegExp("^( {0,3}" + ye + ")((?:[	 ][^\\n]*)?(?:\\n|$))"); te && (we = !1,
                    !(!(ne = Pe.exec(te)) || this.rules.block.hr.test(te))); ) {
                        if (le = ne[0],
                        te = te.substring(le.length),
                        $e = ne[2].split(`
`, 1)[0],
                        pe = te.split(`
`, 1)[0],
                        this.options.pedantic ? (fe = 2,
                        me = $e.trimLeft()) : (fe = ne[2].search(/[^ ]/),
                        fe = fe > 4 ? 1 : fe,
                        me = $e.slice(fe),
                        fe += ne[1].length),
                        ue = !1,
                        !$e && /^ *$/.test(pe) && (le += pe + `
`,
                        te = te.substring(pe.length + 1),
                        we = !0),
                        !we)
                            for (var ze = new RegExp("^ {0," + Math.min(3, fe - 1) + "}(?:[*+-]|\\d{1,9}[.)])((?: [^\\n]*)?(?:\\n|$))"), Be = new RegExp("^ {0," + Math.min(3, fe - 1) + "}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)"), Me = new RegExp("^ {0," + Math.min(3, fe - 1) + "}(?:```|~~~)"), Ae = new RegExp("^ {0," + Math.min(3, fe - 1) + "}#"); te && (ve = te.split(`
`, 1)[0],
                            $e = ve,
                            this.options.pedantic && ($e = $e.replace(/^ {1,4}(?=( {4})*[^ ])/g, "  ")),
                            !(Me.test($e) || Ae.test($e) || ze.test($e) || Be.test(te))); ) {
                                if ($e.search(/[^ ]/) >= fe || !$e.trim())
                                    me += `
` + $e.slice(fe);
                                else if (!ue)
                                    me += `
` + $e;
                                else
                                    break;
                                !ue && !$e.trim() && (ue = !0),
                                le += ve + `
`,
                                te = te.substring(ve.length + 1)
                            }
                        De.loose || (de ? De.loose = !0 : /\n *\n *$/.test(le) && (de = !0)),
                        this.options.gfm && (ie = /^\[[ xX]\] /.exec(me),
                        ie && (oe = ie[0] !== "[ ] ",
                        me = me.replace(/^\[[ xX]\] +/, ""))),
                        De.items.push({
                            type: "list_item",
                            raw: le,
                            task: !!ie,
                            checked: oe,
                            loose: !1,
                            text: me
                        }),
                        De.raw += le
                    }
                    De.items[De.items.length - 1].raw = le.trimRight(),
                    De.items[De.items.length - 1].text = me.trimRight(),
                    De.raw = De.raw.trimRight();
                    var Se = De.items.length;
                    for (he = 0; he < Se; he++) {
                        this.lexer.state.top = !1,
                        De.items[he].tokens = this.lexer.blockTokens(De.items[he].text, []);
                        var Ce = De.items[he].tokens.filter(function(je) {
                            return je.type === "space"
                        })
                          , ke = Ce.every(function(je) {
                            for (var Ie = je.raw.split(""), Te = 0, Ne = I(Ie), Oe; !(Oe = Ne()).done; ) {
                                var Fe = Oe.value;
                                if (Fe === `
` && (Te += 1),
                                Te > 1)
                                    return !0
                            }
                            return !1
                        });
                        !De.loose && Ce.length && ke && (De.loose = !0,
                        De.items[he].loose = !0)
                    }
                    return De
                }
            }
            ,
            ee.html = function(te) {
                var ne = this.rules.block.html.exec(te);
                if (ne) {
                    var le = {
                        type: "html",
                        raw: ne[0],
                        pre: !this.options.sanitizer && (ne[1] === "pre" || ne[1] === "script" || ne[1] === "style"),
                        text: ne[0]
                    };
                    if (this.options.sanitize) {
                        var ie = this.options.sanitizer ? this.options.sanitizer(ne[0]) : i(ne[0]);
                        le.type = "paragraph",
                        le.text = ie,
                        le.tokens = this.lexer.inline(ie)
                    }
                    return le
                }
            }
            ,
            ee.def = function(te) {
                var ne = this.rules.block.def.exec(te);
                if (ne) {
                    ne[3] && (ne[3] = ne[3].substring(1, ne[3].length - 1));
                    var le = ne[1].toLowerCase().replace(/\s+/g, " ");
                    return {
                        type: "def",
                        tag: le,
                        raw: ne[0],
                        href: ne[2],
                        title: ne[3]
                    }
                }
            }
            ,
            ee.table = function(te) {
                var ne = this.rules.block.table.exec(te);
                if (ne) {
                    var le = {
                        type: "table",
                        header: D(ne[1]).map(function(de) {
                            return {
                                text: de
                            }
                        }),
                        align: ne[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
                        rows: ne[3] && ne[3].trim() ? ne[3].replace(/\n[ \t]*$/, "").split(`
`) : []
                    };
                    if (le.header.length === le.align.length) {
                        le.raw = ne[0];
                        var ie = le.align.length, oe, fe, he, ue;
                        for (oe = 0; oe < ie; oe++)
                            /^ *-+: *$/.test(le.align[oe]) ? le.align[oe] = "right" : /^ *:-+: *$/.test(le.align[oe]) ? le.align[oe] = "center" : /^ *:-+ *$/.test(le.align[oe]) ? le.align[oe] = "left" : le.align[oe] = null;
                        for (ie = le.rows.length,
                        oe = 0; oe < ie; oe++)
                            le.rows[oe] = D(le.rows[oe], le.header.length).map(function(de) {
                                return {
                                    text: de
                                }
                            });
                        for (ie = le.header.length,
                        fe = 0; fe < ie; fe++)
                            le.header[fe].tokens = this.lexer.inline(le.header[fe].text);
                        for (ie = le.rows.length,
                        fe = 0; fe < ie; fe++)
                            for (ue = le.rows[fe],
                            he = 0; he < ue.length; he++)
                                ue[he].tokens = this.lexer.inline(ue[he].text);
                        return le
                    }
                }
            }
            ,
            ee.lheading = function(te) {
                var ne = this.rules.block.lheading.exec(te);
                if (ne)
                    return {
                        type: "heading",
                        raw: ne[0],
                        depth: ne[2].charAt(0) === "=" ? 1 : 2,
                        text: ne[1],
                        tokens: this.lexer.inline(ne[1])
                    }
            }
            ,
            ee.paragraph = function(te) {
                var ne = this.rules.block.paragraph.exec(te);
                if (ne) {
                    var le = ne[1].charAt(ne[1].length - 1) === `
` ? ne[1].slice(0, -1) : ne[1];
                    return {
                        type: "paragraph",
                        raw: ne[0],
                        text: le,
                        tokens: this.lexer.inline(le)
                    }
                }
            }
            ,
            ee.text = function(te) {
                var ne = this.rules.block.text.exec(te);
                if (ne)
                    return {
                        type: "text",
                        raw: ne[0],
                        text: ne[0],
                        tokens: this.lexer.inline(ne[0])
                    }
            }
            ,
            ee.escape = function(te) {
                var ne = this.rules.inline.escape.exec(te);
                if (ne)
                    return {
                        type: "escape",
                        raw: ne[0],
                        text: i(ne[1])
                    }
            }
            ,
            ee.tag = function(te) {
                var ne = this.rules.inline.tag.exec(te);
                if (ne)
                    return !this.lexer.state.inLink && /^<a /i.test(ne[0]) ? this.lexer.state.inLink = !0 : this.lexer.state.inLink && /^<\/a>/i.test(ne[0]) && (this.lexer.state.inLink = !1),
                    !this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(ne[0]) ? this.lexer.state.inRawBlock = !0 : this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(ne[0]) && (this.lexer.state.inRawBlock = !1),
                    {
                        type: this.options.sanitize ? "text" : "html",
                        raw: ne[0],
                        inLink: this.lexer.state.inLink,
                        inRawBlock: this.lexer.state.inRawBlock,
                        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(ne[0]) : i(ne[0]) : ne[0]
                    }
            }
            ,
            ee.link = function(te) {
                var ne = this.rules.inline.link.exec(te);
                if (ne) {
                    var le = ne[2].trim();
                    if (!this.options.pedantic && /^</.test(le)) {
                        if (!/>$/.test(le))
                            return;
                        var ie = k(le.slice(0, -1), "\\");
                        if ((le.length - ie.length) % 2 === 0)
                            return
                    } else {
                        var oe = P(ne[2], "()");
                        if (oe > -1) {
                            var fe = ne[0].indexOf("!") === 0 ? 5 : 4
                              , he = fe + ne[1].length + oe;
                            ne[2] = ne[2].substring(0, oe),
                            ne[0] = ne[0].substring(0, he).trim(),
                            ne[3] = ""
                        }
                    }
                    var ue = ne[2]
                      , de = "";
                    if (this.options.pedantic) {
                        var $e = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(ue);
                        $e && (ue = $e[1],
                        de = $e[3])
                    } else
                        de = ne[3] ? ne[3].slice(1, -1) : "";
                    return ue = ue.trim(),
                    /^</.test(ue) && (this.options.pedantic && !/>$/.test(le) ? ue = ue.slice(1) : ue = ue.slice(1, -1)),
                    O(ne, {
                        href: ue && ue.replace(this.rules.inline._escapes, "$1"),
                        title: de && de.replace(this.rules.inline._escapes, "$1")
                    }, ne[0], this.lexer)
                }
            }
            ,
            ee.reflink = function(te, ne) {
                var le;
                if ((le = this.rules.inline.reflink.exec(te)) || (le = this.rules.inline.nolink.exec(te))) {
                    var ie = (le[2] || le[1]).replace(/\s+/g, " ");
                    if (ie = ne[ie.toLowerCase()],
                    !ie || !ie.href) {
                        var oe = le[0].charAt(0);
                        return {
                            type: "text",
                            raw: oe,
                            text: oe
                        }
                    }
                    return O(le, ie, le[0], this.lexer)
                }
            }
            ,
            ee.emStrong = function(te, ne, le) {
                le === void 0 && (le = "");
                var ie = this.rules.inline.emStrong.lDelim.exec(te);
                if (ie && !(ie[3] && le.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/))) {
                    var oe = ie[1] || ie[2] || "";
                    if (!oe || oe && (le === "" || this.rules.inline.punctuation.exec(le))) {
                        var fe = ie[0].length - 1, he, ue, de = fe, $e = 0, pe = ie[0][0] === "*" ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
                        for (pe.lastIndex = 0,
                        ne = ne.slice(-1 * te.length + fe); (ie = pe.exec(ne)) != null; )
                            if (he = ie[1] || ie[2] || ie[3] || ie[4] || ie[5] || ie[6],
                            !!he) {
                                if (ue = he.length,
                                ie[3] || ie[4]) {
                                    de += ue;
                                    continue
                                } else if ((ie[5] || ie[6]) && fe % 3 && !((fe + ue) % 3)) {
                                    $e += ue;
                                    continue
                                }
                                if (de -= ue,
                                !(de > 0)) {
                                    if (ue = Math.min(ue, ue + de + $e),
                                    Math.min(fe, ue) % 2) {
                                        var ve = te.slice(1, fe + ie.index + ue);
                                        return {
                                            type: "em",
                                            raw: te.slice(0, fe + ie.index + ue + 1),
                                            text: ve,
                                            tokens: this.lexer.inlineTokens(ve)
                                        }
                                    }
                                    var me = te.slice(2, fe + ie.index + ue - 1);
                                    return {
                                        type: "strong",
                                        raw: te.slice(0, fe + ie.index + ue + 1),
                                        text: me,
                                        tokens: this.lexer.inlineTokens(me)
                                    }
                                }
                            }
                    }
                }
            }
            ,
            ee.codespan = function(te) {
                var ne = this.rules.inline.code.exec(te);
                if (ne) {
                    var le = ne[2].replace(/\n/g, " ")
                      , ie = /[^ ]/.test(le)
                      , oe = /^ /.test(le) && / $/.test(le);
                    return ie && oe && (le = le.substring(1, le.length - 1)),
                    le = i(le, !0),
                    {
                        type: "codespan",
                        raw: ne[0],
                        text: le
                    }
                }
            }
            ,
            ee.br = function(te) {
                var ne = this.rules.inline.br.exec(te);
                if (ne)
                    return {
                        type: "br",
                        raw: ne[0]
                    }
            }
            ,
            ee.del = function(te) {
                var ne = this.rules.inline.del.exec(te);
                if (ne)
                    return {
                        type: "del",
                        raw: ne[0],
                        text: ne[2],
                        tokens: this.lexer.inlineTokens(ne[2])
                    }
            }
            ,
            ee.autolink = function(te, ne) {
                var le = this.rules.inline.autolink.exec(te);
                if (le) {
                    var ie, oe;
                    return le[2] === "@" ? (ie = i(this.options.mangle ? ne(le[1]) : le[1]),
                    oe = "mailto:" + ie) : (ie = i(le[1]),
                    oe = ie),
                    {
                        type: "link",
                        raw: le[0],
                        text: ie,
                        href: oe,
                        tokens: [{
                            type: "text",
                            raw: ie,
                            text: ie
                        }]
                    }
                }
            }
            ,
            ee.url = function(te, ne) {
                var le;
                if (le = this.rules.inline.url.exec(te)) {
                    var ie, oe;
                    if (le[2] === "@")
                        ie = i(this.options.mangle ? ne(le[0]) : le[0]),
                        oe = "mailto:" + ie;
                    else {
                        var fe;
                        do
                            fe = le[0],
                            le[0] = this.rules.inline._backpedal.exec(le[0])[0];
                        while (fe !== le[0]);
                        ie = i(le[0]),
                        le[1] === "www." ? oe = "http://" + ie : oe = ie
                    }
                    return {
                        type: "link",
                        raw: le[0],
                        text: ie,
                        href: oe,
                        tokens: [{
                            type: "text",
                            raw: ie,
                            text: ie
                        }]
                    }
                }
            }
            ,
            ee.inlineText = function(te, ne) {
                var le = this.rules.inline.text.exec(te);
                if (le) {
                    var ie;
                    return this.lexer.state.inRawBlock ? ie = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(le[0]) : i(le[0]) : le[0] : ie = i(this.options.smartypants ? ne(le[0]) : le[0]),
                    {
                        type: "text",
                        raw: le[0],
                        text: ie
                    }
                }
            }
            ,
            se
        }()
          , z = {
            newline: /^(?: *(?:\n|$))+/,
            code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
            fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
            hr: /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
            heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
            blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
            list: /^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,
            html: "^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",
            def: /^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
            table: S,
            lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
            _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
            text: /^[^\n]+/
        };
        z._label = /(?!\s*\])(?:\\.|[^\[\]\\])+/,
        z._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,
        z.def = d(z.def).replace("label", z._label).replace("title", z._title).getRegex(),
        z.bullet = /(?:[*+-]|\d{1,9}[.)])/,
        z.listItemStart = d(/^( *)(bull) */).replace("bull", z.bullet).getRegex(),
        z.list = d(z.list).replace(/bull/g, z.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + z.def.source + ")").getRegex(),
        z._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",
        z._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/,
        z.html = d(z.html, "i").replace("comment", z._comment).replace("tag", z._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),
        z.paragraph = d(z._paragraph).replace("hr", z.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", z._tag).getRegex(),
        z.blockquote = d(z.blockquote).replace("paragraph", z.paragraph).getRegex(),
        z.normal = T({}, z),
        z.gfm = T({}, z.normal, {
            table: "^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
        }),
        z.gfm.table = d(z.gfm.table).replace("hr", z.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", z._tag).getRegex(),
        z.gfm.paragraph = d(z._paragraph).replace("hr", z.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("table", z.gfm.table).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", z._tag).getRegex(),
        z.pedantic = T({}, z.normal, {
            html: d(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment", z._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
            def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
            heading: /^(#{1,6})(.*)(?:\n+|$)/,
            fences: S,
            paragraph: d(z.normal._paragraph).replace("hr", z.hr).replace("heading", ` *#{1,6} *[^
]`).replace("lheading", z.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
        });
        var V = {
            escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
            autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
            url: S,
            tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
            link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
            reflink: /^!?\[(label)\]\[(ref)\]/,
            nolink: /^!?\[(ref)\](?:\[\])?/,
            reflinkSearch: "reflink|nolink(?!\\()",
            emStrong: {
                lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
                rDelimAst: /^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[^*]+(?=[^*])|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,
                rDelimUnd: /^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[^_]+(?=[^_])|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/
            },
            code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
            br: /^( {2,}|\\)\n(?!\s*$)/,
            del: S,
            text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
            punctuation: /^([\spunctuation])/
        };
        V._punctuation = "!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~",
        V.punctuation = d(V.punctuation).replace(/punctuation/g, V._punctuation).getRegex(),
        V.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,
        V.escapedEmSt = /\\\*|\\_/g,
        V._comment = d(z._comment).replace("(?:-->|$)", "-->").getRegex(),
        V.emStrong.lDelim = d(V.emStrong.lDelim).replace(/punct/g, V._punctuation).getRegex(),
        V.emStrong.rDelimAst = d(V.emStrong.rDelimAst, "g").replace(/punct/g, V._punctuation).getRegex(),
        V.emStrong.rDelimUnd = d(V.emStrong.rDelimUnd, "g").replace(/punct/g, V._punctuation).getRegex(),
        V._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,
        V._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,
        V._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,
        V.autolink = d(V.autolink).replace("scheme", V._scheme).replace("email", V._email).getRegex(),
        V._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,
        V.tag = d(V.tag).replace("comment", V._comment).replace("attribute", V._attribute).getRegex(),
        V._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,
        V._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,
        V._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,
        V.link = d(V.link).replace("label", V._label).replace("href", V._href).replace("title", V._title).getRegex(),
        V.reflink = d(V.reflink).replace("label", V._label).replace("ref", z._label).getRegex(),
        V.nolink = d(V.nolink).replace("ref", z._label).getRegex(),
        V.reflinkSearch = d(V.reflinkSearch, "g").replace("reflink", V.reflink).replace("nolink", V.nolink).getRegex(),
        V.normal = T({}, V),
        V.pedantic = T({}, V.normal, {
            strong: {
                start: /^__|\*\*/,
                middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
                endAst: /\*\*(?!\*)/g,
                endUnd: /__(?!_)/g
            },
            em: {
                start: /^_|\*/,
                middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
                endAst: /\*(?!\*)/g,
                endUnd: /_(?!_)/g
            },
            link: d(/^!?\[(label)\]\((.*?)\)/).replace("label", V._label).getRegex(),
            reflink: d(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", V._label).getRegex()
        }),
        V.gfm = T({}, V.normal, {
            escape: d(V.escape).replace("])", "~|])").getRegex(),
            _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
            url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
            _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
            del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
            text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
        }),
        V.gfm.url = d(V.gfm.url, "i").replace("email", V.gfm._extended_email).getRegex(),
        V.breaks = T({}, V.gfm, {
            br: d(V.br).replace("{2,}", "*").getRegex(),
            text: d(V.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
        });
        function B(se) {
            return se.replace(/---/g, "\u2014").replace(/--/g, "\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1\u2018").replace(/'/g, "\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1\u201C").replace(/"/g, "\u201D").replace(/\.{3}/g, "\u2026")
        }
        function j(se) {
            var ee = "", J, te, ne = se.length;
            for (J = 0; J < ne; J++)
                te = se.charCodeAt(J),
                Math.random() > .5 && (te = "x" + te.toString(16)),
                ee += "&#" + te + ";";
            return ee
        }
        var W = function() {
            function se(J) {
                this.tokens = [],
                this.tokens.links = Object.create(null),
                this.options = J || ce.defaults,
                this.options.tokenizer = this.options.tokenizer || new N,
                this.tokenizer = this.options.tokenizer,
                this.tokenizer.options = this.options,
                this.tokenizer.lexer = this,
                this.inlineQueue = [],
                this.state = {
                    inLink: !1,
                    inRawBlock: !1,
                    top: !0
                };
                var te = {
                    block: z.normal,
                    inline: V.normal
                };
                this.options.pedantic ? (te.block = z.pedantic,
                te.inline = V.pedantic) : this.options.gfm && (te.block = z.gfm,
                this.options.breaks ? te.inline = V.breaks : te.inline = V.gfm),
                this.tokenizer.rules = te
            }
            se.lex = function(te, ne) {
                var le = new se(ne);
                return le.lex(te)
            }
            ,
            se.lexInline = function(te, ne) {
                var le = new se(ne);
                return le.inlineTokens(te)
            }
            ;
            var ee = se.prototype;
            return ee.lex = function(te) {
                te = te.replace(/\r\n|\r/g, `
`),
                this.blockTokens(te, this.tokens);
                for (var ne; ne = this.inlineQueue.shift(); )
                    this.inlineTokens(ne.src, ne.tokens);
                return this.tokens
            }
            ,
            ee.blockTokens = function(te, ne) {
                var le = this;
                ne === void 0 && (ne = []),
                this.options.pedantic ? te = te.replace(/\t/g, "    ").replace(/^ +$/gm, "") : te = te.replace(/^( *)(\t+)/gm, function(de, $e, pe) {
                    return $e + "    ".repeat(pe.length)
                });
                for (var ie, oe, fe, he; te; )
                    if (!(this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function(de) {
                        return (ie = de.call({
                            lexer: le
                        }, te, ne)) ? (te = te.substring(ie.raw.length),
                        ne.push(ie),
                        !0) : !1
                    }))) {
                        if (ie = this.tokenizer.space(te)) {
                            te = te.substring(ie.raw.length),
                            ie.raw.length === 1 && ne.length > 0 ? ne[ne.length - 1].raw += `
` : ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.code(te)) {
                            te = te.substring(ie.raw.length),
                            oe = ne[ne.length - 1],
                            oe && (oe.type === "paragraph" || oe.type === "text") ? (oe.raw += `
` + ie.raw,
                            oe.text += `
` + ie.text,
                            this.inlineQueue[this.inlineQueue.length - 1].src = oe.text) : ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.fences(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.heading(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.hr(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.blockquote(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.list(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.html(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.def(te)) {
                            te = te.substring(ie.raw.length),
                            oe = ne[ne.length - 1],
                            oe && (oe.type === "paragraph" || oe.type === "text") ? (oe.raw += `
` + ie.raw,
                            oe.text += `
` + ie.raw,
                            this.inlineQueue[this.inlineQueue.length - 1].src = oe.text) : this.tokens.links[ie.tag] || (this.tokens.links[ie.tag] = {
                                href: ie.href,
                                title: ie.title
                            });
                            continue
                        }
                        if (ie = this.tokenizer.table(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.lheading(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (fe = te,
                        this.options.extensions && this.options.extensions.startBlock && function() {
                            var de = 1 / 0
                              , $e = te.slice(1)
                              , pe = void 0;
                            le.options.extensions.startBlock.forEach(function(ve) {
                                pe = ve.call({
                                    lexer: this
                                }, $e),
                                typeof pe == "number" && pe >= 0 && (de = Math.min(de, pe))
                            }),
                            de < 1 / 0 && de >= 0 && (fe = te.substring(0, de + 1))
                        }(),
                        this.state.top && (ie = this.tokenizer.paragraph(fe))) {
                            oe = ne[ne.length - 1],
                            he && oe.type === "paragraph" ? (oe.raw += `
` + ie.raw,
                            oe.text += `
` + ie.text,
                            this.inlineQueue.pop(),
                            this.inlineQueue[this.inlineQueue.length - 1].src = oe.text) : ne.push(ie),
                            he = fe.length !== te.length,
                            te = te.substring(ie.raw.length);
                            continue
                        }
                        if (ie = this.tokenizer.text(te)) {
                            te = te.substring(ie.raw.length),
                            oe = ne[ne.length - 1],
                            oe && oe.type === "text" ? (oe.raw += `
` + ie.raw,
                            oe.text += `
` + ie.text,
                            this.inlineQueue.pop(),
                            this.inlineQueue[this.inlineQueue.length - 1].src = oe.text) : ne.push(ie);
                            continue
                        }
                        if (te) {
                            var ue = "Infinite loop on byte: " + te.charCodeAt(0);
                            if (this.options.silent) {
                                console.error(ue);
                                break
                            } else
                                throw new Error(ue)
                        }
                    }
                return this.state.top = !0,
                ne
            }
            ,
            ee.inline = function(te, ne) {
                return ne === void 0 && (ne = []),
                this.inlineQueue.push({
                    src: te,
                    tokens: ne
                }),
                ne
            }
            ,
            ee.inlineTokens = function(te, ne) {
                var le = this;
                ne === void 0 && (ne = []);
                var ie, oe, fe, he = te, ue, de, $e;
                if (this.tokens.links) {
                    var pe = Object.keys(this.tokens.links);
                    if (pe.length > 0)
                        for (; (ue = this.tokenizer.rules.inline.reflinkSearch.exec(he)) != null; )
                            pe.includes(ue[0].slice(ue[0].lastIndexOf("[") + 1, -1)) && (he = he.slice(0, ue.index) + "[" + M("a", ue[0].length - 2) + "]" + he.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))
                }
                for (; (ue = this.tokenizer.rules.inline.blockSkip.exec(he)) != null; )
                    he = he.slice(0, ue.index) + "[" + M("a", ue[0].length - 2) + "]" + he.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
                for (; (ue = this.tokenizer.rules.inline.escapedEmSt.exec(he)) != null; )
                    he = he.slice(0, ue.index) + "++" + he.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);
                for (; te; )
                    if (de || ($e = ""),
                    de = !1,
                    !(this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function(me) {
                        return (ie = me.call({
                            lexer: le
                        }, te, ne)) ? (te = te.substring(ie.raw.length),
                        ne.push(ie),
                        !0) : !1
                    }))) {
                        if (ie = this.tokenizer.escape(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.tag(te)) {
                            te = te.substring(ie.raw.length),
                            oe = ne[ne.length - 1],
                            oe && ie.type === "text" && oe.type === "text" ? (oe.raw += ie.raw,
                            oe.text += ie.text) : ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.link(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.reflink(te, this.tokens.links)) {
                            te = te.substring(ie.raw.length),
                            oe = ne[ne.length - 1],
                            oe && ie.type === "text" && oe.type === "text" ? (oe.raw += ie.raw,
                            oe.text += ie.text) : ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.emStrong(te, he, $e)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.codespan(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.br(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.del(te)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (ie = this.tokenizer.autolink(te, j)) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (!this.state.inLink && (ie = this.tokenizer.url(te, j))) {
                            te = te.substring(ie.raw.length),
                            ne.push(ie);
                            continue
                        }
                        if (fe = te,
                        this.options.extensions && this.options.extensions.startInline && function() {
                            var me = 1 / 0
                              , we = te.slice(1)
                              , ye = void 0;
                            le.options.extensions.startInline.forEach(function(Le) {
                                ye = Le.call({
                                    lexer: this
                                }, we),
                                typeof ye == "number" && ye >= 0 && (me = Math.min(me, ye))
                            }),
                            me < 1 / 0 && me >= 0 && (fe = te.substring(0, me + 1))
                        }(),
                        ie = this.tokenizer.inlineText(fe, B)) {
                            te = te.substring(ie.raw.length),
                            ie.raw.slice(-1) !== "_" && ($e = ie.raw.slice(-1)),
                            de = !0,
                            oe = ne[ne.length - 1],
                            oe && oe.type === "text" ? (oe.raw += ie.raw,
                            oe.text += ie.text) : ne.push(ie);
                            continue
                        }
                        if (te) {
                            var ve = "Infinite loop on byte: " + te.charCodeAt(0);
                            if (this.options.silent) {
                                console.error(ve);
                                break
                            } else
                                throw new Error(ve)
                        }
                    }
                return ne
            }
            ,
            t(se, null, [{
                key: "rules",
                get: function() {
                    return {
                        block: z,
                        inline: V
                    }
                }
            }]),
            se
        }()
          , q = function() {
            function se(J) {
                this.options = J || ce.defaults
            }
            var ee = se.prototype;
            return ee.code = function(te, ne, le) {
                var ie = (ne || "").match(/\S*/)[0];
                if (this.options.highlight) {
                    var oe = this.options.highlight(te, ie);
                    oe != null && oe !== te && (le = !0,
                    te = oe)
                }
                return te = te.replace(/\n$/, "") + `
`,
                ie ? '<pre><code class="' + this.options.langPrefix + i(ie, !0) + '">' + (le ? te : i(te, !0)) + `</code></pre>
` : "<pre><code>" + (le ? te : i(te, !0)) + `</code></pre>
`
            }
            ,
            ee.blockquote = function(te) {
                return `<blockquote>
` + te + `</blockquote>
`
            }
            ,
            ee.html = function(te) {
                return te
            }
            ,
            ee.heading = function(te, ne, le, ie) {
                if (this.options.headerIds) {
                    var oe = this.options.headerPrefix + ie.slug(le);
                    return "<h" + ne + ' id="' + oe + '">' + te + "</h" + ne + `>
`
                }
                return "<h" + ne + ">" + te + "</h" + ne + `>
`
            }
            ,
            ee.hr = function() {
                return this.options.xhtml ? `<hr/>
` : `<hr>
`
            }
            ,
            ee.list = function(te, ne, le) {
                var ie = ne ? "ol" : "ul"
                  , oe = ne && le !== 1 ? ' start="' + le + '"' : "";
                return "<" + ie + oe + `>
` + te + "</" + ie + `>
`
            }
            ,
            ee.listitem = function(te) {
                return "<li>" + te + `</li>
`
            }
            ,
            ee.checkbox = function(te) {
                return "<input " + (te ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> "
            }
            ,
            ee.paragraph = function(te) {
                return "<p>" + te + `</p>
`
            }
            ,
            ee.table = function(te, ne) {
                return ne && (ne = "<tbody>" + ne + "</tbody>"),
                `<table>
<thead>
` + te + `</thead>
` + ne + `</table>
`
            }
            ,
            ee.tablerow = function(te) {
                return `<tr>
` + te + `</tr>
`
            }
            ,
            ee.tablecell = function(te, ne) {
                var le = ne.header ? "th" : "td"
                  , ie = ne.align ? "<" + le + ' align="' + ne.align + '">' : "<" + le + ">";
                return ie + te + ("</" + le + `>
`)
            }
            ,
            ee.strong = function(te) {
                return "<strong>" + te + "</strong>"
            }
            ,
            ee.em = function(te) {
                return "<em>" + te + "</em>"
            }
            ,
            ee.codespan = function(te) {
                return "<code>" + te + "</code>"
            }
            ,
            ee.br = function() {
                return this.options.xhtml ? "<br/>" : "<br>"
            }
            ,
            ee.del = function(te) {
                return "<del>" + te + "</del>"
            }
            ,
            ee.link = function(te, ne, le) {
                if (te = r(this.options.sanitize, this.options.baseUrl, te),
                te === null)
                    return le;
                var ie = '<a href="' + i(te) + '"';
                return ne && (ie += ' title="' + ne + '"'),
                ie += ">" + le + "</a>",
                ie
            }
            ,
            ee.image = function(te, ne, le) {
                if (te = r(this.options.sanitize, this.options.baseUrl, te),
                te === null)
                    return le;
                var ie = '<img src="' + te + '" alt="' + le + '"';
                return ne && (ie += ' title="' + ne + '"'),
                ie += this.options.xhtml ? "/>" : ">",
                ie
            }
            ,
            ee.text = function(te) {
                return te
            }
            ,
            se
        }()
          , H = function() {
            function se() {}
            var ee = se.prototype;
            return ee.strong = function(te) {
                return te
            }
            ,
            ee.em = function(te) {
                return te
            }
            ,
            ee.codespan = function(te) {
                return te
            }
            ,
            ee.del = function(te) {
                return te
            }
            ,
            ee.html = function(te) {
                return te
            }
            ,
            ee.text = function(te) {
                return te
            }
            ,
            ee.link = function(te, ne, le) {
                return "" + le
            }
            ,
            ee.image = function(te, ne, le) {
                return "" + le
            }
            ,
            ee.br = function() {
                return ""
            }
            ,
            se
        }()
          , U = function() {
            function se() {
                this.seen = {}
            }
            var ee = se.prototype;
            return ee.serialize = function(te) {
                return te.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-")
            }
            ,
            ee.getNextSafeSlug = function(te, ne) {
                var le = te
                  , ie = 0;
                if (this.seen.hasOwnProperty(le)) {
                    ie = this.seen[te];
                    do
                        ie++,
                        le = te + "-" + ie;
                    while (this.seen.hasOwnProperty(le))
                }
                return ne || (this.seen[te] = ie,
                this.seen[le] = 0),
                le
            }
            ,
            ee.slug = function(te, ne) {
                ne === void 0 && (ne = {});
                var le = this.serialize(te);
                return this.getNextSafeSlug(le, ne.dryrun)
            }
            ,
            se
        }()
          , K = function() {
            function se(J) {
                this.options = J || ce.defaults,
                this.options.renderer = this.options.renderer || new q,
                this.renderer = this.options.renderer,
                this.renderer.options = this.options,
                this.textRenderer = new H,
                this.slugger = new U
            }
            se.parse = function(te, ne) {
                var le = new se(ne);
                return le.parse(te)
            }
            ,
            se.parseInline = function(te, ne) {
                var le = new se(ne);
                return le.parseInline(te)
            }
            ;
            var ee = se.prototype;
            return ee.parse = function(te, ne) {
                ne === void 0 && (ne = !0);
                var le = "", ie, oe, fe, he, ue, de, $e, pe, ve, me, we, ye, Le, De, Pe, ze, Be, Me, Ae, Se = te.length;
                for (ie = 0; ie < Se; ie++) {
                    if (me = te[ie],
                    this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[me.type] && (Ae = this.options.extensions.renderers[me.type].call({
                        parser: this
                    }, me),
                    Ae !== !1 || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(me.type))) {
                        le += Ae || "";
                        continue
                    }
                    switch (me.type) {
                    case "space":
                        continue;
                    case "hr":
                        {
                            le += this.renderer.hr();
                            continue
                        }
                    case "heading":
                        {
                            le += this.renderer.heading(this.parseInline(me.tokens), me.depth, h(this.parseInline(me.tokens, this.textRenderer)), this.slugger);
                            continue
                        }
                    case "code":
                        {
                            le += this.renderer.code(me.text, me.lang, me.escaped);
                            continue
                        }
                    case "table":
                        {
                            for (pe = "",
                            $e = "",
                            he = me.header.length,
                            oe = 0; oe < he; oe++)
                                $e += this.renderer.tablecell(this.parseInline(me.header[oe].tokens), {
                                    header: !0,
                                    align: me.align[oe]
                                });
                            for (pe += this.renderer.tablerow($e),
                            ve = "",
                            he = me.rows.length,
                            oe = 0; oe < he; oe++) {
                                for (de = me.rows[oe],
                                $e = "",
                                ue = de.length,
                                fe = 0; fe < ue; fe++)
                                    $e += this.renderer.tablecell(this.parseInline(de[fe].tokens), {
                                        header: !1,
                                        align: me.align[fe]
                                    });
                                ve += this.renderer.tablerow($e)
                            }
                            le += this.renderer.table(pe, ve);
                            continue
                        }
                    case "blockquote":
                        {
                            ve = this.parse(me.tokens),
                            le += this.renderer.blockquote(ve);
                            continue
                        }
                    case "list":
                        {
                            for (we = me.ordered,
                            ye = me.start,
                            Le = me.loose,
                            he = me.items.length,
                            ve = "",
                            oe = 0; oe < he; oe++)
                                Pe = me.items[oe],
                                ze = Pe.checked,
                                Be = Pe.task,
                                De = "",
                                Pe.task && (Me = this.renderer.checkbox(ze),
                                Le ? Pe.tokens.length > 0 && Pe.tokens[0].type === "paragraph" ? (Pe.tokens[0].text = Me + " " + Pe.tokens[0].text,
                                Pe.tokens[0].tokens && Pe.tokens[0].tokens.length > 0 && Pe.tokens[0].tokens[0].type === "text" && (Pe.tokens[0].tokens[0].text = Me + " " + Pe.tokens[0].tokens[0].text)) : Pe.tokens.unshift({
                                    type: "text",
                                    text: Me
                                }) : De += Me),
                                De += this.parse(Pe.tokens, Le),
                                ve += this.renderer.listitem(De, Be, ze);
                            le += this.renderer.list(ve, we, ye);
                            continue
                        }
                    case "html":
                        {
                            le += this.renderer.html(me.text);
                            continue
                        }
                    case "paragraph":
                        {
                            le += this.renderer.paragraph(this.parseInline(me.tokens));
                            continue
                        }
                    case "text":
                        {
                            for (ve = me.tokens ? this.parseInline(me.tokens) : me.text; ie + 1 < Se && te[ie + 1].type === "text"; )
                                me = te[++ie],
                                ve += `
` + (me.tokens ? this.parseInline(me.tokens) : me.text);
                            le += ne ? this.renderer.paragraph(ve) : ve;
                            continue
                        }
                    default:
                        {
                            var Ce = 'Token with "' + me.type + '" type was not found.';
                            if (this.options.silent) {
                                console.error(Ce);
                                return
                            } else
                                throw new Error(Ce)
                        }
                    }
                }
                return le
            }
            ,
            ee.parseInline = function(te, ne) {
                ne = ne || this.renderer;
                var le = "", ie, oe, fe, he = te.length;
                for (ie = 0; ie < he; ie++) {
                    if (oe = te[ie],
                    this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[oe.type] && (fe = this.options.extensions.renderers[oe.type].call({
                        parser: this
                    }, oe),
                    fe !== !1 || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(oe.type))) {
                        le += fe || "";
                        continue
                    }
                    switch (oe.type) {
                    case "escape":
                        {
                            le += ne.text(oe.text);
                            break
                        }
                    case "html":
                        {
                            le += ne.html(oe.text);
                            break
                        }
                    case "link":
                        {
                            le += ne.link(oe.href, oe.title, this.parseInline(oe.tokens, ne));
                            break
                        }
                    case "image":
                        {
                            le += ne.image(oe.href, oe.title, oe.text);
                            break
                        }
                    case "strong":
                        {
                            le += ne.strong(this.parseInline(oe.tokens, ne));
                            break
                        }
                    case "em":
                        {
                            le += ne.em(this.parseInline(oe.tokens, ne));
                            break
                        }
                    case "codespan":
                        {
                            le += ne.codespan(oe.text);
                            break
                        }
                    case "br":
                        {
                            le += ne.br();
                            break
                        }
                    case "del":
                        {
                            le += ne.del(this.parseInline(oe.tokens, ne));
                            break
                        }
                    case "text":
                        {
                            le += ne.text(oe.text);
                            break
                        }
                    default:
                        {
                            var ue = 'Token with "' + oe.type + '" type was not found.';
                            if (this.options.silent) {
                                console.error(ue);
                                return
                            } else
                                throw new Error(ue)
                        }
                    }
                }
                return le
            }
            ,
            se
        }();
        function G(se, ee, J) {
            if (typeof se > "u" || se === null)
                throw new Error("marked(): input parameter is undefined or null");
            if (typeof se != "string")
                throw new Error("marked(): input parameter is of type " + Object.prototype.toString.call(se) + ", string expected");
            if (typeof ee == "function" && (J = ee,
            ee = null),
            ee = T({}, G.defaults, ee || {}),
            A(ee),
            J) {
                var te = ee.highlight, ne;
                try {
                    ne = W.lex(se, ee)
                } catch (he) {
                    return J(he)
                }
                var le = function(ue) {
                    var de;
                    if (!ue)
                        try {
                            ee.walkTokens && G.walkTokens(ne, ee.walkTokens),
                            de = K.parse(ne, ee)
                        } catch ($e) {
                            ue = $e
                        }
                    return ee.highlight = te,
                    ue ? J(ue) : J(null, de)
                };
                if (!te || te.length < 3 || (delete ee.highlight,
                !ne.length))
                    return le();
                var ie = 0;
                G.walkTokens(ne, function(he) {
                    he.type === "code" && (ie++,
                    setTimeout(function() {
                        te(he.text, he.lang, function(ue, de) {
                            if (ue)
                                return le(ue);
                            de != null && de !== he.text && (he.text = de,
                            he.escaped = !0),
                            ie--,
                            ie === 0 && le()
                        })
                    }, 0))
                }),
                ie === 0 && le();
                return
            }
            function oe(he) {
                if (he.message += `
Please report this to https://github.com/markedjs/marked.`,
                ee.silent)
                    return "<p>An error occurred:</p><pre>" + i(he.message + "", !0) + "</pre>";
                throw he
            }
            try {
                var fe = W.lex(se, ee);
                if (ee.walkTokens) {
                    if (ee.async)
                        return Promise.all(G.walkTokens(fe, ee.walkTokens)).then(function() {
                            return K.parse(fe, ee)
                        }).catch(oe);
                    G.walkTokens(fe, ee.walkTokens)
                }
                return K.parse(fe, ee)
            } catch (he) {
                oe(he)
            }
        }
        G.options = G.setOptions = function(se) {
            return T(G.defaults, se),
            y(G.defaults),
            G
        }
        ,
        G.getDefaults = L,
        G.defaults = ce.defaults,
        G.use = function() {
            for (var se = arguments.length, ee = new Array(se), J = 0; J < se; J++)
                ee[J] = arguments[J];
            var te = T.apply(void 0, [{}].concat(ee)), ne = G.defaults.extensions || {
                renderers: {},
                childTokens: {}
            }, le;
            ee.forEach(function(ie) {
                if (ie.extensions && (le = !0,
                ie.extensions.forEach(function(fe) {
                    if (!fe.name)
                        throw new Error("extension name required");
                    if (fe.renderer) {
                        var he = ne.renderers ? ne.renderers[fe.name] : null;
                        he ? ne.renderers[fe.name] = function() {
                            for (var ue = arguments.length, de = new Array(ue), $e = 0; $e < ue; $e++)
                                de[$e] = arguments[$e];
                            var pe = fe.renderer.apply(this, de);
                            return pe === !1 && (pe = he.apply(this, de)),
                            pe
                        }
                        : ne.renderers[fe.name] = fe.renderer
                    }
                    if (fe.tokenizer) {
                        if (!fe.level || fe.level !== "block" && fe.level !== "inline")
                            throw new Error("extension level must be 'block' or 'inline'");
                        ne[fe.level] ? ne[fe.level].unshift(fe.tokenizer) : ne[fe.level] = [fe.tokenizer],
                        fe.start && (fe.level === "block" ? ne.startBlock ? ne.startBlock.push(fe.start) : ne.startBlock = [fe.start] : fe.level === "inline" && (ne.startInline ? ne.startInline.push(fe.start) : ne.startInline = [fe.start]))
                    }
                    fe.childTokens && (ne.childTokens[fe.name] = fe.childTokens)
                })),
                ie.renderer && function() {
                    var fe = G.defaults.renderer || new q
                      , he = function($e) {
                        var pe = fe[$e];
                        fe[$e] = function() {
                            for (var ve = arguments.length, me = new Array(ve), we = 0; we < ve; we++)
                                me[we] = arguments[we];
                            var ye = ie.renderer[$e].apply(fe, me);
                            return ye === !1 && (ye = pe.apply(fe, me)),
                            ye
                        }
                    };
                    for (var ue in ie.renderer)
                        he(ue);
                    te.renderer = fe
                }(),
                ie.tokenizer && function() {
                    var fe = G.defaults.tokenizer || new N
                      , he = function($e) {
                        var pe = fe[$e];
                        fe[$e] = function() {
                            for (var ve = arguments.length, me = new Array(ve), we = 0; we < ve; we++)
                                me[we] = arguments[we];
                            var ye = ie.tokenizer[$e].apply(fe, me);
                            return ye === !1 && (ye = pe.apply(fe, me)),
                            ye
                        }
                    };
                    for (var ue in ie.tokenizer)
                        he(ue);
                    te.tokenizer = fe
                }(),
                ie.walkTokens) {
                    var oe = G.defaults.walkTokens;
                    te.walkTokens = function(fe) {
                        var he = [];
                        return he.push(ie.walkTokens.call(this, fe)),
                        oe && (he = he.concat(oe.call(this, fe))),
                        he
                    }
                }
                le && (te.extensions = ne),
                G.setOptions(te)
            })
        }
        ,
        G.walkTokens = function(se, ee) {
            for (var J = [], te = function() {
                var oe = le.value;
                switch (J = J.concat(ee.call(G, oe)),
                oe.type) {
                case "table":
                    {
                        for (var fe = I(oe.header), he; !(he = fe()).done; ) {
                            var ue = he.value;
                            J = J.concat(G.walkTokens(ue.tokens, ee))
                        }
                        for (var de = I(oe.rows), $e; !($e = de()).done; )
                            for (var pe = $e.value, ve = I(pe), me; !(me = ve()).done; ) {
                                var we = me.value;
                                J = J.concat(G.walkTokens(we.tokens, ee))
                            }
                        break
                    }
                case "list":
                    {
                        J = J.concat(G.walkTokens(oe.items, ee));
                        break
                    }
                default:
                    G.defaults.extensions && G.defaults.extensions.childTokens && G.defaults.extensions.childTokens[oe.type] ? G.defaults.extensions.childTokens[oe.type].forEach(function(ye) {
                        J = J.concat(G.walkTokens(oe[ye], ee))
                    }) : oe.tokens && (J = J.concat(G.walkTokens(oe.tokens, ee)))
                }
            }, ne = I(se), le; !(le = ne()).done; )
                te();
            return J
        }
        ,
        G.parseInline = function(se, ee) {
            if (typeof se > "u" || se === null)
                throw new Error("marked.parseInline(): input parameter is undefined or null");
            if (typeof se != "string")
                throw new Error("marked.parseInline(): input parameter is of type " + Object.prototype.toString.call(se) + ", string expected");
            ee = T({}, G.defaults, ee || {}),
            A(ee);
            try {
                var J = W.lexInline(se, ee);
                return ee.walkTokens && G.walkTokens(J, ee.walkTokens),
                K.parseInline(J, ee)
            } catch (te) {
                if (te.message += `
Please report this to https://github.com/markedjs/marked.`,
                ee.silent)
                    return "<p>An error occurred:</p><pre>" + i(te.message + "", !0) + "</pre>";
                throw te
            }
        }
        ,
        G.Parser = K,
        G.parser = K.parse,
        G.Renderer = q,
        G.TextRenderer = H,
        G.Lexer = W,
        G.lexer = W.lex,
        G.Tokenizer = N,
        G.Slugger = U,
        G.parse = G;
        var Z = G.options
          , x = G.setOptions
          , X = G.use
          , Y = G.walkTokens
          , Q = G.parseInline
          , _ = G
          , ae = K.parse
          , re = W.lex;
        ce.Lexer = W,
        ce.Parser = K,
        ce.Renderer = q,
        ce.Slugger = U,
        ce.TextRenderer = H,
        ce.Tokenizer = N,
        ce.getDefaults = L,
        ce.lexer = re,
        ce.marked = G,
        ce.options = Z,
        ce.parse = _,
        ce.parseInline = Q,
        ce.parser = ae,
        ce.setOptions = x,
        ce.use = X,
        ce.walkTokens = Y,
        Object.defineProperty(ce, "__esModule", {
            value: !0
        })
    }),
    define(ge[174], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.MarshalledId = void 0;
        var t;
        (function(n) {
            n[n.Uri = 1] = "Uri",
            n[n.Regexp = 2] = "Regexp",
            n[n.ScmResource = 3] = "ScmResource",
            n[n.ScmResourceGroup = 4] = "ScmResourceGroup",
            n[n.ScmProvider = 5] = "ScmProvider",
            n[n.CommentController = 6] = "CommentController",
            n[n.CommentThread = 7] = "CommentThread",
            n[n.CommentThreadInstance = 8] = "CommentThreadInstance",
            n[n.CommentThreadReply = 9] = "CommentThreadReply",
            n[n.CommentNode = 10] = "CommentNode",
            n[n.CommentThreadNode = 11] = "CommentThreadNode",
            n[n.TimelineActionContext = 12] = "TimelineActionContext",
            n[n.NotebookCellActionContext = 13] = "NotebookCellActionContext",
            n[n.NotebookActionContext = 14] = "NotebookActionContext",
            n[n.TerminalContext = 15] = "TerminalContext",
            n[n.TestItemContext = 16] = "TestItemContext",
            n[n.Date = 17] = "Date",
            n[n.TestMessageMenuArgs = 18] = "TestMessageMenuArgs"
        }
        )(t || (e.MarshalledId = t = {}))
    }),
    define(ge[1329], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Fk = t;
        function t(c) {
            const h = I(c);
            if (h && h.length > 0)
                return new Uint32Array(h)
        }
        let n = 0;
        const C = new Uint32Array(10);
        function I(c) {
            if (n = 0,
            L(c, f, E.InitialConsonant),
            n > 0 || (L(c, g, E.Vowel),
            n > 0) || (L(c, p, E.FinalConsonant),
            n > 0) || (L(c, i, E.CompatibilityJamo),
            n))
                return C.subarray(0, n);
            if (c >= 44032 && c <= 55203) {
                const h = c - 44032
                  , a = h % 588
                  , d = Math.floor(h / 588)
                  , u = Math.floor(a / 28)
                  , s = a % 28 - 1;
                if (d < f.length ? L(d, f, 0) : E.InitialConsonant + d - E.CompatibilityJamo < i.length && L(E.InitialConsonant + d, i, E.CompatibilityJamo),
                u < g.length ? L(u, g, 0) : E.Vowel + u - E.CompatibilityJamo < i.length && L(E.Vowel + u - E.CompatibilityJamo, i, E.CompatibilityJamo),
                s >= 0 && (s < p.length ? L(s, p, 0) : E.FinalConsonant + s - E.CompatibilityJamo < i.length && L(E.FinalConsonant + s - E.CompatibilityJamo, i, E.CompatibilityJamo)),
                n > 0)
                    return C.subarray(0, n)
            }
        }
        function L(c, h, a) {
            c >= a && c < a + h.length && y(h[c - a])
        }
        function y(c) {
            c !== $.NUL && (C[n++] = c & 255,
            c >> 8 && (C[n++] = c >> 8 & 255),
            c >> 16 && (C[n++] = c >> 16 & 255))
        }
        var E;
        (function(c) {
            c[c.InitialConsonant = 4352] = "InitialConsonant",
            c[c.Vowel = 4449] = "Vowel",
            c[c.FinalConsonant = 4520] = "FinalConsonant",
            c[c.CompatibilityJamo = 12593] = "CompatibilityJamo"
        }
        )(E || (E = {}));
        var $;
        (function(c) {
            c[c.NUL = 0] = "NUL",
            c[c.A = 65] = "A",
            c[c.B = 66] = "B",
            c[c.C = 67] = "C",
            c[c.D = 68] = "D",
            c[c.E = 69] = "E",
            c[c.F = 70] = "F",
            c[c.G = 71] = "G",
            c[c.H = 72] = "H",
            c[c.I = 73] = "I",
            c[c.J = 74] = "J",
            c[c.K = 75] = "K",
            c[c.L = 76] = "L",
            c[c.M = 77] = "M",
            c[c.N = 78] = "N",
            c[c.O = 79] = "O",
            c[c.P = 80] = "P",
            c[c.Q = 81] = "Q",
            c[c.R = 82] = "R",
            c[c.S = 83] = "S",
            c[c.T = 84] = "T",
            c[c.U = 85] = "U",
            c[c.V = 86] = "V",
            c[c.W = 87] = "W",
            c[c.X = 88] = "X",
            c[c.Y = 89] = "Y",
            c[c.Z = 90] = "Z",
            c[c.a = 97] = "a",
            c[c.b = 98] = "b",
            c[c.c = 99] = "c",
            c[c.d = 100] = "d",
            c[c.e = 101] = "e",
            c[c.f = 102] = "f",
            c[c.g = 103] = "g",
            c[c.h = 104] = "h",
            c[c.i = 105] = "i",
            c[c.j = 106] = "j",
            c[c.k = 107] = "k",
            c[c.l = 108] = "l",
            c[c.m = 109] = "m",
            c[c.n = 110] = "n",
            c[c.o = 111] = "o",
            c[c.p = 112] = "p",
            c[c.q = 113] = "q",
            c[c.r = 114] = "r",
            c[c.s = 115] = "s",
            c[c.t = 116] = "t",
            c[c.u = 117] = "u",
            c[c.v = 118] = "v",
            c[c.w = 119] = "w",
            c[c.x = 120] = "x",
            c[c.y = 121] = "y",
            c[c.z = 122] = "z"
        }
        )($ || ($ = {}));
        var v;
        (function(c) {
            c[c.fa = 24934] = "fa",
            c[c.fg = 26470] = "fg",
            c[c.fq = 29030] = "fq",
            c[c.fr = 29286] = "fr",
            c[c.ft = 29798] = "ft",
            c[c.fv = 30310] = "fv",
            c[c.fx = 30822] = "fx",
            c[c.hk = 27496] = "hk",
            c[c.hl = 27752] = "hl",
            c[c.ho = 28520] = "ho",
            c[c.ml = 27757] = "ml",
            c[c.nj = 27246] = "nj",
            c[c.nl = 27758] = "nl",
            c[c.np = 28782] = "np",
            c[c.qt = 29809] = "qt",
            c[c.rt = 29810] = "rt",
            c[c.sg = 26483] = "sg",
            c[c.sw = 30579] = "sw"
        }
        )(v || (v = {}));
        const f = new Uint8Array([$.r, $.R, $.s, $.e, $.E, $.f, $.a, $.q, $.Q, $.t, $.T, $.d, $.w, $.W, $.c, $.z, $.x, $.v, $.g])
          , g = new Uint16Array([$.k, $.o, $.i, $.O, $.j, $.p, $.u, $.P, $.h, v.hk, v.ho, v.hl, $.y, $.n, v.nj, v.np, v.nl, $.b, $.m, v.ml, $.l])
          , p = new Uint16Array([$.r, $.R, v.rt, $.s, v.sw, v.sg, $.e, $.f, v.fr, v.fa, v.fq, v.ft, v.fx, v.fv, v.fg, $.a, $.q, v.qt, $.t, $.T, $.d, $.w, $.c, $.z, $.x, $.v, $.g])
          , i = new Uint16Array([$.r, $.R, v.rt, $.s, v.sw, v.sg, $.e, $.E, $.f, v.fr, v.fa, v.fq, v.ft, v.fx, v.fv, v.fg, $.a, $.q, $.Q, v.qt, $.t, $.T, $.d, $.w, $.W, $.c, $.z, $.x, $.v, $.g, $.k, $.o, $.i, $.O, $.j, $.p, $.u, $.P, $.h, v.hk, v.ho, v.hl, $.y, $.n, v.nj, v.np, v.nl, $.b, $.m, v.ml, $.l])
    }),
    define(ge[1330], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$sW = void 0;
        class t {
            constructor(C, I=0, L=C.length, y=I - 1) {
                this.a = C,
                this.b = I,
                this.c = L,
                this.d = y
            }
            current() {
                return this.d === this.b - 1 || this.d === this.c ? null : this.a[this.d]
            }
            next() {
                return this.d = Math.min(this.d + 1, this.c),
                this.current()
            }
            previous() {
                return this.d = Math.max(this.d - 1, this.b - 1),
                this.current()
            }
            first() {
                return this.d = this.b,
                this.current()
            }
            last() {
                return this.d = this.c - 1,
                this.current()
            }
        }
        e.$sW = t
    }),
    define(ge[458], be([1, 0, 337, 1330]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$uW = e.$tW = void 0;
        class C {
            constructor(y=[], E=10) {
                this.h(y),
                this.b = E,
                this.d()
            }
            getHistory() {
                return this.j
            }
            add(y) {
                this.a.delete(y),
                this.a.add(y),
                this.d()
            }
            next() {
                return this.c.next()
            }
            previous() {
                return this.g() !== 0 ? this.c.previous() : null
            }
            current() {
                return this.c.current()
            }
            first() {
                return this.c.first()
            }
            last() {
                return this.c.last()
            }
            isFirst() {
                return this.g() === 0
            }
            isLast() {
                return this.g() >= this.j.length - 1
            }
            isNowhere() {
                return this.c.current() === null
            }
            has(y) {
                return this.a.has(y)
            }
            clear() {
                this.h([]),
                this.d()
            }
            d() {
                this.f();
                const y = this.j;
                this.c = new n.$sW(y,0,y.length,y.length)
            }
            f() {
                const y = this.j;
                y.length > this.b && this.h(y.slice(y.length - this.b))
            }
            g() {
                const y = this.c.current();
                return y ? this.j.indexOf(y) : -1
            }
            h(y) {
                this.a = new Set;
                for (const E of y)
                    this.a.add(E)
            }
            get j() {
                const y = [];
                return this.a.forEach(E=>y.push(E)),
                y
            }
        }
        e.$tW = C;
        class I {
            get size() {
                return this.f
            }
            constructor(y, E=10, $=v=>v) {
                if (this.g = E,
                this.h = $,
                y.length < 1)
                    throw new Error("not supported");
                this.f = 1,
                this.b = this.c = this.d = {
                    value: y[0],
                    previous: void 0,
                    next: void 0
                },
                this.a = new t.$g([y[0]],$);
                for (let v = 1; v < y.length; v++)
                    this.add(y[v])
            }
            add(y) {
                const E = {
                    value: y,
                    previous: this.c,
                    next: void 0
                };
                for (this.c.next = E,
                this.c = E,
                this.d = this.c,
                this.f++,
                this.a.has(y) ? this.j(y) : this.a.add(y); this.f > this.g; )
                    this.a.delete(this.b.value),
                    this.b = this.b.next,
                    this.b.previous = void 0,
                    this.f--
            }
            replaceLast(y) {
                if (this.h(this.c.value) === this.h(y))
                    return y;
                const E = this.c.value;
                return this.a.delete(E),
                this.c.value = y,
                this.a.has(y) ? this.j(y) : this.a.add(y),
                E
            }
            prepend(y) {
                if (this.f === this.g || this.a.has(y))
                    return;
                const E = {
                    value: y,
                    previous: void 0,
                    next: this.b
                };
                this.b.previous = E,
                this.b = E,
                this.f++,
                this.a.add(y)
            }
            isAtEnd() {
                return this.d === this.c
            }
            current() {
                return this.d.value
            }
            previous() {
                return this.d.previous && (this.d = this.d.previous),
                this.d.value
            }
            next() {
                return this.d.next && (this.d = this.d.next),
                this.d.value
            }
            has(y) {
                return this.a.has(y)
            }
            resetCursor() {
                return this.d = this.c,
                this.d.value
            }
            *[Symbol.iterator]() {
                let y = this.b;
                for (; y; )
                    yield y.value,
                    y = y.next
            }
            j(y) {
                let E = this.b;
                const $ = this.h(y);
                for (; E !== this.c; )
                    this.h(E.value) === $ && (E === this.b ? (this.b = this.b.next,
                    this.b.previous = void 0) : (E.previous.next = E.next,
                    E.next.previous = E.previous),
                    this.f--),
                    E = E.next
            }
        }
        e.$uW = I
    }),
    define(ge[167], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Pm = e.$Om = e.$Nm = void 0,
        e.$Lm = t,
        e.rot = n,
        e.$Qm = y;
        function t(E, $, v) {
            return Math.min(Math.max(E, $), v)
        }
        function n(E, $) {
            return ($ + E % $) % $
        }
        class C {
            constructor() {
                this.a = 0
            }
            getNext() {
                return this.a++
            }
        }
        e.$Nm = C;
        class I {
            constructor() {
                this.a = 1,
                this.b = 0
            }
            update($) {
                return this.b = this.b + ($ - this.b) / this.a,
                this.a += 1,
                this.b
            }
            get value() {
                return this.b
            }
        }
        e.$Om = I;
        class L {
            constructor($) {
                this.a = 0,
                this.b = 0,
                this.c = [],
                this.d = 0,
                this.e = 0,
                this.c = new Array($),
                this.c.fill(0, 0, $)
            }
            update($) {
                const v = this.c[this.d];
                return this.c[this.d] = $,
                this.d = (this.d + 1) % this.c.length,
                this.e -= v,
                this.e += $,
                this.a < this.c.length && (this.a += 1),
                this.b = this.e / this.a,
                this.b
            }
            get value() {
                return this.b
            }
        }
        e.$Pm = L;
        function y(E, $, v, f, g, p, i, c) {
            const h = i - v
              , a = c - f
              , d = g - v
              , u = p - f
              , s = E - v
              , r = $ - f
              , l = h * h + a * a
              , o = h * d + a * u
              , b = h * s + a * r
              , m = d * d + u * u
              , w = d * s + u * r
              , S = 1 / (l * m - o * o)
              , T = (m * b - o * w) * S
              , D = (l * w - o * b) * S;
            return T >= 0 && D >= 0 && T + D < 1
        }
    }),
    define(ge[459], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ad = void 0,
        e.$bd = I,
        e.$cd = g;
        class t {
            constructor(i, c, h) {
                this.owner = i,
                this.debugNameSource = c,
                this.referenceFn = h
            }
            getDebugName(i) {
                return I(i, this)
            }
        }
        e.$ad = t;
        const n = new Map
          , C = new WeakMap;
        function I(p, i) {
            const c = C.get(p);
            if (c)
                return c;
            const h = L(p, i);
            if (h) {
                let a = n.get(h) ?? 0;
                a++,
                n.set(h, a);
                const d = a === 1 ? h : `${h}#${a}`;
                return C.set(p, d),
                d
            }
        }
        function L(p, i) {
            const c = C.get(p);
            if (c)
                return c;
            const h = i.owner ? v(i.owner) + "." : "";
            let a;
            const d = i.debugNameSource;
            if (d !== void 0)
                if (typeof d == "function") {
                    if (a = d(),
                    a !== void 0)
                        return h + a
                } else
                    return h + d;
            const u = i.referenceFn;
            if (u !== void 0 && (a = g(u),
            a !== void 0))
                return h + a;
            if (i.owner !== void 0) {
                const s = y(i.owner, p);
                if (s !== void 0)
                    return h + s
            }
        }
        function y(p, i) {
            for (const c in p)
                if (p[c] === i)
                    return c
        }
        const E = new Map
          , $ = new WeakMap;
        function v(p) {
            const i = $.get(p);
            if (i)
                return i;
            const c = f(p);
            let h = E.get(c) ?? 0;
            h++,
            E.set(c, h);
            const a = h === 1 ? c : `${c}#${h}`;
            return $.set(p, a),
            a
        }
        function f(p) {
            const i = p.constructor;
            return i ? i.name : "Object"
        }
        function g(p) {
            const i = p.toString()
              , h = /\/\*\*\s*@description\s*([^*]*)\*\//.exec(i);
            return (h ? h[1] : void 0)?.trim()
        }
    }),
    define(ge[514], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Md = void 0,
        e.$Kd = n,
        e.$Ld = C;
        let t;
        function n(c) {
            t = c
        }
        function C() {
            return t
        }
        class I {
            constructor() {
                this.a = 0,
                this.d = new WeakMap
            }
            b(h) {
                return L([y(p("|  ", this.a)), h])
            }
            c(h) {
                return h.hadValue ? h.didChange ? [y(" "), $(v(h.oldValue, 70), {
                    color: "red",
                    strikeThrough: !0
                }), y(" "), $(v(h.newValue, 60), {
                    color: "green"
                })] : [y(" (unchanged)")] : [y(" "), $(v(h.newValue, 60), {
                    color: "green"
                }), y(" (initial)")]
            }
            handleObservableChanged(h, a) {
                console.log(...this.b([E("observable value changed"), $(h.debugName, {
                    color: "BlueViolet"
                }), ...this.c(a)]))
            }
            formatChanges(h) {
                if (h.size !== 0)
                    return $(" (changed deps: " + [...h].map(a=>a.debugName).join(", ") + ")", {
                        color: "gray"
                    })
            }
            handleDerivedCreated(h) {
                const a = h.handleChange;
                this.d.set(h, new Set),
                h.handleChange = (d,u)=>(this.d.get(h).add(d),
                a.apply(h, [d, u]))
            }
            handleDerivedRecomputed(h, a) {
                const d = this.d.get(h);
                console.log(...this.b([E("derived recomputed"), $(h.debugName, {
                    color: "BlueViolet"
                }), ...this.c(a), this.formatChanges(d), {
                    data: [{
                        fn: h._debugNameData.referenceFn ?? h._computeFn
                    }]
                }])),
                d.clear()
            }
            handleFromEventObservableTriggered(h, a) {
                console.log(...this.b([E("observable from event triggered"), $(h.debugName, {
                    color: "BlueViolet"
                }), ...this.c(a), {
                    data: [{
                        fn: h._getValue
                    }]
                }]))
            }
            handleAutorunCreated(h) {
                const a = h.handleChange;
                this.d.set(h, new Set),
                h.handleChange = (d,u)=>(this.d.get(h).add(d),
                a.apply(h, [d, u]))
            }
            handleAutorunTriggered(h) {
                const a = this.d.get(h);
                console.log(...this.b([E("autorun"), $(h.debugName, {
                    color: "BlueViolet"
                }), this.formatChanges(a), {
                    data: [{
                        fn: h._debugNameData.referenceFn ?? h._runFn
                    }]
                }])),
                a.clear(),
                this.a++
            }
            handleAutorunFinished(h) {
                this.a--
            }
            handleBeginTransaction(h) {
                let a = h.getDebugName();
                a === void 0 && (a = ""),
                console.log(...this.b([E("transaction"), $(a, {
                    color: "BlueViolet"
                }), {
                    data: [{
                        fn: h._fn
                    }]
                }])),
                this.a++
            }
            handleEndTransaction() {
                this.a--
            }
        }
        e.$Md = I;
        function L(c) {
            const h = new Array
              , a = [];
            let d = "";
            function u(r) {
                if ("length"in r)
                    for (const l of r)
                        l && u(l);
                else
                    "text"in r ? (d += `%c${r.text}`,
                    h.push(r.style),
                    r.data && a.push(...r.data)) : "data"in r && a.push(...r.data)
            }
            u(c);
            const s = [d, ...h];
            return s.push(...a),
            s
        }
        function y(c) {
            return $(c, {
                color: "black"
            })
        }
        function E(c) {
            return $(i(`${c}: `, 10), {
                color: "black",
                bold: !0
            })
        }
        function $(c, h={
            color: "black"
        }) {
            function a(u) {
                return Object.entries(u).reduce((s,[r,l])=>`${s}${r}:${l};`, "")
            }
            const d = {
                color: h.color
            };
            return h.strikeThrough && (d["text-decoration"] = "line-through"),
            h.bold && (d["font-weight"] = "bold"),
            {
                text: c,
                style: a(d)
            }
        }
        function v(c, h) {
            switch (typeof c) {
            case "number":
                return "" + c;
            case "string":
                return c.length + 2 <= h ? `"${c}"` : `"${c.substr(0, h - 7)}"+...`;
            case "boolean":
                return c ? "true" : "false";
            case "undefined":
                return "undefined";
            case "object":
                return c === null ? "null" : Array.isArray(c) ? f(c, h) : g(c, h);
            case "symbol":
                return c.toString();
            case "function":
                return `[[Function${c.name ? " " + c.name : ""}]]`;
            default:
                return "" + c
            }
        }
        function f(c, h) {
            let a = "[ "
              , d = !0;
            for (const u of c) {
                if (d || (a += ", "),
                a.length - 5 > h) {
                    a += "...";
                    break
                }
                d = !1,
                a += `${v(u, h - a.length)}`
            }
            return a += " ]",
            a
        }
        function g(c, h) {
            let a = "{ "
              , d = !0;
            for (const [u,s] of Object.entries(c)) {
                if (d || (a += ", "),
                a.length - 5 > h) {
                    a += "...";
                    break
                }
                d = !1,
                a += `${u}: ${v(s, h - a.length)}`
            }
            return a += " }",
            a
        }
        function p(c, h) {
            let a = "";
            for (let d = 1; d <= h; d++)
                a += c;
            return a
        }
        function i(c, h) {
            for (; c.length < h; )
                c += " ";
            return c
        }
    }),
    define(ge[740], be([1, 0, 180, 2, 459, 514]), function(ce, e, t, n, C, I) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$pd = void 0,
        e.$jd = L,
        e.$kd = y,
        e.$ld = E,
        e.$md = $,
        e.$nd = v,
        e.$od = f;
        function L(i) {
            return new p(new C.$ad(void 0,void 0,i),i,void 0,void 0)
        }
        function y(i, c) {
            return new p(new C.$ad(i.owner,i.debugName,i.debugReferenceFn ?? c),c,void 0,void 0)
        }
        function E(i, c) {
            return new p(new C.$ad(i.owner,i.debugName,i.debugReferenceFn ?? c),c,i.createEmptyChangeSummary,i.handleChange)
        }
        function $(i, c) {
            const h = new n.$Tc
              , a = E({
                owner: i.owner,
                debugName: i.debugName,
                debugReferenceFn: i.debugReferenceFn ?? c,
                createEmptyChangeSummary: i.createEmptyChangeSummary,
                handleChange: i.handleChange
            }, (d,u)=>{
                h.clear(),
                c(d, u, h)
            }
            );
            return (0,
            n.$Sc)(()=>{
                a.dispose(),
                h.dispose()
            }
            )
        }
        function v(i) {
            const c = new n.$Tc
              , h = y({
                owner: void 0,
                debugName: void 0,
                debugReferenceFn: i
            }, a=>{
                c.clear(),
                i(a, c)
            }
            );
            return (0,
            n.$Sc)(()=>{
                h.dispose(),
                c.dispose()
            }
            )
        }
        function f(i, c) {
            let h;
            return y({
                debugReferenceFn: c
            }, a=>{
                const d = i.read(a)
                  , u = h;
                h = d,
                c({
                    lastValue: u,
                    newValue: d
                })
            }
            )
        }
        var g;
        (function(i) {
            i[i.dependenciesMightHaveChanged = 1] = "dependenciesMightHaveChanged",
            i[i.stale = 2] = "stale",
            i[i.upToDate = 3] = "upToDate"
        }
        )(g || (g = {}));
        class p {
            get debugName() {
                return this._debugNameData.getDebugName(this) ?? "(anonymous)"
            }
            constructor(c, h, a, d) {
                this._debugNameData = c,
                this._runFn = h,
                this.h = a,
                this.i = d,
                this.a = g.stale,
                this.b = 0,
                this.c = !1,
                this.e = new Set,
                this.f = new Set,
                this.g = this.h?.(),
                (0,
                I.$Ld)()?.handleAutorunCreated(this),
                this.j(),
                (0,
                n.$Lc)(this)
            }
            dispose() {
                this.c = !0;
                for (const c of this.e)
                    c.removeObserver(this);
                this.e.clear(),
                (0,
                n.$Mc)(this)
            }
            j() {
                if (this.a === g.upToDate)
                    return;
                const c = this.f;
                this.f = this.e,
                this.e = c,
                this.a = g.upToDate;
                const h = this.c;
                try {
                    if (!h) {
                        (0,
                        I.$Ld)()?.handleAutorunTriggered(this);
                        const a = this.g;
                        this.g = this.h?.(),
                        this._runFn(this, a)
                    }
                } finally {
                    h || (0,
                    I.$Ld)()?.handleAutorunFinished(this);
                    for (const a of this.f)
                        a.removeObserver(this);
                    this.f.clear()
                }
            }
            toString() {
                return `Autorun<${this.debugName}>`
            }
            beginUpdate() {
                this.a === g.upToDate && (this.a = g.dependenciesMightHaveChanged),
                this.b++
            }
            endUpdate() {
                if (this.b === 1)
                    do {
                        if (this.a === g.dependenciesMightHaveChanged) {
                            this.a = g.upToDate;
                            for (const c of this.e)
                                if (c.reportChanges(),
                                this.a === g.stale)
                                    break
                        }
                        this.j()
                    } while (this.a !== g.upToDate);
                this.b--,
                (0,
                t.$hd)(()=>this.b >= 0)
            }
            handlePossibleChange(c) {
                this.a === g.upToDate && this.e.has(c) && !this.f.has(c) && (this.a = g.dependenciesMightHaveChanged)
            }
            handleChange(c, h) {
                this.e.has(c) && !this.f.has(c) && (!this.i || this.i({
                    changedObservable: c,
                    change: h,
                    didChange: d=>d === c
                }, this.g)) && (this.a = g.stale)
            }
            readObservable(c) {
                if (this.c)
                    return c.get();
                c.addObserver(this);
                const h = c.get();
                return this.e.add(c),
                this.f.delete(c),
                h
            }
        }
        e.$pd = p,
        function(i) {
            i.Observer = p
        }(L || (e.$jd = L = {}))
    }),
    define(ge[300], be([1, 0, 320, 459, 514]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$9d = e.$7d = e.$5d = e.$Zd = e.$Yd = void 0,
        e.$Vd = L,
        e.$Wd = E,
        e.$Xd = v,
        e.$1d = p,
        e.$2d = c,
        e.$3d = h,
        e.$4d = a,
        e.$6d = u,
        e.$8d = r;
        let I;
        function L(o) {
            I = o
        }
        let y;
        function E(o) {
            y = o
        }
        let $;
        function v(o) {
            $ = o
        }
        class f {
            get TChange() {
                return null
            }
            reportChanges() {
                this.get()
            }
            read(b) {
                return b ? b.readObservable(this) : this.get()
            }
            map(b, m) {
                const w = m === void 0 ? void 0 : b
                  , S = m === void 0 ? b : m;
                return $({
                    owner: w,
                    debugName: ()=>{
                        const T = (0,
                        n.$cd)(S);
                        if (T !== void 0)
                            return T;
                        const k = /^\s*\(?\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\s*\)?\s*=>\s*\1(?:\??)\.([a-zA-Z_$][a-zA-Z_$0-9]*)\s*$/.exec(S.toString());
                        if (k)
                            return `${this.debugName}.${k[2]}`;
                        if (!w)
                            return `${this.debugName} (mapped)`
                    }
                    ,
                    debugReferenceFn: S
                }, T=>S(this.read(T), T))
            }
            flatten() {
                return $({
                    owner: void 0,
                    debugName: ()=>`${this.debugName} (flattened)`
                }, b=>this.read(b).read(b))
            }
            recomputeInitiallyAndOnChange(b, m) {
                return b.add(I(this, m)),
                this
            }
            keepObserved(b) {
                return b.add(y(this)),
                this
            }
            get a() {
                return this.get()
            }
        }
        e.$Yd = f;
        class g extends f {
            constructor() {
                super(...arguments),
                this.b = new Set
            }
            addObserver(b) {
                const m = this.b.size;
                this.b.add(b),
                m === 0 && this.c()
            }
            removeObserver(b) {
                this.b.delete(b) && this.b.size === 0 && this.f()
            }
            c() {}
            f() {}
        }
        e.$Zd = g;
        function p(o, b) {
            const m = new d(o,b);
            try {
                o(m)
            } finally {
                m.finish()
            }
        }
        let i;
        function c(o) {
            if (i)
                o(i);
            else {
                const b = new d(o,void 0);
                i = b;
                try {
                    o(b)
                } finally {
                    b.finish(),
                    i = void 0
                }
            }
        }
        async function h(o, b) {
            const m = new d(o,b);
            try {
                await o(m)
            } finally {
                m.finish()
            }
        }
        function a(o, b, m) {
            o ? b(o) : p(b, m)
        }
        class d {
            constructor(b, m) {
                this._fn = b,
                this.b = m,
                this.a = [],
                (0,
                C.$Ld)()?.handleBeginTransaction(this)
            }
            getDebugName() {
                return this.b ? this.b() : (0,
                n.$cd)(this._fn)
            }
            updateObserver(b, m) {
                this.a.push({
                    observer: b,
                    observable: m
                }),
                b.beginUpdate(m)
            }
            finish() {
                const b = this.a;
                for (let m = 0; m < b.length; m++) {
                    const {observer: w, observable: S} = b[m];
                    w.endUpdate(S)
                }
                this.a = null,
                (0,
                C.$Ld)()?.handleEndTransaction()
            }
        }
        e.$5d = d;
        function u(o, b) {
            let m;
            return typeof o == "string" ? m = new n.$ad(void 0,o,void 0) : m = new n.$ad(o,void 0,void 0),
            new s(m,b,t.$6c)
        }
        class s extends g {
            get debugName() {
                return this.e.getDebugName(this) ?? "ObservableValue"
            }
            constructor(b, m, w) {
                super(),
                this.e = b,
                this.g = w,
                this.d = m
            }
            get() {
                return this.d
            }
            set(b, m, w) {
                if (w === void 0 && this.g(this.d, b))
                    return;
                let S;
                m || (m = S = new d(()=>{}
                ,()=>`Setting ${this.debugName}`));
                try {
                    const T = this.d;
                    this.h(b),
                    (0,
                    C.$Ld)()?.handleObservableChanged(this, {
                        oldValue: T,
                        newValue: b,
                        change: w,
                        didChange: !0,
                        hadValue: !0
                    });
                    for (const D of this.b)
                        m.updateObserver(D, this),
                        D.handleChange(this, w)
                } finally {
                    S && S.finish()
                }
            }
            toString() {
                return `${this.debugName}: ${this.d}`
            }
            h(b) {
                this.d = b
            }
        }
        e.$7d = s;
        function r(o, b) {
            let m;
            return typeof o == "string" ? m = new n.$ad(void 0,o,void 0) : m = new n.$ad(o,void 0,void 0),
            new l(m,b,t.$6c)
        }
        class l extends s {
            h(b) {
                this.d !== b && (this.d && this.d.dispose(),
                this.d = b)
            }
            dispose() {
                this.d?.dispose()
            }
        }
        e.$9d = l
    }),
    define(ge[248], be([1, 0, 180, 320, 2, 300, 459, 514]), function(ce, e, t, n, C, I, L, y) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Ud = e.$Td = void 0,
        e.$Nd = E,
        e.$Od = $,
        e.$Pd = v,
        e.$Qd = f,
        e.$Rd = g,
        e.$Sd = p;
        function E(a, d) {
            return d !== void 0 ? new c(new L.$ad(a,void 0,d),d,void 0,void 0,void 0,n.$6c) : new c(new L.$ad(void 0,void 0,a),a,void 0,void 0,void 0,n.$6c)
        }
        function $(a, d, u) {
            return new h(new L.$ad(a,void 0,d),d,void 0,void 0,void 0,n.$6c,u)
        }
        function v(a, d) {
            return new c(new L.$ad(a.owner,a.debugName,a.debugReferenceFn),d,void 0,void 0,a.onLastObserverRemoved,a.equalsFn ?? n.$6c)
        }
        (0,
        I.$Xd)(v);
        function f(a, d) {
            return new c(new L.$ad(a.owner,a.debugName,void 0),d,a.createEmptyChangeSummary,a.handleChange,void 0,a.equalityComparer ?? n.$6c)
        }
        function g(a, d) {
            let u, s;
            d === void 0 ? (u = a,
            s = void 0) : (s = a,
            u = d);
            const r = new C.$Tc;
            return new c(new L.$ad(s,void 0,u),l=>(r.clear(),
            u(l, r)),void 0,void 0,()=>r.dispose(),n.$6c)
        }
        function p(a, d) {
            let u, s;
            d === void 0 ? (u = a,
            s = void 0) : (s = a,
            u = d);
            let r;
            return new c(new L.$ad(s,void 0,u),l=>{
                r ? r.clear() : r = new C.$Tc;
                const o = u(l);
                return o && r.add(o),
                o
            }
            ,void 0,void 0,()=>{
                r && (r.dispose(),
                r = void 0)
            }
            ,n.$6c)
        }
        var i;
        (function(a) {
            a[a.initial = 0] = "initial",
            a[a.dependenciesMightHaveChanged = 1] = "dependenciesMightHaveChanged",
            a[a.stale = 2] = "stale",
            a[a.upToDate = 3] = "upToDate"
        }
        )(i || (i = {}));
        class c extends I.$Zd {
            get debugName() {
                return this._debugNameData.getDebugName(this) ?? "(anonymous)"
            }
            constructor(d, u, s, r, l=void 0, o) {
                super(),
                this._debugNameData = d,
                this._computeFn = u,
                this.m = s,
                this.n = r,
                this.p = l,
                this.q = o,
                this.e = i.initial,
                this.g = void 0,
                this.h = 0,
                this.j = new Set,
                this.k = new Set,
                this.l = void 0,
                this.l = this.m?.(),
                (0,
                y.$Ld)()?.handleDerivedCreated(this)
            }
            f() {
                this.e = i.initial,
                this.g = void 0;
                for (const d of this.j)
                    d.removeObserver(this);
                this.j.clear(),
                this.p?.()
            }
            get() {
                if (this.b.size === 0) {
                    const d = this._computeFn(this, this.m?.());
                    return this.f(),
                    d
                } else {
                    do {
                        if (this.e === i.dependenciesMightHaveChanged) {
                            for (const d of this.j)
                                if (d.reportChanges(),
                                this.e === i.stale)
                                    break
                        }
                        this.e === i.dependenciesMightHaveChanged && (this.e = i.upToDate),
                        this.t()
                    } while (this.e !== i.upToDate);
                    return this.g
                }
            }
            t() {
                if (this.e === i.upToDate)
                    return;
                const d = this.k;
                this.k = this.j,
                this.j = d;
                const u = this.e !== i.initial
                  , s = this.g;
                this.e = i.upToDate;
                const r = this.l;
                this.l = this.m?.();
                try {
                    this.g = this._computeFn(this, r)
                } finally {
                    for (const o of this.k)
                        o.removeObserver(this);
                    this.k.clear()
                }
                const l = u && !this.q(s, this.g);
                if ((0,
                y.$Ld)()?.handleDerivedRecomputed(this, {
                    oldValue: s,
                    newValue: this.g,
                    change: void 0,
                    didChange: l,
                    hadValue: u
                }),
                l)
                    for (const o of this.b)
                        o.handleChange(this, void 0)
            }
            toString() {
                return `LazyDerived<${this.debugName}>`
            }
            beginUpdate(d) {
                this.h++;
                const u = this.h === 1;
                if (this.e === i.upToDate && (this.e = i.dependenciesMightHaveChanged,
                !u))
                    for (const s of this.b)
                        s.handlePossibleChange(this);
                if (u)
                    for (const s of this.b)
                        s.beginUpdate(this)
            }
            endUpdate(d) {
                if (this.h--,
                this.h === 0) {
                    const u = [...this.b];
                    for (const s of u)
                        s.endUpdate(this)
                }
                (0,
                t.$hd)(()=>this.h >= 0)
            }
            handlePossibleChange(d) {
                if (this.e === i.upToDate && this.j.has(d) && !this.k.has(d)) {
                    this.e = i.dependenciesMightHaveChanged;
                    for (const u of this.b)
                        u.handlePossibleChange(this)
                }
            }
            handleChange(d, u) {
                if (this.j.has(d) && !this.k.has(d)) {
                    const s = this.n ? this.n({
                        changedObservable: d,
                        change: u,
                        didChange: l=>l === d
                    }, this.l) : !0
                      , r = this.e === i.upToDate;
                    if (s && (this.e === i.dependenciesMightHaveChanged || r) && (this.e = i.stale,
                    r))
                        for (const l of this.b)
                            l.handlePossibleChange(this)
                }
            }
            readObservable(d) {
                d.addObserver(this);
                const u = d.get();
                return this.j.add(d),
                this.k.delete(d),
                u
            }
            addObserver(d) {
                const u = !this.b.has(d) && this.h > 0;
                super.addObserver(d),
                u && d.beginUpdate(this)
            }
            removeObserver(d) {
                const u = this.b.has(d) && this.h > 0;
                super.removeObserver(d),
                u && d.endUpdate(this)
            }
        }
        e.$Td = c;
        class h extends c {
            constructor(d, u, s, r, l=void 0, o, b) {
                super(d, u, s, r, l, o),
                this.set = b
            }
        }
        e.$Ud = h
    }),
    define(ge[1331], be([1, 0, 300]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$de = void 0;
        class n extends t.$Zd {
            get debugName() {
                return this.h.getDebugName(this) ?? "LazyObservableValue"
            }
            constructor(I, L, y) {
                super(),
                this.h = I,
                this.j = y,
                this.e = !0,
                this.g = [],
                this.l = 0,
                this.d = L
            }
            get() {
                return this.k(),
                this.d
            }
            k() {
                if (!this.e)
                    if (this.e = !0,
                    this.g.length > 0) {
                        for (const I of this.b)
                            for (const L of this.g)
                                I.handleChange(this, L);
                        this.g.length = 0
                    } else
                        for (const I of this.b)
                            I.handleChange(this, void 0)
            }
            m() {
                if (this.l++,
                this.l === 1)
                    for (const I of this.b)
                        I.beginUpdate(this)
            }
            n() {
                if (this.l--,
                this.l === 0) {
                    this.k();
                    const I = [...this.b];
                    for (const L of I)
                        L.endUpdate(this)
                }
            }
            addObserver(I) {
                const L = !this.b.has(I) && this.l > 0;
                super.addObserver(I),
                L && I.beginUpdate(this)
            }
            removeObserver(I) {
                const L = this.b.has(I) && this.l > 0;
                super.removeObserver(I),
                L && I.endUpdate(this)
            }
            set(I, L, y) {
                if (y === void 0 && this.j(this.d, I))
                    return;
                let E;
                L || (L = E = new t.$5d(()=>{}
                ,()=>`Setting ${this.debugName}`));
                try {
                    if (this.e = !1,
                    this.o(I),
                    y !== void 0 && this.g.push(y),
                    L.updateObserver({
                        beginUpdate: ()=>this.m(),
                        endUpdate: ()=>this.n(),
                        handleChange: ($,v)=>{}
                        ,
                        handlePossibleChange: $=>{}
                    }, this),
                    this.l > 1)
                        for (const $ of this.b)
                            $.handlePossibleChange(this)
                } finally {
                    E && E.finish()
                }
            }
            toString() {
                return `${this.debugName}: ${this.d}`
            }
            o(I) {
                this.d = I
            }
        }
        e.$de = n
    }),
    define(ge[1332], be([1, 0, 320, 300, 459, 1331]), function(ce, e, t, n, C, I) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ee = L;
        function L(y, E) {
            return y.lazy ? new I.$de(new C.$ad(y.owner,y.debugName,void 0),E,y.equalsFn ?? t.$6c) : new n.$7d(new C.$ad(y.owner,y.debugName,void 0),E,y.equalsFn ?? t.$6c)
        }
    }),
    define(ge[932], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$LI = e.$KI = e.ValidationState = void 0;
        var t;
        (function(I) {
            I[I.OK = 0] = "OK",
            I[I.Info = 1] = "Info",
            I[I.Warning = 2] = "Warning",
            I[I.Error = 3] = "Error",
            I[I.Fatal = 4] = "Fatal"
        }
        )(t || (e.ValidationState = t = {}));
        class n {
            constructor() {
                this.a = t.OK
            }
            get state() {
                return this.a
            }
            set state(L) {
                L > this.a && (this.a = L)
            }
            isOK() {
                return this.a === t.OK
            }
            isFatal() {
                return this.a === t.Fatal
            }
        }
        e.$KI = n;
        class C {
            constructor(L) {
                this.a = L
            }
            reset() {
                this.a.status.state = t.OK
            }
            get problemReporter() {
                return this.a
            }
            info(L) {
                this.a.info(L)
            }
            warn(L) {
                this.a.warn(L)
            }
            error(L) {
                this.a.error(L)
            }
            fatal(L) {
                this.a.fatal(L)
            }
        }
        e.$LI = C
    }),
    function() {
        function ce(C) {
            const I = [];
            typeof C == "number" && I.push("code/timeOrigin", C);
            function L(E) {
                I.push(E, Date.now())
            }
            function y() {
                const E = [];
                for (let $ = 0; $ < I.length; $ += 2)
                    E.push({
                        name: I[$],
                        startTime: I[$ + 1]
                    });
                return E
            }
            return {
                mark: L,
                getMarks: y
            }
        }
        function e() {
            if (typeof performance == "object" && typeof performance.mark == "function" && !performance.nodeTiming)
                return typeof performance.timeOrigin != "number" && !performance.timing ? ce() : {
                    mark(C) {
                        performance.mark(C)
                    },
                    getMarks() {
                        let C = performance.timeOrigin;
                        typeof C != "number" && (C = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart);
                        const I = [{
                            name: "code/timeOrigin",
                            startTime: Math.round(C)
                        }];
                        for (const L of performance.getEntriesByType("mark"))
                            I.push({
                                name: L.name,
                                startTime: Math.round(C + L.startTime)
                            });
                        return I
                    }
                };
            if (typeof process == "object") {
                const C = performance?.timeOrigin ?? Math.round((require.__$__nodeRequire || require)("perf_hooks").performance.timeOrigin);
                return ce(C)
            } else
                return console.trace("perf-util loaded in UNKNOWN environment"),
                ce()
        }
        function t(C) {
            return C.MonacoPerformanceMarks || (C.MonacoPerformanceMarks = e()),
            C.MonacoPerformanceMarks
        }
        var n;
        typeof global == "object" ? n = global : typeof self == "object" ? n = self : n = {},
        typeof define == "function" ? define("vs/base/common/performance", [], function() {
            return t(n)
        }) : typeof module == "object" && typeof module.exports == "object" ? module.exports = t(n) : (console.trace("perf-util defined in UNKNOWN context (neither requirejs or commonjs)"),
        n.perf = t(n))
    }(),
    define(ge[12], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$J = e.$I = e.$H = e.$G = e.$F = e.OS = e.OperatingSystem = e.$C = e.$B = e.$A = e.$z = e.$y = e.Language = e.$x = e.$w = e.$v = e.$u = e.$t = e.$s = e.$r = e.$q = e.$p = e.$o = e.$n = e.$m = e.$l = e.$k = e.$j = e.Platform = e.$h = void 0,
        e.$i = l,
        e.$E = T,
        e.$K = D,
        e.$h = "en";
        let t = !1, n = !1, C = !1, I = !1, L = !1, y = !1, E = !1, $ = !1, v = !1, f = !1, g, p = e.$h, i = e.$h, c, h;
        const a = globalThis;
        let d;
        typeof a.vscode < "u" && typeof a.vscode.process < "u" ? d = a.vscode.process : typeof process < "u" && typeof process?.versions?.node == "string" && (d = process);
        const u = typeof d?.versions?.electron == "string"
          , s = u && d?.type === "renderer";
        if (typeof d == "object") {
            t = d.platform === "win32",
            n = d.platform === "darwin",
            C = d.platform === "linux",
            I = C && !!d.env.SNAP && !!d.env.SNAP_REVISION,
            E = u,
            v = !!d.env.CI || !!d.env.BUILD_ARTIFACTSTAGINGDIRECTORY,
            g = e.$h,
            p = e.$h;
            const k = d.env.VSCODE_NLS_CONFIG;
            if (k)
                try {
                    const P = JSON.parse(k);
                    g = P.userLocale,
                    i = P.osLocale,
                    p = P.resolvedLanguage || e.$h,
                    c = P.languagePack?.translationsConfigFile
                } catch {}
            L = !0
        } else
            typeof navigator == "object" && !s ? (h = navigator.userAgent,
            t = h.indexOf("Windows") >= 0,
            n = h.indexOf("Macintosh") >= 0,
            $ = (h.indexOf("Macintosh") >= 0 || h.indexOf("iPad") >= 0 || h.indexOf("iPhone") >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0,
            C = h.indexOf("Linux") >= 0,
            f = h?.indexOf("Mobi") >= 0,
            y = !0,
            p = globalThis._VSCODE_NLS_LANGUAGE || e.$h,
            g = navigator.language.toLowerCase(),
            i = g) : console.error("Unable to resolve platform.");
        var r;
        (function(k) {
            k[k.Web = 0] = "Web",
            k[k.Mac = 1] = "Mac",
            k[k.Linux = 2] = "Linux",
            k[k.Windows = 3] = "Windows"
        }
        )(r || (e.Platform = r = {}));
        function l(k) {
            switch (k) {
            case r.Web:
                return "Web";
            case r.Mac:
                return "Mac";
            case r.Linux:
                return "Linux";
            case r.Windows:
                return "Windows"
            }
        }
        let o = r.Web;
        n ? o = r.Mac : t ? o = r.Windows : C && (o = r.Linux),
        e.$j = t,
        e.$k = n,
        e.$l = C,
        e.$m = I,
        e.$n = L,
        e.$o = E,
        e.$p = y,
        e.$q = y && typeof a.importScripts == "function",
        e.$r = e.$q ? a.origin : void 0,
        e.$s = $,
        e.$t = f,
        e.$u = v,
        e.$v = o,
        e.$w = h,
        e.$x = p;
        var b;
        (function(k) {
            function P() {
                return e.$x
            }
            k.value = P;
            function A() {
                return e.$x.length === 2 ? e.$x === "en" : e.$x.length >= 3 ? e.$x[0] === "e" && e.$x[1] === "n" && e.$x[2] === "-" : !1
            }
            k.isDefaultVariant = A;
            function M() {
                return e.$x === "en"
            }
            k.isDefault = M
        }
        )(b || (e.Language = b = {})),
        e.$y = g,
        e.$z = i,
        e.$A = c,
        e.$B = typeof a.postMessage == "function" && !a.importScripts,
        e.$C = (()=>{
            if (e.$B) {
                const k = [];
                a.addEventListener("message", A=>{
                    if (A.data && A.data.vscodeScheduleAsyncWork)
                        for (let M = 0, O = k.length; M < O; M++) {
                            const R = k[M];
                            if (R.id === A.data.vscodeScheduleAsyncWork) {
                                k.splice(M, 1),
                                R.callback();
                                return
                            }
                        }
                }
                );
                let P = 0;
                return A=>{
                    const M = ++P;
                    k.push({
                        id: M,
                        callback: A
                    }),
                    a.postMessage({
                        vscodeScheduleAsyncWork: M
                    }, "*")
                }
            }
            return k=>setTimeout(k)
        }
        )();
        var m;
        (function(k) {
            k[k.Windows = 1] = "Windows",
            k[k.Macintosh = 2] = "Macintosh",
            k[k.Linux = 3] = "Linux"
        }
        )(m || (e.OperatingSystem = m = {})),
        e.OS = n || $ ? m.Macintosh : t ? m.Windows : m.Linux;
        let w = !0
          , S = !1;
        function T() {
            if (!S) {
                S = !0;
                const k = new Uint8Array(2);
                k[0] = 1,
                k[1] = 2,
                w = new Uint16Array(k.buffer)[0] === 513
            }
            return w
        }
        e.$F = !!(e.$w && e.$w.indexOf("Chrome") >= 0),
        e.$G = !!(e.$w && e.$w.indexOf("Firefox") >= 0),
        e.$H = !!(!e.$F && e.$w && e.$w.indexOf("Safari") >= 0),
        e.$I = !!(e.$w && e.$w.indexOf("Edg/") >= 0),
        e.$J = !!(e.$w && e.$w.indexOf("Android") >= 0);
        function D(k) {
            return parseFloat(k) >= 20
        }
    }),
    define(ge[460], be([1, 0, 12]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$VV = void 0,
        e.$VV = t.$j ? '"Segoe WPC", "Segoe UI", sans-serif' : t.$k ? "-apple-system, BlinkMacSystemFont, sans-serif" : 'system-ui, "Ubuntu", "Droid Sans", sans-serif'
    }),
    define(ge[322], be([1, 0, 14, 17, 12]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$6r = e.$5r = e.$4r = e.$3r = e.$2r = void 0,
        e.$Zr = L,
        e.$1r = y;
        var I;
        (function(p) {
            p[p.CtrlCmd = 2048] = "CtrlCmd",
            p[p.Shift = 1024] = "Shift",
            p[p.Alt = 512] = "Alt",
            p[p.WinCtrl = 256] = "WinCtrl",
            p[p.KeyCode = 255] = "KeyCode"
        }
        )(I || (I = {}));
        function L(p, i) {
            if (typeof p == "number") {
                if (p === 0)
                    return null;
                const c = (p & 65535) >>> 0
                  , h = (p & 4294901760) >>> 16;
                return h !== 0 ? new v([y(c, i), y(h, i)]) : new v([y(c, i)])
            } else {
                const c = [];
                for (let h = 0; h < p.length; h++)
                    c.push(y(p[h], i));
                return new v(c)
            }
        }
        function y(p, i) {
            const c = !!(p & I.CtrlCmd)
              , h = !!(p & I.WinCtrl)
              , a = i === C.OperatingSystem.Macintosh ? h : c
              , d = !!(p & I.Shift)
              , u = !!(p & I.Alt)
              , s = i === C.OperatingSystem.Macintosh ? c : h
              , r = p & I.KeyCode;
            return new E(a,d,u,s,r)
        }
        class E {
            constructor(i, c, h, a, d) {
                this.ctrlKey = i,
                this.shiftKey = c,
                this.altKey = h,
                this.metaKey = a,
                this.keyCode = d
            }
            equals(i) {
                return i instanceof E && this.ctrlKey === i.ctrlKey && this.shiftKey === i.shiftKey && this.altKey === i.altKey && this.metaKey === i.metaKey && this.keyCode === i.keyCode
            }
            getHashCode() {
                const i = this.ctrlKey ? "1" : "0"
                  , c = this.shiftKey ? "1" : "0"
                  , h = this.altKey ? "1" : "0"
                  , a = this.metaKey ? "1" : "0";
                return `K${i}${c}${h}${a}${this.keyCode}`
            }
            isModifierKey() {
                return this.keyCode === n.KeyCode.Unknown || this.keyCode === n.KeyCode.Ctrl || this.keyCode === n.KeyCode.Meta || this.keyCode === n.KeyCode.Alt || this.keyCode === n.KeyCode.Shift
            }
            toKeybinding() {
                return new v([this])
            }
            isDuplicateModifierCase() {
                return this.ctrlKey && this.keyCode === n.KeyCode.Ctrl || this.shiftKey && this.keyCode === n.KeyCode.Shift || this.altKey && this.keyCode === n.KeyCode.Alt || this.metaKey && this.keyCode === n.KeyCode.Meta
            }
        }
        e.$2r = E;
        class $ {
            constructor(i, c, h, a, d) {
                this.ctrlKey = i,
                this.shiftKey = c,
                this.altKey = h,
                this.metaKey = a,
                this.scanCode = d
            }
            equals(i) {
                return i instanceof $ && this.ctrlKey === i.ctrlKey && this.shiftKey === i.shiftKey && this.altKey === i.altKey && this.metaKey === i.metaKey && this.scanCode === i.scanCode
            }
            getHashCode() {
                const i = this.ctrlKey ? "1" : "0"
                  , c = this.shiftKey ? "1" : "0"
                  , h = this.altKey ? "1" : "0"
                  , a = this.metaKey ? "1" : "0";
                return `S${i}${c}${h}${a}${this.scanCode}`
            }
            isDuplicateModifierCase() {
                return this.ctrlKey && (this.scanCode === n.ScanCode.ControlLeft || this.scanCode === n.ScanCode.ControlRight) || this.shiftKey && (this.scanCode === n.ScanCode.ShiftLeft || this.scanCode === n.ScanCode.ShiftRight) || this.altKey && (this.scanCode === n.ScanCode.AltLeft || this.scanCode === n.ScanCode.AltRight) || this.metaKey && (this.scanCode === n.ScanCode.MetaLeft || this.scanCode === n.ScanCode.MetaRight)
            }
        }
        e.$3r = $;
        class v {
            constructor(i) {
                if (i.length === 0)
                    throw (0,
                    t.$6)("chords");
                this.chords = i
            }
            getHashCode() {
                let i = "";
                for (let c = 0, h = this.chords.length; c < h; c++)
                    c !== 0 && (i += ";"),
                    i += this.chords[c].getHashCode();
                return i
            }
            equals(i) {
                if (i === null || this.chords.length !== i.chords.length)
                    return !1;
                for (let c = 0; c < this.chords.length; c++)
                    if (!this.chords[c].equals(i.chords[c]))
                        return !1;
                return !0
            }
        }
        e.$4r = v;
        class f {
            constructor(i, c, h, a, d, u) {
                this.ctrlKey = i,
                this.shiftKey = c,
                this.altKey = h,
                this.metaKey = a,
                this.keyLabel = d,
                this.keyAriaLabel = u
            }
        }
        e.$5r = f;
        class g {
        }
        e.$6r = g
    }),
    define(ge[606], be([1, 0, 17, 322]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$CX = void 0;
        class C {
            static a(L) {
                L = L.toLowerCase().trim();
                let y = !1, E = !1, $ = !1, v = !1, f;
                do
                    f = !1,
                    /^ctrl(\+|\-)/.test(L) && (y = !0,
                    L = L.substr(5),
                    f = !0),
                    /^shift(\+|\-)/.test(L) && (E = !0,
                    L = L.substr(6),
                    f = !0),
                    /^alt(\+|\-)/.test(L) && ($ = !0,
                    L = L.substr(4),
                    f = !0),
                    /^meta(\+|\-)/.test(L) && (v = !0,
                    L = L.substr(5),
                    f = !0),
                    /^win(\+|\-)/.test(L) && (v = !0,
                    L = L.substr(4),
                    f = !0),
                    /^cmd(\+|\-)/.test(L) && (v = !0,
                    L = L.substr(4),
                    f = !0);
                while (f);
                let g;
                const p = L.indexOf(" ");
                return p > 0 ? (g = L.substring(0, p),
                L = L.substring(p)) : (g = L,
                L = ""),
                {
                    remains: L,
                    ctrl: y,
                    shift: E,
                    alt: $,
                    meta: v,
                    key: g
                }
            }
            static b(L) {
                const y = this.a(L)
                  , E = y.key.match(/^\[([^\]]+)\]$/);
                if (E) {
                    const v = E[1]
                      , f = t.$Vr.lowerCaseToEnum(v);
                    return [new n.$3r(y.ctrl,y.shift,y.alt,y.meta,f), y.remains]
                }
                const $ = t.KeyCodeUtils.fromUserSettings(y.key);
                return [new n.$2r(y.ctrl,y.shift,y.alt,y.meta,$), y.remains]
            }
            static parseKeybinding(L) {
                if (!L)
                    return null;
                const y = [];
                let E;
                for (; L.length > 0; )
                    [E,L] = this.b(L),
                    y.push(E);
                return y.length > 0 ? new n.$4r(y) : null
            }
        }
        e.$CX = C
    }),
    define(ge[933], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$FX = t;
        function t() {
            return 1025 + Math.floor(64510 * Math.random())
        }
    }),
    define(ge[515], be([1, 0, 89]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$6I = void 0;
        const n = Symbol("unset");
        class C {
            constructor() {
                this.a = new L,
                this.b = 0
            }
            get size() {
                return this.b
            }
            get nodes() {
                return this.a.children?.values() || t.Iterable.empty()
            }
            get entries() {
                return this.a.children?.entries() || t.Iterable.empty()
            }
            insert(E, $, v) {
                this.d(E, f=>f._value = $, v)
            }
            mutate(E, $) {
                this.d(E, v=>v._value = $(v._value === n ? void 0 : v._value))
            }
            mutatePath(E, $) {
                this.d(E, ()=>{}
                , v=>$(v))
            }
            delete(E) {
                const $ = this.c(E);
                if (!$)
                    return;
                let v = $.length - 1;
                const f = $[v].node._value;
                if (f !== n) {
                    for (this.b--,
                    $[v].node._value = n; v > 0; v--) {
                        const {node: g, part: p} = $[v];
                        if (g.children?.size || g._value !== n)
                            break;
                        $[v - 1].node.children.delete(p)
                    }
                    return f
                }
            }
            *deleteRecursive(E) {
                const $ = this.c(E);
                if (!$)
                    return;
                const v = $[$.length - 1].node;
                for (let f = $.length - 1; f > 0; f--) {
                    const g = $[f - 1];
                    if (g.node.children.delete($[f].part),
                    g.node.children.size > 0 || g.node._value !== n)
                        break
                }
                for (const f of I(v))
                    f._value !== n && (this.b--,
                    yield f._value)
            }
            find(E) {
                let $ = this.a;
                for (const v of E) {
                    const f = $.children?.get(v);
                    if (!f)
                        return;
                    $ = f
                }
                return $._value === n ? void 0 : $._value
            }
            hasKeyOrParent(E) {
                let $ = this.a;
                for (const v of E) {
                    const f = $.children?.get(v);
                    if (!f)
                        return !1;
                    if (f._value !== n)
                        return !0;
                    $ = f
                }
                return !1
            }
            hasKeyOrChildren(E) {
                let $ = this.a;
                for (const v of E) {
                    const f = $.children?.get(v);
                    if (!f)
                        return !1;
                    $ = f
                }
                return !0
            }
            hasKey(E) {
                let $ = this.a;
                for (const v of E) {
                    const f = $.children?.get(v);
                    if (!f)
                        return !1;
                    $ = f
                }
                return $._value !== n
            }
            c(E) {
                const $ = [{
                    part: "",
                    node: this.a
                }];
                let v = 0;
                for (const f of E) {
                    const g = $[v].node.children?.get(f);
                    if (!g)
                        return;
                    $.push({
                        part: f,
                        node: g
                    }),
                    v++
                }
                return $
            }
            d(E, $, v) {
                let f = this.a;
                for (const i of E) {
                    if (f.children)
                        if (f.children.has(i))
                            f = f.children.get(i);
                        else {
                            const c = new L;
                            f.children.set(i, c),
                            f = c
                        }
                    else {
                        const c = new L;
                        f.children = new Map([[i, c]]),
                        f = c
                    }
                    v?.(f)
                }
                const g = f._value === n ? 0 : 1;
                $(f);
                const p = f._value === n ? 0 : 1;
                this.b += p - g
            }
            *values() {
                for (const {_value: E} of I(this.a))
                    E !== n && (yield E)
            }
        }
        e.$6I = C;
        function *I(y) {
            const E = [y];
            for (; E.length > 0; ) {
                const $ = E.pop();
                if (yield $,
                $.children)
                    for (const v of $.children.values())
                        E.push(v)
            }
        }
        class L {
            constructor() {
                this._value = n
            }
            get value() {
                return this._value === n ? void 0 : this._value
            }
            set value(E) {
                this._value = E === void 0 ? n : E
            }
        }
    }),
    define(ge[249], be([1, 0, 12]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ec = e.$dc = e.env = e.cwd = void 0;
        let n;
        const C = globalThis.vscode;
        if (typeof C < "u" && typeof C.process < "u") {
            const I = C.process;
            n = {
                get platform() {
                    return I.platform
                },
                get arch() {
                    return I.arch
                },
                get env() {
                    return I.env
                },
                cwd() {
                    return I.cwd()
                }
            }
        } else
            typeof process < "u" ? n = {
                get platform() {
                    return process.platform
                },
                get arch() {
                    return process.arch
                },
                get env() {
                    return process.env
                },
                cwd() {
                    return process.env.VSCODE_CWD || process.cwd()
                }
            } : n = {
                get platform() {
                    return t.$j ? "win32" : t.$k ? "darwin" : "linux"
                },
                get arch() {},
                get env() {
                    return {}
                },
                cwd() {
                    return "/"
                }
            };
        e.cwd = n.cwd,
        e.env = n.env,
        e.$dc = n.platform,
        e.$ec = n.arch
    }),
    define(ge[934], be([1, 0, 249]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$wX = n,
        e.$xX = C;
        function n() {
            return t.env && !!t.env.VSCODE_DEV
        }
        function C(y) {
            if (n()) {
                const E = I();
                return E.add(y),
                {
                    dispose() {
                        E.delete(y)
                    }
                }
            } else
                return {
                    dispose() {}
                }
        }
        function I() {
            L || (L = new Set);
            const y = globalThis;
            return y.$hotReload_applyNewExports || (y.$hotReload_applyNewExports = E=>{
                const $ = {
                    config: {
                        mode: void 0
                    },
                    ...E
                }
                  , v = [];
                for (const f of L) {
                    const g = f($);
                    g && v.push(g)
                }
                if (v.length > 0)
                    return f=>{
                        let g = !1;
                        for (const p of v)
                            p(f) && (g = !0);
                        return g
                    }
            }
            ),
            L
        }
        let L;
        n() && C(({oldExports: y, newSrc: E, config: $})=>{
            if ($.mode === "patch-prototype")
                return v=>{
                    for (const f in v) {
                        const g = v[f];
                        if (console.log(`[hot-reload] Patching prototype methods of '${f}'`, {
                            exportedItem: g
                        }),
                        typeof g == "function" && g.prototype) {
                            const p = y[f];
                            if (p) {
                                for (const i of Object.getOwnPropertyNames(g.prototype)) {
                                    const c = Object.getOwnPropertyDescriptor(g.prototype, i)
                                      , h = Object.getOwnPropertyDescriptor(p.prototype, i);
                                    c?.value?.toString() !== h?.value?.toString() && console.log(`[hot-reload] Patching prototype method '${f}.${i}'`),
                                    Object.defineProperty(p.prototype, i, c)
                                }
                                v[f] = p
                            }
                        }
                    }
                    return !0
                }
        }
        )
    }),
    define(ge[67], be([1, 0, 249]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$tc = e.sep = e.$rc = e.$qc = e.$pc = e.$oc = e.$nc = e.$mc = e.$lc = e.$kc = e.$jc = e.$ic = e.$hc = e.$gc = e.$fc = void 0,
        t = xe(t);
        const n = 65
          , C = 97
          , I = 90
          , L = 122
          , y = 46
          , E = 47
          , $ = 92
          , v = 58
          , f = 63;
        class g extends Error {
            constructor(b, m, w) {
                let S;
                typeof m == "string" && m.indexOf("not ") === 0 ? (S = "must not be",
                m = m.replace(/^not /, "")) : S = "must be";
                const T = b.indexOf(".") !== -1 ? "property" : "argument";
                let D = `The "${b}" ${T} ${S} of type ${m}`;
                D += `. Received type ${typeof w}`,
                super(D),
                this.code = "ERR_INVALID_ARG_TYPE"
            }
        }
        function p(o, b) {
            if (o === null || typeof o != "object")
                throw new g(b,"Object",o)
        }
        function i(o, b) {
            if (typeof o != "string")
                throw new g(b,"string",o)
        }
        const c = t.$dc === "win32";
        function h(o) {
            return o === E || o === $
        }
        function a(o) {
            return o === E
        }
        function d(o) {
            return o >= n && o <= I || o >= C && o <= L
        }
        function u(o, b, m, w) {
            let S = ""
              , T = 0
              , D = -1
              , k = 0
              , P = 0;
            for (let A = 0; A <= o.length; ++A) {
                if (A < o.length)
                    P = o.charCodeAt(A);
                else {
                    if (w(P))
                        break;
                    P = E
                }
                if (w(P)) {
                    if (!(D === A - 1 || k === 1))
                        if (k === 2) {
                            if (S.length < 2 || T !== 2 || S.charCodeAt(S.length - 1) !== y || S.charCodeAt(S.length - 2) !== y) {
                                if (S.length > 2) {
                                    const M = S.lastIndexOf(m);
                                    M === -1 ? (S = "",
                                    T = 0) : (S = S.slice(0, M),
                                    T = S.length - 1 - S.lastIndexOf(m)),
                                    D = A,
                                    k = 0;
                                    continue
                                } else if (S.length !== 0) {
                                    S = "",
                                    T = 0,
                                    D = A,
                                    k = 0;
                                    continue
                                }
                            }
                            b && (S += S.length > 0 ? `${m}..` : "..",
                            T = 2)
                        } else
                            S.length > 0 ? S += `${m}${o.slice(D + 1, A)}` : S = o.slice(D + 1, A),
                            T = A - D - 1;
                    D = A,
                    k = 0
                } else
                    P === y && k !== -1 ? ++k : k = -1
            }
            return S
        }
        function s(o) {
            return o ? `${o[0] === "." ? "" : "."}${o}` : ""
        }
        function r(o, b) {
            p(b, "pathObject");
            const m = b.dir || b.root
              , w = b.base || `${b.name || ""}${s(b.ext)}`;
            return m ? m === b.root ? `${m}${w}` : `${m}${o}${w}` : w
        }
        e.$fc = {
            resolve(...o) {
                let b = ""
                  , m = ""
                  , w = !1;
                for (let S = o.length - 1; S >= -1; S--) {
                    let T;
                    if (S >= 0) {
                        if (T = o[S],
                        i(T, `paths[${S}]`),
                        T.length === 0)
                            continue
                    } else
                        b.length === 0 ? T = t.cwd() : (T = t.env[`=${b}`] || t.cwd(),
                        (T === void 0 || T.slice(0, 2).toLowerCase() !== b.toLowerCase() && T.charCodeAt(2) === $) && (T = `${b}\\`));
                    const D = T.length;
                    let k = 0
                      , P = ""
                      , A = !1;
                    const M = T.charCodeAt(0);
                    if (D === 1)
                        h(M) && (k = 1,
                        A = !0);
                    else if (h(M))
                        if (A = !0,
                        h(T.charCodeAt(1))) {
                            let O = 2
                              , R = O;
                            for (; O < D && !h(T.charCodeAt(O)); )
                                O++;
                            if (O < D && O !== R) {
                                const N = T.slice(R, O);
                                for (R = O; O < D && h(T.charCodeAt(O)); )
                                    O++;
                                if (O < D && O !== R) {
                                    for (R = O; O < D && !h(T.charCodeAt(O)); )
                                        O++;
                                    (O === D || O !== R) && (P = `\\\\${N}\\${T.slice(R, O)}`,
                                    k = O)
                                }
                            }
                        } else
                            k = 1;
                    else
                        d(M) && T.charCodeAt(1) === v && (P = T.slice(0, 2),
                        k = 2,
                        D > 2 && h(T.charCodeAt(2)) && (A = !0,
                        k = 3));
                    if (P.length > 0)
                        if (b.length > 0) {
                            if (P.toLowerCase() !== b.toLowerCase())
                                continue
                        } else
                            b = P;
                    if (w) {
                        if (b.length > 0)
                            break
                    } else if (m = `${T.slice(k)}\\${m}`,
                    w = A,
                    A && b.length > 0)
                        break
                }
                return m = u(m, !w, "\\", h),
                w ? `${b}\\${m}` : `${b}${m}` || "."
            },
            normalize(o) {
                i(o, "path");
                const b = o.length;
                if (b === 0)
                    return ".";
                let m = 0, w, S = !1;
                const T = o.charCodeAt(0);
                if (b === 1)
                    return a(T) ? "\\" : o;
                if (h(T))
                    if (S = !0,
                    h(o.charCodeAt(1))) {
                        let k = 2
                          , P = k;
                        for (; k < b && !h(o.charCodeAt(k)); )
                            k++;
                        if (k < b && k !== P) {
                            const A = o.slice(P, k);
                            for (P = k; k < b && h(o.charCodeAt(k)); )
                                k++;
                            if (k < b && k !== P) {
                                for (P = k; k < b && !h(o.charCodeAt(k)); )
                                    k++;
                                if (k === b)
                                    return `\\\\${A}\\${o.slice(P)}\\`;
                                k !== P && (w = `\\\\${A}\\${o.slice(P, k)}`,
                                m = k)
                            }
                        }
                    } else
                        m = 1;
                else
                    d(T) && o.charCodeAt(1) === v && (w = o.slice(0, 2),
                    m = 2,
                    b > 2 && h(o.charCodeAt(2)) && (S = !0,
                    m = 3));
                let D = m < b ? u(o.slice(m), !S, "\\", h) : "";
                return D.length === 0 && !S && (D = "."),
                D.length > 0 && h(o.charCodeAt(b - 1)) && (D += "\\"),
                w === void 0 ? S ? `\\${D}` : D : S ? `${w}\\${D}` : `${w}${D}`
            },
            isAbsolute(o) {
                i(o, "path");
                const b = o.length;
                if (b === 0)
                    return !1;
                const m = o.charCodeAt(0);
                return h(m) || b > 2 && d(m) && o.charCodeAt(1) === v && h(o.charCodeAt(2))
            },
            join(...o) {
                if (o.length === 0)
                    return ".";
                let b, m;
                for (let T = 0; T < o.length; ++T) {
                    const D = o[T];
                    i(D, "path"),
                    D.length > 0 && (b === void 0 ? b = m = D : b += `\\${D}`)
                }
                if (b === void 0)
                    return ".";
                let w = !0
                  , S = 0;
                if (typeof m == "string" && h(m.charCodeAt(0))) {
                    ++S;
                    const T = m.length;
                    T > 1 && h(m.charCodeAt(1)) && (++S,
                    T > 2 && (h(m.charCodeAt(2)) ? ++S : w = !1))
                }
                if (w) {
                    for (; S < b.length && h(b.charCodeAt(S)); )
                        S++;
                    S >= 2 && (b = `\\${b.slice(S)}`)
                }
                return e.$fc.normalize(b)
            },
            relative(o, b) {
                if (i(o, "from"),
                i(b, "to"),
                o === b)
                    return "";
                const m = e.$fc.resolve(o)
                  , w = e.$fc.resolve(b);
                if (m === w || (o = m.toLowerCase(),
                b = w.toLowerCase(),
                o === b))
                    return "";
                let S = 0;
                for (; S < o.length && o.charCodeAt(S) === $; )
                    S++;
                let T = o.length;
                for (; T - 1 > S && o.charCodeAt(T - 1) === $; )
                    T--;
                const D = T - S;
                let k = 0;
                for (; k < b.length && b.charCodeAt(k) === $; )
                    k++;
                let P = b.length;
                for (; P - 1 > k && b.charCodeAt(P - 1) === $; )
                    P--;
                const A = P - k
                  , M = D < A ? D : A;
                let O = -1
                  , R = 0;
                for (; R < M; R++) {
                    const z = o.charCodeAt(S + R);
                    if (z !== b.charCodeAt(k + R))
                        break;
                    z === $ && (O = R)
                }
                if (R !== M) {
                    if (O === -1)
                        return w
                } else {
                    if (A > M) {
                        if (b.charCodeAt(k + R) === $)
                            return w.slice(k + R + 1);
                        if (R === 2)
                            return w.slice(k + R)
                    }
                    D > M && (o.charCodeAt(S + R) === $ ? O = R : R === 2 && (O = 3)),
                    O === -1 && (O = 0)
                }
                let N = "";
                for (R = S + O + 1; R <= T; ++R)
                    (R === T || o.charCodeAt(R) === $) && (N += N.length === 0 ? ".." : "\\..");
                return k += O,
                N.length > 0 ? `${N}${w.slice(k, P)}` : (w.charCodeAt(k) === $ && ++k,
                w.slice(k, P))
            },
            toNamespacedPath(o) {
                if (typeof o != "string" || o.length === 0)
                    return o;
                const b = e.$fc.resolve(o);
                if (b.length <= 2)
                    return o;
                if (b.charCodeAt(0) === $) {
                    if (b.charCodeAt(1) === $) {
                        const m = b.charCodeAt(2);
                        if (m !== f && m !== y)
                            return `\\\\?\\UNC\\${b.slice(2)}`
                    }
                } else if (d(b.charCodeAt(0)) && b.charCodeAt(1) === v && b.charCodeAt(2) === $)
                    return `\\\\?\\${b}`;
                return o
            },
            dirname(o) {
                i(o, "path");
                const b = o.length;
                if (b === 0)
                    return ".";
                let m = -1
                  , w = 0;
                const S = o.charCodeAt(0);
                if (b === 1)
                    return h(S) ? o : ".";
                if (h(S)) {
                    if (m = w = 1,
                    h(o.charCodeAt(1))) {
                        let k = 2
                          , P = k;
                        for (; k < b && !h(o.charCodeAt(k)); )
                            k++;
                        if (k < b && k !== P) {
                            for (P = k; k < b && h(o.charCodeAt(k)); )
                                k++;
                            if (k < b && k !== P) {
                                for (P = k; k < b && !h(o.charCodeAt(k)); )
                                    k++;
                                if (k === b)
                                    return o;
                                k !== P && (m = w = k + 1)
                            }
                        }
                    }
                } else
                    d(S) && o.charCodeAt(1) === v && (m = b > 2 && h(o.charCodeAt(2)) ? 3 : 2,
                    w = m);
                let T = -1
                  , D = !0;
                for (let k = b - 1; k >= w; --k)
                    if (h(o.charCodeAt(k))) {
                        if (!D) {
                            T = k;
                            break
                        }
                    } else
                        D = !1;
                if (T === -1) {
                    if (m === -1)
                        return ".";
                    T = m
                }
                return o.slice(0, T)
            },
            basename(o, b) {
                b !== void 0 && i(b, "suffix"),
                i(o, "path");
                let m = 0, w = -1, S = !0, T;
                if (o.length >= 2 && d(o.charCodeAt(0)) && o.charCodeAt(1) === v && (m = 2),
                b !== void 0 && b.length > 0 && b.length <= o.length) {
                    if (b === o)
                        return "";
                    let D = b.length - 1
                      , k = -1;
                    for (T = o.length - 1; T >= m; --T) {
                        const P = o.charCodeAt(T);
                        if (h(P)) {
                            if (!S) {
                                m = T + 1;
                                break
                            }
                        } else
                            k === -1 && (S = !1,
                            k = T + 1),
                            D >= 0 && (P === b.charCodeAt(D) ? --D === -1 && (w = T) : (D = -1,
                            w = k))
                    }
                    return m === w ? w = k : w === -1 && (w = o.length),
                    o.slice(m, w)
                }
                for (T = o.length - 1; T >= m; --T)
                    if (h(o.charCodeAt(T))) {
                        if (!S) {
                            m = T + 1;
                            break
                        }
                    } else
                        w === -1 && (S = !1,
                        w = T + 1);
                return w === -1 ? "" : o.slice(m, w)
            },
            extname(o) {
                i(o, "path");
                let b = 0
                  , m = -1
                  , w = 0
                  , S = -1
                  , T = !0
                  , D = 0;
                o.length >= 2 && o.charCodeAt(1) === v && d(o.charCodeAt(0)) && (b = w = 2);
                for (let k = o.length - 1; k >= b; --k) {
                    const P = o.charCodeAt(k);
                    if (h(P)) {
                        if (!T) {
                            w = k + 1;
                            break
                        }
                        continue
                    }
                    S === -1 && (T = !1,
                    S = k + 1),
                    P === y ? m === -1 ? m = k : D !== 1 && (D = 1) : m !== -1 && (D = -1)
                }
                return m === -1 || S === -1 || D === 0 || D === 1 && m === S - 1 && m === w + 1 ? "" : o.slice(m, S)
            },
            format: r.bind(null, "\\"),
            parse(o) {
                i(o, "path");
                const b = {
                    root: "",
                    dir: "",
                    base: "",
                    ext: "",
                    name: ""
                };
                if (o.length === 0)
                    return b;
                const m = o.length;
                let w = 0
                  , S = o.charCodeAt(0);
                if (m === 1)
                    return h(S) ? (b.root = b.dir = o,
                    b) : (b.base = b.name = o,
                    b);
                if (h(S)) {
                    if (w = 1,
                    h(o.charCodeAt(1))) {
                        let O = 2
                          , R = O;
                        for (; O < m && !h(o.charCodeAt(O)); )
                            O++;
                        if (O < m && O !== R) {
                            for (R = O; O < m && h(o.charCodeAt(O)); )
                                O++;
                            if (O < m && O !== R) {
                                for (R = O; O < m && !h(o.charCodeAt(O)); )
                                    O++;
                                O === m ? w = O : O !== R && (w = O + 1)
                            }
                        }
                    }
                } else if (d(S) && o.charCodeAt(1) === v) {
                    if (m <= 2)
                        return b.root = b.dir = o,
                        b;
                    if (w = 2,
                    h(o.charCodeAt(2))) {
                        if (m === 3)
                            return b.root = b.dir = o,
                            b;
                        w = 3
                    }
                }
                w > 0 && (b.root = o.slice(0, w));
                let T = -1
                  , D = w
                  , k = -1
                  , P = !0
                  , A = o.length - 1
                  , M = 0;
                for (; A >= w; --A) {
                    if (S = o.charCodeAt(A),
                    h(S)) {
                        if (!P) {
                            D = A + 1;
                            break
                        }
                        continue
                    }
                    k === -1 && (P = !1,
                    k = A + 1),
                    S === y ? T === -1 ? T = A : M !== 1 && (M = 1) : T !== -1 && (M = -1)
                }
                return k !== -1 && (T === -1 || M === 0 || M === 1 && T === k - 1 && T === D + 1 ? b.base = b.name = o.slice(D, k) : (b.name = o.slice(D, T),
                b.base = o.slice(D, k),
                b.ext = o.slice(T, k))),
                D > 0 && D !== w ? b.dir = o.slice(0, D - 1) : b.dir = b.root,
                b
            },
            sep: "\\",
            delimiter: ";",
            win32: null,
            posix: null
        };
        const l = (()=>{
            if (c) {
                const o = /\\/g;
                return ()=>{
                    const b = t.cwd().replace(o, "/");
                    return b.slice(b.indexOf("/"))
                }
            }
            return ()=>t.cwd()
        }
        )();
        e.$gc = {
            resolve(...o) {
                let b = ""
                  , m = !1;
                for (let w = o.length - 1; w >= -1 && !m; w--) {
                    const S = w >= 0 ? o[w] : l();
                    i(S, `paths[${w}]`),
                    S.length !== 0 && (b = `${S}/${b}`,
                    m = S.charCodeAt(0) === E)
                }
                return b = u(b, !m, "/", a),
                m ? `/${b}` : b.length > 0 ? b : "."
            },
            normalize(o) {
                if (i(o, "path"),
                o.length === 0)
                    return ".";
                const b = o.charCodeAt(0) === E
                  , m = o.charCodeAt(o.length - 1) === E;
                return o = u(o, !b, "/", a),
                o.length === 0 ? b ? "/" : m ? "./" : "." : (m && (o += "/"),
                b ? `/${o}` : o)
            },
            isAbsolute(o) {
                return i(o, "path"),
                o.length > 0 && o.charCodeAt(0) === E
            },
            join(...o) {
                if (o.length === 0)
                    return ".";
                let b;
                for (let m = 0; m < o.length; ++m) {
                    const w = o[m];
                    i(w, "path"),
                    w.length > 0 && (b === void 0 ? b = w : b += `/${w}`)
                }
                return b === void 0 ? "." : e.$gc.normalize(b)
            },
            relative(o, b) {
                if (i(o, "from"),
                i(b, "to"),
                o === b || (o = e.$gc.resolve(o),
                b = e.$gc.resolve(b),
                o === b))
                    return "";
                const m = 1
                  , w = o.length
                  , S = w - m
                  , T = 1
                  , D = b.length - T
                  , k = S < D ? S : D;
                let P = -1
                  , A = 0;
                for (; A < k; A++) {
                    const O = o.charCodeAt(m + A);
                    if (O !== b.charCodeAt(T + A))
                        break;
                    O === E && (P = A)
                }
                if (A === k)
                    if (D > k) {
                        if (b.charCodeAt(T + A) === E)
                            return b.slice(T + A + 1);
                        if (A === 0)
                            return b.slice(T + A)
                    } else
                        S > k && (o.charCodeAt(m + A) === E ? P = A : A === 0 && (P = 0));
                let M = "";
                for (A = m + P + 1; A <= w; ++A)
                    (A === w || o.charCodeAt(A) === E) && (M += M.length === 0 ? ".." : "/..");
                return `${M}${b.slice(T + P)}`
            },
            toNamespacedPath(o) {
                return o
            },
            dirname(o) {
                if (i(o, "path"),
                o.length === 0)
                    return ".";
                const b = o.charCodeAt(0) === E;
                let m = -1
                  , w = !0;
                for (let S = o.length - 1; S >= 1; --S)
                    if (o.charCodeAt(S) === E) {
                        if (!w) {
                            m = S;
                            break
                        }
                    } else
                        w = !1;
                return m === -1 ? b ? "/" : "." : b && m === 1 ? "//" : o.slice(0, m)
            },
            basename(o, b) {
                b !== void 0 && i(b, "ext"),
                i(o, "path");
                let m = 0, w = -1, S = !0, T;
                if (b !== void 0 && b.length > 0 && b.length <= o.length) {
                    if (b === o)
                        return "";
                    let D = b.length - 1
                      , k = -1;
                    for (T = o.length - 1; T >= 0; --T) {
                        const P = o.charCodeAt(T);
                        if (P === E) {
                            if (!S) {
                                m = T + 1;
                                break
                            }
                        } else
                            k === -1 && (S = !1,
                            k = T + 1),
                            D >= 0 && (P === b.charCodeAt(D) ? --D === -1 && (w = T) : (D = -1,
                            w = k))
                    }
                    return m === w ? w = k : w === -1 && (w = o.length),
                    o.slice(m, w)
                }
                for (T = o.length - 1; T >= 0; --T)
                    if (o.charCodeAt(T) === E) {
                        if (!S) {
                            m = T + 1;
                            break
                        }
                    } else
                        w === -1 && (S = !1,
                        w = T + 1);
                return w === -1 ? "" : o.slice(m, w)
            },
            extname(o) {
                i(o, "path");
                let b = -1
                  , m = 0
                  , w = -1
                  , S = !0
                  , T = 0;
                for (let D = o.length - 1; D >= 0; --D) {
                    const k = o.charCodeAt(D);
                    if (k === E) {
                        if (!S) {
                            m = D + 1;
                            break
                        }
                        continue
                    }
                    w === -1 && (S = !1,
                    w = D + 1),
                    k === y ? b === -1 ? b = D : T !== 1 && (T = 1) : b !== -1 && (T = -1)
                }
                return b === -1 || w === -1 || T === 0 || T === 1 && b === w - 1 && b === m + 1 ? "" : o.slice(b, w)
            },
            format: r.bind(null, "/"),
            parse(o) {
                i(o, "path");
                const b = {
                    root: "",
                    dir: "",
                    base: "",
                    ext: "",
                    name: ""
                };
                if (o.length === 0)
                    return b;
                const m = o.charCodeAt(0) === E;
                let w;
                m ? (b.root = "/",
                w = 1) : w = 0;
                let S = -1
                  , T = 0
                  , D = -1
                  , k = !0
                  , P = o.length - 1
                  , A = 0;
                for (; P >= w; --P) {
                    const M = o.charCodeAt(P);
                    if (M === E) {
                        if (!k) {
                            T = P + 1;
                            break
                        }
                        continue
                    }
                    D === -1 && (k = !1,
                    D = P + 1),
                    M === y ? S === -1 ? S = P : A !== 1 && (A = 1) : S !== -1 && (A = -1)
                }
                if (D !== -1) {
                    const M = T === 0 && m ? 1 : T;
                    S === -1 || A === 0 || A === 1 && S === D - 1 && S === T + 1 ? b.base = b.name = o.slice(M, D) : (b.name = o.slice(M, S),
                    b.base = o.slice(M, D),
                    b.ext = o.slice(S, D))
                }
                return T > 0 ? b.dir = o.slice(0, T - 1) : m && (b.dir = "/"),
                b
            },
            sep: "/",
            delimiter: ":",
            win32: null,
            posix: null
        },
        e.$gc.win32 = e.$fc.win32 = e.$fc,
        e.$gc.posix = e.$fc.posix = e.$gc,
        e.$hc = c ? e.$fc.normalize : e.$gc.normalize,
        e.$ic = c ? e.$fc.isAbsolute : e.$gc.isAbsolute,
        e.$jc = c ? e.$fc.join : e.$gc.join,
        e.$kc = c ? e.$fc.resolve : e.$gc.resolve,
        e.$lc = c ? e.$fc.relative : e.$gc.relative,
        e.$mc = c ? e.$fc.dirname : e.$gc.dirname,
        e.$nc = c ? e.$fc.basename : e.$gc.basename,
        e.$oc = c ? e.$fc.extname : e.$gc.extname,
        e.$pc = c ? e.$fc.format : e.$gc.format,
        e.$qc = c ? e.$fc.parse : e.$gc.parse,
        e.$rc = c ? e.$fc.toNamespacedPath : e.$gc.toNamespacedPath,
        e.sep = c ? e.$fc.sep : e.$gc.sep,
        e.$tc = c ? e.$fc.delimiter : e.$gc.delimiter
    }),
    define(ge[392], be([1, 0, 147, 67]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Ar = y,
        e.$Br = E,
        e.$Cr = $,
        e.$Dr = v,
        e.$Er = f,
        e.$Fr = g,
        e.$Gr = p,
        e.$Hr = i,
        e.$Ir = c,
        e.$Jr = h,
        e.$Kr = w,
        e.$Lr = S,
        e.$Mr = T;
        const C = new t.$T(()=>{
            const D = new Intl.Collator(void 0,{
                numeric: !0,
                sensitivity: "base"
            });
            return {
                collator: D,
                collatorIsNumeric: D.resolvedOptions().numeric
            }
        }
        )
          , I = new t.$T(()=>({
            collator: new Intl.Collator(void 0,{
                numeric: !0
            })
        }))
          , L = new t.$T(()=>({
            collator: new Intl.Collator(void 0,{
                numeric: !0,
                sensitivity: "accent"
            })
        }));
        function y(D, k, P=!1) {
            const A = D || ""
              , M = k || ""
              , O = C.value.collator.compare(A, M);
            return C.value.collatorIsNumeric && O === 0 && A !== M ? A < M ? -1 : 1 : O
        }
        function E(D, k) {
            const P = I.value.collator;
            return D = D || "",
            k = k || "",
            s(P, D, k)
        }
        function $(D, k) {
            const P = I.value.collator;
            return D = D || "",
            k = k || "",
            b(D, k) || s(P, D, k)
        }
        function v(D, k) {
            const P = I.value.collator;
            return D = D || "",
            k = k || "",
            o(D, k) || s(P, D, k)
        }
        function f(D, k) {
            return D = D || "",
            k = k || "",
            D === k ? 0 : D < k ? -1 : 1
        }
        function g(D, k) {
            const [P,A] = d(D)
              , [M,O] = d(k);
            let R = C.value.collator.compare(A, O);
            if (R === 0) {
                if (C.value.collatorIsNumeric && A !== O)
                    return A < O ? -1 : 1;
                if (R = C.value.collator.compare(P, M),
                C.value.collatorIsNumeric && R === 0 && P !== M)
                    return P < M ? -1 : 1
            }
            return R
        }
        function p(D, k) {
            D = D || "",
            k = k || "";
            const P = u(D)
              , A = u(k)
              , M = I.value.collator
              , O = L.value.collator;
            return s(O, P, A) || s(M, D, k)
        }
        function i(D, k) {
            D = D || "",
            k = k || "";
            const P = u(D)
              , A = u(k)
              , M = I.value.collator
              , O = L.value.collator;
            return s(O, P, A) || b(D, k) || s(M, D, k)
        }
        function c(D, k) {
            D = D || "",
            k = k || "";
            const P = u(D)
              , A = u(k)
              , M = I.value.collator
              , O = L.value.collator;
            return s(O, P, A) || o(D, k) || s(M, D, k)
        }
        function h(D, k) {
            D = D || "",
            k = k || "";
            const P = u(D).toLowerCase()
              , A = u(k).toLowerCase();
            return P !== A ? P < A ? -1 : 1 : D !== k ? D < k ? -1 : 1 : 0
        }
        const a = /^(.*?)(\.([^.]*))?$/;
        function d(D, k=!1) {
            const P = D ? a.exec(D) : [];
            let A = [P && P[1] || "", P && P[3] || ""];
            return k && (!A[0] && A[1] || A[0] && A[0].charAt(0) === ".") && (A = [A[0] + "." + A[1], ""]),
            A
        }
        function u(D) {
            const k = D ? a.exec(D) : [];
            return k && k[1] && k[1].charAt(0) !== "." && k[3] || ""
        }
        function s(D, k, P) {
            const A = D.compare(k, P);
            return A !== 0 ? A : k.length !== P.length ? k.length < P.length ? -1 : 1 : 0
        }
        function r(D) {
            const k = D.charAt(0);
            return k.toLocaleUpperCase() !== k
        }
        function l(D) {
            const k = D.charAt(0);
            return k.toLocaleLowerCase() !== k
        }
        function o(D, k) {
            return r(D) && l(k) ? -1 : l(D) && r(k) ? 1 : 0
        }
        function b(D, k) {
            return l(D) && r(k) ? -1 : r(D) && l(k) ? 1 : 0
        }
        function m(D, k, P=!1) {
            return P || (D = D && D.toLowerCase(),
            k = k && k.toLowerCase()),
            D === k ? 0 : D < k ? -1 : 1
        }
        function w(D, k, P=!1) {
            const A = D.split(n.sep)
              , M = k.split(n.sep)
              , O = A.length - 1
              , R = M.length - 1;
            let N, z;
            for (let V = 0; ; V++) {
                if (N = O === V,
                z = R === V,
                N && z)
                    return y(A[V], M[V], P);
                if (N)
                    return -1;
                if (z)
                    return 1;
                const B = m(A[V], M[V], P);
                if (B !== 0)
                    return B
            }
        }
        function S(D, k, P) {
            const A = D.toLowerCase()
              , M = k.toLowerCase()
              , O = T(D, k, P);
            if (O)
                return O;
            const R = A.endsWith(P)
              , N = M.endsWith(P);
            if (R !== N)
                return R ? -1 : 1;
            const z = y(A, M);
            return z !== 0 ? z : A.localeCompare(M)
        }
        function T(D, k, P) {
            const A = D.toLowerCase()
              , M = k.toLowerCase()
              , O = A.startsWith(P)
              , R = M.startsWith(P);
            if (O !== R)
                return O ? -1 : 1;
            if (O && R) {
                if (A.length < M.length)
                    return -1;
                if (A.length > M.length)
                    return 1
            }
            return 0
        }
    }),
    define(ge[207], be([1, 0, 67]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$$s = void 0,
        e.$_s = I,
        e.$at = L,
        e.$bt = y,
        e.$ct = $,
        e.$$s = Object.freeze({
            text: "text/plain",
            binary: "application/octet-stream",
            unknown: "application/unknown",
            markdown: "text/markdown",
            latex: "text/latex",
            uriList: "text/uri-list"
        });
        const n = {
            ".css": "text/css",
            ".csv": "text/csv",
            ".htm": "text/html",
            ".html": "text/html",
            ".ics": "text/calendar",
            ".js": "text/javascript",
            ".mjs": "text/javascript",
            ".txt": "text/plain",
            ".xml": "text/xml"
        }
          , C = {
            ".aac": "audio/x-aac",
            ".avi": "video/x-msvideo",
            ".bmp": "image/bmp",
            ".flv": "video/x-flv",
            ".gif": "image/gif",
            ".ico": "image/x-icon",
            ".jpe": "image/jpg",
            ".jpeg": "image/jpg",
            ".jpg": "image/jpg",
            ".m1v": "video/mpeg",
            ".m2a": "audio/mpeg",
            ".m2v": "video/mpeg",
            ".m3a": "audio/mpeg",
            ".mid": "audio/midi",
            ".midi": "audio/midi",
            ".mk3d": "video/x-matroska",
            ".mks": "video/x-matroska",
            ".mkv": "video/x-matroska",
            ".mov": "video/quicktime",
            ".movie": "video/x-sgi-movie",
            ".mp2": "audio/mpeg",
            ".mp2a": "audio/mpeg",
            ".mp3": "audio/mpeg",
            ".mp4": "video/mp4",
            ".mp4a": "audio/mp4",
            ".mp4v": "video/mp4",
            ".mpe": "video/mpeg",
            ".mpeg": "video/mpeg",
            ".mpg": "video/mpeg",
            ".mpg4": "video/mp4",
            ".mpga": "audio/mpeg",
            ".oga": "audio/ogg",
            ".ogg": "audio/ogg",
            ".opus": "audio/opus",
            ".ogv": "video/ogg",
            ".png": "image/png",
            ".psd": "image/vnd.adobe.photoshop",
            ".qt": "video/quicktime",
            ".spx": "audio/ogg",
            ".svg": "image/svg+xml",
            ".tga": "image/x-tga",
            ".tif": "image/tiff",
            ".tiff": "image/tiff",
            ".wav": "audio/x-wav",
            ".webm": "video/webm",
            ".webp": "image/webp",
            ".wma": "audio/x-ms-wma",
            ".wmv": "video/x-ms-wmv",
            ".woff": "application/font-woff"
        };
        function I(v) {
            const f = (0,
            t.$oc)(v)
              , g = n[f.toLowerCase()];
            return g !== void 0 ? g : L(v)
        }
        function L(v) {
            const f = (0,
            t.$oc)(v);
            return C[f.toLowerCase()]
        }
        function y(v) {
            for (const f in C)
                if (C[f] === v)
                    return f
        }
        const E = /^(.+)\/(.+?)(;.+)?$/;
        function $(v, f) {
            const g = E.exec(v);
            return g ? `${g[1].toLowerCase()}/${g[2].toLowerCase()}${g[3] ?? ""}` : f ? void 0 : v
        }
    }),
    define(ge[607], be([1, 0, 12]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.TerminateResponseCode = e.Source = void 0,
        e.$lm = I,
        e.$mm = L;
        var n;
        (function(y) {
            y[y.stdout = 0] = "stdout",
            y[y.stderr = 1] = "stderr"
        }
        )(n || (e.Source = n = {}));
        var C;
        (function(y) {
            y[y.Success = 0] = "Success",
            y[y.Unknown = 1] = "Unknown",
            y[y.AccessDenied = 2] = "AccessDenied",
            y[y.ProcessNotFound = 3] = "ProcessNotFound"
        }
        )(C || (e.TerminateResponseCode = C = {}));
        function I(y, ...E) {
            const $ = E.reduce((g,p)=>(g[p] = !0,
            g), {})
              , v = [/^ELECTRON_.+$/, /^VSCODE_(?!(PORTABLE|SHELL_LOGIN|ENV_REPLACE|ENV_APPEND|ENV_PREPEND)).+$/, /^SNAP(|_.*)$/, /^GDK_PIXBUF_.+$/];
            Object.keys(y).filter(g=>!$[g]).forEach(g=>{
                for (let p = 0; p < v.length; p++)
                    if (g.search(v[p]) !== -1) {
                        delete y[g];
                        break
                    }
            }
            )
        }
        function L(y) {
            y && (delete y.DEBUG,
            t.$l && delete y.LD_PRELOAD)
        }
    }),
    define(ge[608], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.Range = void 0;
        var t;
        (function(n) {
            function C(E, $) {
                if (E.start >= $.end || $.start >= E.end)
                    return {
                        start: 0,
                        end: 0
                    };
                const v = Math.max(E.start, $.start)
                  , f = Math.min(E.end, $.end);
                return f - v <= 0 ? {
                    start: 0,
                    end: 0
                } : {
                    start: v,
                    end: f
                }
            }
            n.intersect = C;
            function I(E) {
                return E.end - E.start <= 0
            }
            n.isEmpty = I;
            function L(E, $) {
                return !I(C(E, $))
            }
            n.intersects = L;
            function y(E, $) {
                const v = []
                  , f = {
                    start: E.start,
                    end: Math.min($.start, E.end)
                }
                  , g = {
                    start: Math.max($.end, E.start),
                    end: E.end
                };
                return I(f) || v.push(f),
                I(g) || v.push(g),
                v
            }
            n.relativeComplement = y
        }
        )(t || (e.Range = t = {}))
    }),
    define(ge[1333], be([1, 0, 608]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$3U = void 0,
        e.$ZU = n,
        e.$1U = C,
        e.$2U = I;
        function n(E, $) {
            const v = [];
            for (const f of $) {
                if (E.start >= f.range.end)
                    continue;
                if (E.end < f.range.start)
                    break;
                const g = t.Range.intersect(E, f.range);
                t.Range.isEmpty(g) || v.push({
                    range: g,
                    size: f.size
                })
            }
            return v
        }
        function C({start: E, end: $}, v) {
            return {
                start: E + v,
                end: $ + v
            }
        }
        function I(E) {
            const $ = [];
            let v = null;
            for (const f of E) {
                const g = f.range.start
                  , p = f.range.end
                  , i = f.size;
                if (v && i === v.size) {
                    v.range.end = p;
                    continue
                }
                v = {
                    range: {
                        start: g,
                        end: p
                    },
                    size: i
                },
                $.push(v)
            }
            return $
        }
        function L(...E) {
            return I(E.reduce(($,v)=>$.concat(v), []))
        }
        class y {
            get paddingTop() {
                return this.c
            }
            set paddingTop($) {
                this.b = this.b + $ - this.c,
                this.c = $
            }
            constructor($) {
                this.a = [],
                this.b = 0,
                this.c = 0,
                this.c = $ ?? 0,
                this.b = this.c
            }
            splice($, v, f=[]) {
                const g = f.length - v
                  , p = n({
                    start: 0,
                    end: $
                }, this.a)
                  , i = n({
                    start: $ + v,
                    end: Number.POSITIVE_INFINITY
                }, this.a).map(h=>({
                    range: C(h.range, g),
                    size: h.size
                }))
                  , c = f.map((h,a)=>({
                    range: {
                        start: $ + a,
                        end: $ + a + 1
                    },
                    size: h.size
                }));
                this.a = L(p, c, i),
                this.b = this.c + this.a.reduce((h,a)=>h + a.size * (a.range.end - a.range.start), 0)
            }
            get count() {
                const $ = this.a.length;
                return $ ? this.a[$ - 1].range.end : 0
            }
            get size() {
                return this.b
            }
            indexAt($) {
                if ($ < 0)
                    return -1;
                if ($ < this.c)
                    return 0;
                let v = 0
                  , f = this.c;
                for (const g of this.a) {
                    const p = g.range.end - g.range.start
                      , i = f + p * g.size;
                    if ($ < i)
                        return v + Math.floor(($ - f) / g.size);
                    v += p,
                    f = i
                }
                return v
            }
            indexAfter($) {
                return Math.min(this.indexAt($) + 1, this.count)
            }
            positionAt($) {
                if ($ < 0)
                    return -1;
                let v = 0
                  , f = 0;
                for (const g of this.a) {
                    const p = g.range.end - g.range.start
                      , i = f + p;
                    if ($ < i)
                        return this.c + v + ($ - f) * g.size;
                    v += p * g.size,
                    f = i
                }
                return -1
            }
        }
        e.$3U = y
    }),
    function(ce, e) {
        if (typeof exports == "object" && typeof module == "object")
            module.exports = e();
        else if (typeof define == "function" && define.amd)
            define("vs/base/common/semver/semver", [], e);
        else {
            var t = e();
            for (var n in t)
                (typeof exports == "object" ? exports : ce)[n] = t[n]
        }
    }(typeof self < "u" ? self : this, function() {
        return function(ce) {
            var e = {};
            function t(n) {
                if (e[n])
                    return e[n].exports;
                var C = e[n] = {
                    i: n,
                    l: !1,
                    exports: {}
                };
                return ce[n].call(C.exports, C, C.exports, t),
                C.l = !0,
                C.exports
            }
            return t.m = ce,
            t.c = e,
            t.d = function(n, C, I) {
                t.o(n, C) || Object.defineProperty(n, C, {
                    enumerable: !0,
                    get: I
                })
            }
            ,
            t.r = function(n) {
                typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(n, Symbol.toStringTag, {
                    value: "Module"
                }),
                Object.defineProperty(n, "__esModule", {
                    value: !0
                })
            }
            ,
            t.t = function(n, C) {
                if (1 & C && (n = t(n)),
                8 & C || 4 & C && typeof n == "object" && n && n.__esModule)
                    return n;
                var I = Object.create(null);
                if (t.r(I),
                Object.defineProperty(I, "default", {
                    enumerable: !0,
                    value: n
                }),
                2 & C && typeof n != "string")
                    for (var L in n)
                        t.d(I, L, function(y) {
                            return n[y]
                        }
                        .bind(null, L));
                return I
            }
            ,
            t.n = function(n) {
                var C = n && n.__esModule ? function() {
                    return n.default
                }
                : function() {
                    return n
                }
                ;
                return t.d(C, "a", C),
                C
            }
            ,
            t.o = function(n, C) {
                return Object.prototype.hasOwnProperty.call(n, C)
            }
            ,
            t.p = "",
            t(t.s = 0)
        }([function(ce, e, t) {
            (function(n) {
                var C;
                e = ce.exports = X,
                C = typeof n == "object" && n.env && n.env.NODE_DEBUG && /\bsemver\b/i.test(n.env.NODE_DEBUG) ? function() {
                    var pe = Array.prototype.slice.call(arguments, 0);
                    pe.unshift("SEMVER"),
                    console.log.apply(console, pe)
                }
                : function() {}
                ,
                e.SEMVER_SPEC_VERSION = "2.0.0";
                var I = 256
                  , L = Number.MAX_SAFE_INTEGER || 9007199254740991
                  , y = e.re = []
                  , E = e.src = []
                  , $ = 0
                  , v = $++;
                E[v] = "0|[1-9]\\d*";
                var f = $++;
                E[f] = "[0-9]+";
                var g = $++;
                E[g] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*";
                var p = $++;
                E[p] = "(" + E[v] + ")\\.(" + E[v] + ")\\.(" + E[v] + ")";
                var i = $++;
                E[i] = "(" + E[f] + ")\\.(" + E[f] + ")\\.(" + E[f] + ")";
                var c = $++;
                E[c] = "(?:" + E[v] + "|" + E[g] + ")";
                var h = $++;
                E[h] = "(?:" + E[f] + "|" + E[g] + ")";
                var a = $++;
                E[a] = "(?:-(" + E[c] + "(?:\\." + E[c] + ")*))";
                var d = $++;
                E[d] = "(?:-?(" + E[h] + "(?:\\." + E[h] + ")*))";
                var u = $++;
                E[u] = "[0-9A-Za-z-]+";
                var s = $++;
                E[s] = "(?:\\+(" + E[u] + "(?:\\." + E[u] + ")*))";
                var r = $++
                  , l = "v?" + E[p] + E[a] + "?" + E[s] + "?";
                E[r] = "^" + l + "$";
                var o = "[v=\\s]*" + E[i] + E[d] + "?" + E[s] + "?"
                  , b = $++;
                E[b] = "^" + o + "$";
                var m = $++;
                E[m] = "((?:<|>)?=?)";
                var w = $++;
                E[w] = E[f] + "|x|X|\\*";
                var S = $++;
                E[S] = E[v] + "|x|X|\\*";
                var T = $++;
                E[T] = "[v=\\s]*(" + E[S] + ")(?:\\.(" + E[S] + ")(?:\\.(" + E[S] + ")(?:" + E[a] + ")?" + E[s] + "?)?)?";
                var D = $++;
                E[D] = "[v=\\s]*(" + E[w] + ")(?:\\.(" + E[w] + ")(?:\\.(" + E[w] + ")(?:" + E[d] + ")?" + E[s] + "?)?)?";
                var k = $++;
                E[k] = "^" + E[m] + "\\s*" + E[T] + "$";
                var P = $++;
                E[P] = "^" + E[m] + "\\s*" + E[D] + "$";
                var A = $++;
                E[A] = "(?:^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])";
                var M = $++;
                E[M] = "(?:~>?)";
                var O = $++;
                E[O] = "(\\s*)" + E[M] + "\\s+",
                y[O] = new RegExp(E[O],"g");
                var R = $++;
                E[R] = "^" + E[M] + E[T] + "$";
                var N = $++;
                E[N] = "^" + E[M] + E[D] + "$";
                var z = $++;
                E[z] = "(?:\\^)";
                var V = $++;
                E[V] = "(\\s*)" + E[z] + "\\s+",
                y[V] = new RegExp(E[V],"g");
                var B = $++;
                E[B] = "^" + E[z] + E[T] + "$";
                var j = $++;
                E[j] = "^" + E[z] + E[D] + "$";
                var W = $++;
                E[W] = "^" + E[m] + "\\s*(" + o + ")$|^$";
                var q = $++;
                E[q] = "^" + E[m] + "\\s*(" + l + ")$|^$";
                var H = $++;
                E[H] = "(\\s*)" + E[m] + "\\s*(" + o + "|" + E[T] + ")",
                y[H] = new RegExp(E[H],"g");
                var U = $++;
                E[U] = "^\\s*(" + E[T] + ")\\s+-\\s+(" + E[T] + ")\\s*$";
                var K = $++;
                E[K] = "^\\s*(" + E[D] + ")\\s+-\\s+(" + E[D] + ")\\s*$";
                var G = $++;
                E[G] = "(<|>)?=?\\s*\\*";
                for (var Z = 0; Z < 35; Z++)
                    C(Z, E[Z]),
                    y[Z] || (y[Z] = new RegExp(E[Z]));
                function x(pe, ve) {
                    if (pe instanceof X)
                        return pe;
                    if (typeof pe != "string" || pe.length > I || !(ve ? y[b] : y[r]).test(pe))
                        return null;
                    try {
                        return new X(pe,ve)
                    } catch {
                        return null
                    }
                }
                function X(pe, ve) {
                    if (pe instanceof X) {
                        if (pe.loose === ve)
                            return pe;
                        pe = pe.version
                    } else if (typeof pe != "string")
                        throw new TypeError("Invalid Version: " + pe);
                    if (pe.length > I)
                        throw new TypeError("version is longer than " + I + " characters");
                    if (!(this instanceof X))
                        return new X(pe,ve);
                    C("SemVer", pe, ve),
                    this.loose = ve;
                    var me = pe.trim().match(ve ? y[b] : y[r]);
                    if (!me)
                        throw new TypeError("Invalid Version: " + pe);
                    if (this.raw = pe,
                    this.major = +me[1],
                    this.minor = +me[2],
                    this.patch = +me[3],
                    this.major > L || this.major < 0)
                        throw new TypeError("Invalid major version");
                    if (this.minor > L || this.minor < 0)
                        throw new TypeError("Invalid minor version");
                    if (this.patch > L || this.patch < 0)
                        throw new TypeError("Invalid patch version");
                    me[4] ? this.prerelease = me[4].split(".").map(function(we) {
                        if (/^[0-9]+$/.test(we)) {
                            var ye = +we;
                            if (ye >= 0 && ye < L)
                                return ye
                        }
                        return we
                    }) : this.prerelease = [],
                    this.build = me[5] ? me[5].split(".") : [],
                    this.format()
                }
                e.parse = x,
                e.valid = function(pe, ve) {
                    var me = x(pe, ve);
                    return me ? me.version : null
                }
                ,
                e.clean = function(pe, ve) {
                    var me = x(pe.trim().replace(/^[=v]+/, ""), ve);
                    return me ? me.version : null
                }
                ,
                e.SemVer = X,
                X.prototype.format = function() {
                    return this.version = this.major + "." + this.minor + "." + this.patch,
                    this.prerelease.length && (this.version += "-" + this.prerelease.join(".")),
                    this.version
                }
                ,
                X.prototype.toString = function() {
                    return this.version
                }
                ,
                X.prototype.compare = function(pe) {
                    return C("SemVer.compare", this.version, this.loose, pe),
                    pe instanceof X || (pe = new X(pe,this.loose)),
                    this.compareMain(pe) || this.comparePre(pe)
                }
                ,
                X.prototype.compareMain = function(pe) {
                    return pe instanceof X || (pe = new X(pe,this.loose)),
                    Q(this.major, pe.major) || Q(this.minor, pe.minor) || Q(this.patch, pe.patch)
                }
                ,
                X.prototype.comparePre = function(pe) {
                    if (pe instanceof X || (pe = new X(pe,this.loose)),
                    this.prerelease.length && !pe.prerelease.length)
                        return -1;
                    if (!this.prerelease.length && pe.prerelease.length)
                        return 1;
                    if (!this.prerelease.length && !pe.prerelease.length)
                        return 0;
                    var ve = 0;
                    do {
                        var me = this.prerelease[ve]
                          , we = pe.prerelease[ve];
                        if (C("prerelease compare", ve, me, we),
                        me === void 0 && we === void 0)
                            return 0;
                        if (we === void 0)
                            return 1;
                        if (me === void 0)
                            return -1;
                        if (me !== we)
                            return Q(me, we)
                    } while (++ve)
                }
                ,
                X.prototype.inc = function(pe, ve) {
                    switch (pe) {
                    case "premajor":
                        this.prerelease.length = 0,
                        this.patch = 0,
                        this.minor = 0,
                        this.major++,
                        this.inc("pre", ve);
                        break;
                    case "preminor":
                        this.prerelease.length = 0,
                        this.patch = 0,
                        this.minor++,
                        this.inc("pre", ve);
                        break;
                    case "prepatch":
                        this.prerelease.length = 0,
                        this.inc("patch", ve),
                        this.inc("pre", ve);
                        break;
                    case "prerelease":
                        this.prerelease.length === 0 && this.inc("patch", ve),
                        this.inc("pre", ve);
                        break;
                    case "major":
                        this.minor === 0 && this.patch === 0 && this.prerelease.length !== 0 || this.major++,
                        this.minor = 0,
                        this.patch = 0,
                        this.prerelease = [];
                        break;
                    case "minor":
                        this.patch === 0 && this.prerelease.length !== 0 || this.minor++,
                        this.patch = 0,
                        this.prerelease = [];
                        break;
                    case "patch":
                        this.prerelease.length === 0 && this.patch++,
                        this.prerelease = [];
                        break;
                    case "pre":
                        if (this.prerelease.length === 0)
                            this.prerelease = [0];
                        else {
                            for (var me = this.prerelease.length; --me >= 0; )
                                typeof this.prerelease[me] == "number" && (this.prerelease[me]++,
                                me = -2);
                            me === -1 && this.prerelease.push(0)
                        }
                        ve && (this.prerelease[0] === ve ? isNaN(this.prerelease[1]) && (this.prerelease = [ve, 0]) : this.prerelease = [ve, 0]);
                        break;
                    default:
                        throw new Error("invalid increment argument: " + pe)
                    }
                    return this.format(),
                    this.raw = this.version,
                    this
                }
                ,
                e.inc = function(pe, ve, me, we) {
                    typeof me == "string" && (we = me,
                    me = void 0);
                    try {
                        return new X(pe,me).inc(ve, we).version
                    } catch {
                        return null
                    }
                }
                ,
                e.diff = function(pe, ve) {
                    if (se(pe, ve))
                        return null;
                    var me = x(pe)
                      , we = x(ve);
                    if (me.prerelease.length || we.prerelease.length) {
                        for (var ye in me)
                            if ((ye === "major" || ye === "minor" || ye === "patch") && me[ye] !== we[ye])
                                return "pre" + ye;
                        return "prerelease"
                    }
                    for (var ye in me)
                        if ((ye === "major" || ye === "minor" || ye === "patch") && me[ye] !== we[ye])
                            return ye
                }
                ,
                e.compareIdentifiers = Q;
                var Y = /^[0-9]+$/;
                function Q(pe, ve) {
                    var me = Y.test(pe)
                      , we = Y.test(ve);
                    return me && we && (pe = +pe,
                    ve = +ve),
                    me && !we ? -1 : we && !me ? 1 : pe < ve ? -1 : pe > ve ? 1 : 0
                }
                function _(pe, ve, me) {
                    return new X(pe,me).compare(new X(ve,me))
                }
                function ae(pe, ve, me) {
                    return _(pe, ve, me) > 0
                }
                function re(pe, ve, me) {
                    return _(pe, ve, me) < 0
                }
                function se(pe, ve, me) {
                    return _(pe, ve, me) === 0
                }
                function ee(pe, ve, me) {
                    return _(pe, ve, me) !== 0
                }
                function J(pe, ve, me) {
                    return _(pe, ve, me) >= 0
                }
                function te(pe, ve, me) {
                    return _(pe, ve, me) <= 0
                }
                function ne(pe, ve, me, we) {
                    var ye;
                    switch (ve) {
                    case "===":
                        typeof pe == "object" && (pe = pe.version),
                        typeof me == "object" && (me = me.version),
                        ye = pe === me;
                        break;
                    case "!==":
                        typeof pe == "object" && (pe = pe.version),
                        typeof me == "object" && (me = me.version),
                        ye = pe !== me;
                        break;
                    case "":
                    case "=":
                    case "==":
                        ye = se(pe, me, we);
                        break;
                    case "!=":
                        ye = ee(pe, me, we);
                        break;
                    case ">":
                        ye = ae(pe, me, we);
                        break;
                    case ">=":
                        ye = J(pe, me, we);
                        break;
                    case "<":
                        ye = re(pe, me, we);
                        break;
                    case "<=":
                        ye = te(pe, me, we);
                        break;
                    default:
                        throw new TypeError("Invalid operator: " + ve)
                    }
                    return ye
                }
                function le(pe, ve) {
                    if (pe instanceof le) {
                        if (pe.loose === ve)
                            return pe;
                        pe = pe.value
                    }
                    if (!(this instanceof le))
                        return new le(pe,ve);
                    C("comparator", pe, ve),
                    this.loose = ve,
                    this.parse(pe),
                    this.semver === ie ? this.value = "" : this.value = this.operator + this.semver.version,
                    C("comp", this)
                }
                e.rcompareIdentifiers = function(pe, ve) {
                    return Q(ve, pe)
                }
                ,
                e.major = function(pe, ve) {
                    return new X(pe,ve).major
                }
                ,
                e.minor = function(pe, ve) {
                    return new X(pe,ve).minor
                }
                ,
                e.patch = function(pe, ve) {
                    return new X(pe,ve).patch
                }
                ,
                e.compare = _,
                e.compareLoose = function(pe, ve) {
                    return _(pe, ve, !0)
                }
                ,
                e.rcompare = function(pe, ve, me) {
                    return _(ve, pe, me)
                }
                ,
                e.sort = function(pe, ve) {
                    return pe.sort(function(me, we) {
                        return e.compare(me, we, ve)
                    })
                }
                ,
                e.rsort = function(pe, ve) {
                    return pe.sort(function(me, we) {
                        return e.rcompare(me, we, ve)
                    })
                }
                ,
                e.gt = ae,
                e.lt = re,
                e.eq = se,
                e.neq = ee,
                e.gte = J,
                e.lte = te,
                e.cmp = ne,
                e.Comparator = le;
                var ie = {};
                function oe(pe, ve) {
                    if (pe instanceof oe)
                        return pe.loose === ve ? pe : new oe(pe.raw,ve);
                    if (pe instanceof le)
                        return new oe(pe.value,ve);
                    if (!(this instanceof oe))
                        return new oe(pe,ve);
                    if (this.loose = ve,
                    this.raw = pe,
                    this.set = pe.split(/\s*\|\|\s*/).map(function(me) {
                        return this.parseRange(me.trim())
                    }, this).filter(function(me) {
                        return me.length
                    }),
                    !this.set.length)
                        throw new TypeError("Invalid SemVer Range: " + pe);
                    this.format()
                }
                function fe(pe) {
                    return !pe || pe.toLowerCase() === "x" || pe === "*"
                }
                function he(pe, ve, me, we, ye, Le, De, Pe, ze, Be, Me, Ae, Se) {
                    return ((ve = fe(me) ? "" : fe(we) ? ">=" + me + ".0.0" : fe(ye) ? ">=" + me + "." + we + ".0" : ">=" + ve) + " " + (Pe = fe(ze) ? "" : fe(Be) ? "<" + (+ze + 1) + ".0.0" : fe(Me) ? "<" + ze + "." + (+Be + 1) + ".0" : Ae ? "<=" + ze + "." + Be + "." + Me + "-" + Ae : "<=" + Pe)).trim()
                }
                function ue(pe, ve) {
                    for (var me = 0; me < pe.length; me++)
                        if (!pe[me].test(ve))
                            return !1;
                    if (ve.prerelease.length) {
                        for (me = 0; me < pe.length; me++)
                            if (C(pe[me].semver),
                            pe[me].semver !== ie && pe[me].semver.prerelease.length > 0) {
                                var we = pe[me].semver;
                                if (we.major === ve.major && we.minor === ve.minor && we.patch === ve.patch)
                                    return !0
                            }
                        return !1
                    }
                    return !0
                }
                function de(pe, ve, me) {
                    try {
                        ve = new oe(ve,me)
                    } catch {
                        return !1
                    }
                    return ve.test(pe)
                }
                function $e(pe, ve, me, we) {
                    var ye, Le, De, Pe, ze;
                    switch (pe = new X(pe,we),
                    ve = new oe(ve,we),
                    me) {
                    case ">":
                        ye = ae,
                        Le = te,
                        De = re,
                        Pe = ">",
                        ze = ">=";
                        break;
                    case "<":
                        ye = re,
                        Le = J,
                        De = ae,
                        Pe = "<",
                        ze = "<=";
                        break;
                    default:
                        throw new TypeError('Must provide a hilo val of "<" or ">"')
                    }
                    if (de(pe, ve, we))
                        return !1;
                    for (var Be = 0; Be < ve.set.length; ++Be) {
                        var Me = ve.set[Be]
                          , Ae = null
                          , Se = null;
                        if (Me.forEach(function(Ce) {
                            Ce.semver === ie && (Ce = new le(">=0.0.0")),
                            Ae = Ae || Ce,
                            Se = Se || Ce,
                            ye(Ce.semver, Ae.semver, we) ? Ae = Ce : De(Ce.semver, Se.semver, we) && (Se = Ce)
                        }),
                        Ae.operator === Pe || Ae.operator === ze || (!Se.operator || Se.operator === Pe) && Le(pe, Se.semver) || Se.operator === ze && De(pe, Se.semver))
                            return !1
                    }
                    return !0
                }
                le.prototype.parse = function(pe) {
                    var ve = this.loose ? y[W] : y[q]
                      , me = pe.match(ve);
                    if (!me)
                        throw new TypeError("Invalid comparator: " + pe);
                    this.operator = me[1],
                    this.operator === "=" && (this.operator = ""),
                    me[2] ? this.semver = new X(me[2],this.loose) : this.semver = ie
                }
                ,
                le.prototype.toString = function() {
                    return this.value
                }
                ,
                le.prototype.test = function(pe) {
                    return C("Comparator.test", pe, this.loose),
                    this.semver === ie || (typeof pe == "string" && (pe = new X(pe,this.loose)),
                    ne(pe, this.operator, this.semver, this.loose))
                }
                ,
                le.prototype.intersects = function(pe, ve) {
                    if (!(pe instanceof le))
                        throw new TypeError("a Comparator is required");
                    var me;
                    if (this.operator === "")
                        return me = new oe(pe.value,ve),
                        de(this.value, me, ve);
                    if (pe.operator === "")
                        return me = new oe(this.value,ve),
                        de(pe.semver, me, ve);
                    var we = !(this.operator !== ">=" && this.operator !== ">" || pe.operator !== ">=" && pe.operator !== ">")
                      , ye = !(this.operator !== "<=" && this.operator !== "<" || pe.operator !== "<=" && pe.operator !== "<")
                      , Le = this.semver.version === pe.semver.version
                      , De = !(this.operator !== ">=" && this.operator !== "<=" || pe.operator !== ">=" && pe.operator !== "<=")
                      , Pe = ne(this.semver, "<", pe.semver, ve) && (this.operator === ">=" || this.operator === ">") && (pe.operator === "<=" || pe.operator === "<")
                      , ze = ne(this.semver, ">", pe.semver, ve) && (this.operator === "<=" || this.operator === "<") && (pe.operator === ">=" || pe.operator === ">");
                    return we || ye || Le && De || Pe || ze
                }
                ,
                e.Range = oe,
                oe.prototype.format = function() {
                    return this.range = this.set.map(function(pe) {
                        return pe.join(" ").trim()
                    }).join("||").trim(),
                    this.range
                }
                ,
                oe.prototype.toString = function() {
                    return this.range
                }
                ,
                oe.prototype.parseRange = function(pe) {
                    var ve = this.loose;
                    pe = pe.trim(),
                    C("range", pe, ve);
                    var me = ve ? y[K] : y[U];
                    pe = pe.replace(me, he),
                    C("hyphen replace", pe),
                    pe = pe.replace(y[H], "$1$2$3"),
                    C("comparator trim", pe, y[H]),
                    pe = (pe = (pe = pe.replace(y[O], "$1~")).replace(y[V], "$1^")).split(/\s+/).join(" ");
                    var we = ve ? y[W] : y[q]
                      , ye = pe.split(" ").map(function(Le) {
                        return function(De, Pe) {
                            return C("comp", De),
                            De = function(ze, Be) {
                                return ze.trim().split(/\s+/).map(function(Me) {
                                    return function(Ae, Se) {
                                        C("caret", Ae, Se);
                                        var Ce = Se ? y[j] : y[B];
                                        return Ae.replace(Ce, function(ke, je, Ie, Te, Ne) {
                                            var Oe;
                                            return C("caret", Ae, ke, je, Ie, Te, Ne),
                                            fe(je) ? Oe = "" : fe(Ie) ? Oe = ">=" + je + ".0.0 <" + (+je + 1) + ".0.0" : fe(Te) ? Oe = je === "0" ? ">=" + je + "." + Ie + ".0 <" + je + "." + (+Ie + 1) + ".0" : ">=" + je + "." + Ie + ".0 <" + (+je + 1) + ".0.0" : Ne ? (C("replaceCaret pr", Ne),
                                            Ne.charAt(0) !== "-" && (Ne = "-" + Ne),
                                            Oe = je === "0" ? Ie === "0" ? ">=" + je + "." + Ie + "." + Te + Ne + " <" + je + "." + Ie + "." + (+Te + 1) : ">=" + je + "." + Ie + "." + Te + Ne + " <" + je + "." + (+Ie + 1) + ".0" : ">=" + je + "." + Ie + "." + Te + Ne + " <" + (+je + 1) + ".0.0") : (C("no pr"),
                                            Oe = je === "0" ? Ie === "0" ? ">=" + je + "." + Ie + "." + Te + " <" + je + "." + Ie + "." + (+Te + 1) : ">=" + je + "." + Ie + "." + Te + " <" + je + "." + (+Ie + 1) + ".0" : ">=" + je + "." + Ie + "." + Te + " <" + (+je + 1) + ".0.0"),
                                            C("caret return", Oe),
                                            Oe
                                        })
                                    }(Me, Be)
                                }).join(" ")
                            }(De, Pe),
                            C("caret", De),
                            De = function(ze, Be) {
                                return ze.trim().split(/\s+/).map(function(Me) {
                                    return function(Ae, Se) {
                                        var Ce = Se ? y[N] : y[R];
                                        return Ae.replace(Ce, function(ke, je, Ie, Te, Ne) {
                                            var Oe;
                                            return C("tilde", Ae, ke, je, Ie, Te, Ne),
                                            fe(je) ? Oe = "" : fe(Ie) ? Oe = ">=" + je + ".0.0 <" + (+je + 1) + ".0.0" : fe(Te) ? Oe = ">=" + je + "." + Ie + ".0 <" + je + "." + (+Ie + 1) + ".0" : Ne ? (C("replaceTilde pr", Ne),
                                            Ne.charAt(0) !== "-" && (Ne = "-" + Ne),
                                            Oe = ">=" + je + "." + Ie + "." + Te + Ne + " <" + je + "." + (+Ie + 1) + ".0") : Oe = ">=" + je + "." + Ie + "." + Te + " <" + je + "." + (+Ie + 1) + ".0",
                                            C("tilde return", Oe),
                                            Oe
                                        })
                                    }(Me, Be)
                                }).join(" ")
                            }(De, Pe),
                            C("tildes", De),
                            De = function(ze, Be) {
                                return C("replaceXRanges", ze, Be),
                                ze.split(/\s+/).map(function(Me) {
                                    return function(Ae, Se) {
                                        Ae = Ae.trim();
                                        var Ce = Se ? y[P] : y[k];
                                        return Ae.replace(Ce, function(ke, je, Ie, Te, Ne, Oe) {
                                            C("xRange", Ae, ke, je, Ie, Te, Ne, Oe);
                                            var Fe = fe(Ie)
                                              , Re = Fe || fe(Te)
                                              , We = Re || fe(Ne);
                                            return je === "=" && We && (je = ""),
                                            Fe ? ke = je === ">" || je === "<" ? "<0.0.0" : "*" : je && We ? (Re && (Te = 0),
                                            We && (Ne = 0),
                                            je === ">" ? (je = ">=",
                                            Re ? (Ie = +Ie + 1,
                                            Te = 0,
                                            Ne = 0) : We && (Te = +Te + 1,
                                            Ne = 0)) : je === "<=" && (je = "<",
                                            Re ? Ie = +Ie + 1 : Te = +Te + 1),
                                            ke = je + Ie + "." + Te + "." + Ne) : Re ? ke = ">=" + Ie + ".0.0 <" + (+Ie + 1) + ".0.0" : We && (ke = ">=" + Ie + "." + Te + ".0 <" + Ie + "." + (+Te + 1) + ".0"),
                                            C("xRange return", ke),
                                            ke
                                        })
                                    }(Me, Be)
                                }).join(" ")
                            }(De, Pe),
                            C("xrange", De),
                            De = function(ze, Be) {
                                return C("replaceStars", ze, Be),
                                ze.trim().replace(y[G], "")
                            }(De, Pe),
                            C("stars", De),
                            De
                        }(Le, ve)
                    }).join(" ").split(/\s+/);
                    return this.loose && (ye = ye.filter(function(Le) {
                        return !!Le.match(we)
                    })),
                    ye = ye.map(function(Le) {
                        return new le(Le,ve)
                    })
                }
                ,
                oe.prototype.intersects = function(pe, ve) {
                    if (!(pe instanceof oe))
                        throw new TypeError("a Range is required");
                    return this.set.some(function(me) {
                        return me.every(function(we) {
                            return pe.set.some(function(ye) {
                                return ye.every(function(Le) {
                                    return we.intersects(Le, ve)
                                })
                            })
                        })
                    })
                }
                ,
                e.toComparators = function(pe, ve) {
                    return new oe(pe,ve).set.map(function(me) {
                        return me.map(function(we) {
                            return we.value
                        }).join(" ").trim().split(" ")
                    })
                }
                ,
                oe.prototype.test = function(pe) {
                    if (!pe)
                        return !1;
                    typeof pe == "string" && (pe = new X(pe,this.loose));
                    for (var ve = 0; ve < this.set.length; ve++)
                        if (ue(this.set[ve], pe))
                            return !0;
                    return !1
                }
                ,
                e.satisfies = de,
                e.maxSatisfying = function(pe, ve, me) {
                    var we = null
                      , ye = null;
                    try {
                        var Le = new oe(ve,me)
                    } catch {
                        return null
                    }
                    return pe.forEach(function(De) {
                        Le.test(De) && (we && ye.compare(De) !== -1 || (ye = new X(we = De,me)))
                    }),
                    we
                }
                ,
                e.minSatisfying = function(pe, ve, me) {
                    var we = null
                      , ye = null;
                    try {
                        var Le = new oe(ve,me)
                    } catch {
                        return null
                    }
                    return pe.forEach(function(De) {
                        Le.test(De) && (we && ye.compare(De) !== 1 || (ye = new X(we = De,me)))
                    }),
                    we
                }
                ,
                e.validRange = function(pe, ve) {
                    try {
                        return new oe(pe,ve).range || "*"
                    } catch {
                        return null
                    }
                }
                ,
                e.ltr = function(pe, ve, me) {
                    return $e(pe, ve, "<", me)
                }
                ,
                e.gtr = function(pe, ve, me) {
                    return $e(pe, ve, ">", me)
                }
                ,
                e.outside = $e,
                e.prerelease = function(pe, ve) {
                    var me = x(pe, ve);
                    return me && me.prerelease.length ? me.prerelease : null
                }
                ,
                e.intersects = function(pe, ve, me) {
                    return pe = new oe(pe,me),
                    ve = new oe(ve,me),
                    pe.intersects(ve)
                }
                ,
                e.coerce = function(pe) {
                    if (pe instanceof X)
                        return pe;
                    if (typeof pe != "string")
                        return null;
                    var ve = pe.match(y[A]);
                    return ve == null ? null : x((ve[1] || "0") + "." + (ve[2] || "0") + "." + (ve[3] || "0"))
                }
            }
            ).call(this, t(1))
        }
        , function(ce, e) {
            var t, n, C = ce.exports = {};
            function I() {
                throw new Error("setTimeout has not been defined")
            }
            function L() {
                throw new Error("clearTimeout has not been defined")
            }
            function y(h) {
                if (t === setTimeout)
                    return setTimeout(h, 0);
                if ((t === I || !t) && setTimeout)
                    return t = setTimeout,
                    setTimeout(h, 0);
                try {
                    return t(h, 0)
                } catch {
                    try {
                        return t.call(null, h, 0)
                    } catch {
                        return t.call(this, h, 0)
                    }
                }
            }
            (function() {
                try {
                    t = typeof setTimeout == "function" ? setTimeout : I
                } catch {
                    t = I
                }
                try {
                    n = typeof clearTimeout == "function" ? clearTimeout : L
                } catch {
                    n = L
                }
            }
            )();
            var E, $ = [], v = !1, f = -1;
            function g() {
                v && E && (v = !1,
                E.length ? $ = E.concat($) : f = -1,
                $.length && p())
            }
            function p() {
                if (!v) {
                    var h = y(g);
                    v = !0;
                    for (var a = $.length; a; ) {
                        for (E = $,
                        $ = []; ++f < a; )
                            E && E[f].run();
                        f = -1,
                        a = $.length
                    }
                    E = null,
                    v = !1,
                    function(d) {
                        if (n === clearTimeout)
                            return clearTimeout(d);
                        if ((n === L || !n) && clearTimeout)
                            return n = clearTimeout,
                            clearTimeout(d);
                        try {
                            n(d)
                        } catch {
                            try {
                                return n.call(null, d)
                            } catch {
                                return n.call(this, d)
                            }
                        }
                    }(h)
                }
            }
            function i(h, a) {
                this.fun = h,
                this.array = a
            }
            function c() {}
            C.nextTick = function(h) {
                var a = new Array(arguments.length - 1);
                if (arguments.length > 1)
                    for (var d = 1; d < arguments.length; d++)
                        a[d - 1] = arguments[d];
                $.push(new i(h,a)),
                $.length !== 1 || v || y(p)
            }
            ,
            i.prototype.run = function() {
                this.fun.apply(null, this.array)
            }
            ,
            C.title = "browser",
            C.browser = !0,
            C.env = {},
            C.argv = [],
            C.version = "",
            C.versions = {},
            C.on = c,
            C.addListener = c,
            C.once = c,
            C.off = c,
            C.removeListener = c,
            C.removeAllListeners = c,
            C.emit = c,
            C.prependListener = c,
            C.prependOnceListener = c,
            C.listeners = function(h) {
                return []
            }
            ,
            C.binding = function(h) {
                throw new Error("process.binding is not supported")
            }
            ,
            C.cwd = function() {
                return "/"
            }
            ,
            C.chdir = function(h) {
                throw new Error("process.chdir is not supported")
            }
            ,
            C.umask = function() {
                return 0
            }
        }
        ])
    }),
    define(ge[1334], be([1, 0]), function(ce, e) {
        "use strict";
        var t;
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Ts = void 0;
        class n {
            constructor(y, E, $) {
                this.level = y,
                this.key = E,
                this.value = $,
                this.forward = []
            }
        }
        const C = void 0;
        class I {
            constructor(y, E=2 ** 16) {
                this.comparator = y,
                this[t] = "SkipList",
                this.d = 0,
                this.f = 0,
                this.c = Math.max(1, Math.log2(E) | 0),
                this.e = new n(this.c,C,C)
            }
            get size() {
                return this.f
            }
            clear() {
                this.e = new n(this.c,C,C),
                this.f = 0
            }
            has(y) {
                return !!I.g(this, y, this.comparator)
            }
            get(y) {
                return I.g(this, y, this.comparator)?.value
            }
            set(y, E) {
                return I.h(this, y, E, this.comparator) && (this.f += 1),
                this
            }
            delete(y) {
                const E = I.k(this, y, this.comparator);
                return E && (this.f -= 1),
                E
            }
            forEach(y, E) {
                let $ = this.e.forward[0];
                for (; $; )
                    y.call(E, $.value, $.key, this),
                    $ = $.forward[0]
            }
            [(t = Symbol.toStringTag,
            Symbol.iterator)]() {
                return this.entries()
            }
            *entries() {
                let y = this.e.forward[0];
                for (; y; )
                    yield[y.key, y.value],
                    y = y.forward[0]
            }
            *keys() {
                let y = this.e.forward[0];
                for (; y; )
                    yield y.key,
                    y = y.forward[0]
            }
            *values() {
                let y = this.e.forward[0];
                for (; y; )
                    yield y.value,
                    y = y.forward[0]
            }
            toString() {
                let y = "[SkipList]:"
                  , E = this.e.forward[0];
                for (; E; )
                    y += `node(${E.key}, ${E.value}, lvl:${E.level})`,
                    E = E.forward[0];
                return y
            }
            static g(y, E, $) {
                let v = y.e;
                for (let f = y.d - 1; f >= 0; f--)
                    for (; v.forward[f] && $(v.forward[f].key, E) < 0; )
                        v = v.forward[f];
                if (v = v.forward[0],
                v && $(v.key, E) === 0)
                    return v
            }
            static h(y, E, $, v) {
                const f = [];
                let g = y.e;
                for (let p = y.d - 1; p >= 0; p--) {
                    for (; g.forward[p] && v(g.forward[p].key, E) < 0; )
                        g = g.forward[p];
                    f[p] = g
                }
                if (g = g.forward[0],
                g && v(g.key, E) === 0)
                    return g.value = $,
                    !1;
                {
                    const p = I.j(y);
                    if (p > y.d) {
                        for (let i = y.d; i < p; i++)
                            f[i] = y.e;
                        y.d = p
                    }
                    g = new n(p,E,$);
                    for (let i = 0; i < p; i++)
                        g.forward[i] = f[i].forward[i],
                        f[i].forward[i] = g;
                    return !0
                }
            }
            static j(y, E=.5) {
                let $ = 1;
                for (; Math.random() < E && $ < y.c; )
                    $ += 1;
                return $
            }
            static k(y, E, $) {
                const v = [];
                let f = y.e;
                for (let g = y.d - 1; g >= 0; g--) {
                    for (; f.forward[g] && $(f.forward[g].key, E) < 0; )
                        f = f.forward[g];
                    v[g] = f
                }
                if (f = f.forward[0],
                !f || $(f.key, E) !== 0)
                    return !1;
                for (let g = 0; g < y.d && v[g].forward[g] === f; g++)
                    v[g].forward[g] = f.forward[g];
                for (; y.d > 0 && y.e.forward[y.d - 1] === C; )
                    y.d -= 1;
                return !0
            }
        }
        e.$Ts = I
    }),
    define(ge[142], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$fe = void 0;
        const t = globalThis.performance && typeof globalThis.performance.now == "function";
        class n {
            static create(I) {
                return new n(I)
            }
            constructor(I) {
                this.c = t && I === !1 ? Date.now : globalThis.performance.now.bind(globalThis.performance),
                this.a = this.c(),
                this.b = -1
            }
            stop() {
                this.b = this.c()
            }
            reset() {
                this.a = this.c(),
                this.b = -1
            }
            elapsed() {
                return this.b !== -1 ? this.b - this.a : this.c() - this.a
            }
        }
        e.$fe = n
    }),
    define(ge[5], be([1, 0, 14, 224, 2, 216, 142]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ve = e.$ue = e.$te = e.$se = e.$re = e.$qe = e.$pe = e.$oe = e.$ne = e.$me = e.$le = e.$ke = e.$je = e.$he = e.Event = void 0,
        e.$ie = p;
        const y = !1
          , E = !1
          , $ = !1;
        var v;
        (function(N) {
            N.None = ()=>C.$Uc.None;
            function z(ue) {
                if ($) {
                    const {onDidAddListener: de} = ue
                      , $e = c.create();
                    let pe = 0;
                    ue.onDidAddListener = ()=>{
                        ++pe === 2 && (console.warn("snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here"),
                        $e.print()),
                        de?.()
                    }
                }
            }
            function V(ue, de) {
                return x(ue, ()=>{}
                , 0, void 0, !0, void 0, de)
            }
            N.defer = V;
            function B(ue) {
                return (de,$e=null,pe)=>{
                    let ve = !1, me;
                    return me = ue(we=>{
                        if (!ve)
                            return me ? me.dispose() : ve = !0,
                            de.call($e, we)
                    }
                    , null, pe),
                    ve && me.dispose(),
                    me
                }
            }
            N.once = B;
            function j(ue, de, $e) {
                return G((pe,ve=null,me)=>ue(we=>pe.call(ve, de(we)), null, me), $e)
            }
            N.map = j;
            function W(ue, de, $e) {
                return G((pe,ve=null,me)=>ue(we=>{
                    de(we),
                    pe.call(ve, we)
                }
                , null, me), $e)
            }
            N.forEach = W;
            function q(ue, de, $e) {
                return G((pe,ve=null,me)=>ue(we=>de(we) && pe.call(ve, we), null, me), $e)
            }
            N.filter = q;
            function H(ue) {
                return ue
            }
            N.signal = H;
            function U(...ue) {
                return (de,$e=null,pe)=>{
                    const ve = (0,
                    C.$Rc)(...ue.map(me=>me(we=>de.call($e, we))));
                    return Z(ve, pe)
                }
            }
            N.any = U;
            function K(ue, de, $e, pe) {
                let ve = $e;
                return j(ue, me=>(ve = de(ve, me),
                ve), pe)
            }
            N.reduce = K;
            function G(ue, de) {
                let $e;
                const pe = {
                    onWillAddFirstListener() {
                        $e = ue(ve.fire, ve)
                    },
                    onDidRemoveLastListener() {
                        $e?.dispose()
                    }
                };
                de || z(pe);
                const ve = new o(pe);
                return de?.add(ve),
                ve.event
            }
            function Z(ue, de) {
                return de instanceof Array ? de.push(ue) : de && de.add(ue),
                ue
            }
            function x(ue, de, $e=100, pe=!1, ve=!1, me, we) {
                let ye, Le, De, Pe = 0, ze;
                const Be = {
                    leakWarningThreshold: me,
                    onWillAddFirstListener() {
                        ye = ue(Ae=>{
                            Pe++,
                            Le = de(Le, Ae),
                            pe && !De && (Me.fire(Le),
                            Le = void 0),
                            ze = ()=>{
                                const Se = Le;
                                Le = void 0,
                                De = void 0,
                                (!pe || Pe > 1) && Me.fire(Se),
                                Pe = 0
                            }
                            ,
                            typeof $e == "number" ? (clearTimeout(De),
                            De = setTimeout(ze, $e)) : De === void 0 && (De = 0,
                            queueMicrotask(ze))
                        }
                        )
                    },
                    onWillRemoveListener() {
                        ve && Pe > 0 && ze?.()
                    },
                    onDidRemoveLastListener() {
                        ze = void 0,
                        ye.dispose()
                    }
                };
                we || z(Be);
                const Me = new o(Be);
                return we?.add(Me),
                Me.event
            }
            N.debounce = x;
            function X(ue, de=0, $e) {
                return N.debounce(ue, (pe,ve)=>pe ? (pe.push(ve),
                pe) : [ve], de, void 0, !0, void 0, $e)
            }
            N.accumulate = X;
            function Y(ue, de=(pe,ve)=>pe === ve, $e) {
                let pe = !0, ve;
                return q(ue, me=>{
                    const we = pe || !de(me, ve);
                    return pe = !1,
                    ve = me,
                    we
                }
                , $e)
            }
            N.latch = Y;
            function Q(ue, de, $e) {
                return [N.filter(ue, de, $e), N.filter(ue, pe=>!de(pe), $e)]
            }
            N.split = Q;
            function _(ue, de=!1, $e=[], pe) {
                let ve = $e.slice()
                  , me = ue(Le=>{
                    ve ? ve.push(Le) : ye.fire(Le)
                }
                );
                pe && pe.add(me);
                const we = ()=>{
                    ve?.forEach(Le=>ye.fire(Le)),
                    ve = null
                }
                  , ye = new o({
                    onWillAddFirstListener() {
                        me || (me = ue(Le=>ye.fire(Le)),
                        pe && pe.add(me))
                    },
                    onDidAddFirstListener() {
                        ve && (de ? setTimeout(we) : we())
                    },
                    onDidRemoveLastListener() {
                        me && me.dispose(),
                        me = null
                    }
                });
                return pe && pe.add(ye),
                ye.event
            }
            N.buffer = _;
            function ae(ue, de) {
                return (pe,ve,me)=>{
                    const we = de(new se);
                    return ue(function(ye) {
                        const Le = we.evaluate(ye);
                        Le !== re && pe.call(ve, Le)
                    }, void 0, me)
                }
            }
            N.chain = ae;
            const re = Symbol("HaltChainable");
            class se {
                constructor() {
                    this.f = []
                }
                map(de) {
                    return this.f.push(de),
                    this
                }
                forEach(de) {
                    return this.f.push($e=>(de($e),
                    $e)),
                    this
                }
                filter(de) {
                    return this.f.push($e=>de($e) ? $e : re),
                    this
                }
                reduce(de, $e) {
                    let pe = $e;
                    return this.f.push(ve=>(pe = de(pe, ve),
                    pe)),
                    this
                }
                latch(de=($e,pe)=>$e === pe) {
                    let $e = !0, pe;
                    return this.f.push(ve=>{
                        const me = $e || !de(ve, pe);
                        return $e = !1,
                        pe = ve,
                        me ? ve : re
                    }
                    ),
                    this
                }
                evaluate(de) {
                    for (const $e of this.f)
                        if (de = $e(de),
                        de === re)
                            break;
                    return de
                }
            }
            function ee(ue, de, $e=pe=>pe) {
                const pe = (...ye)=>we.fire($e(...ye))
                  , ve = ()=>ue.on(de, pe)
                  , me = ()=>ue.removeListener(de, pe)
                  , we = new o({
                    onWillAddFirstListener: ve,
                    onDidRemoveLastListener: me
                });
                return we.event
            }
            N.fromNodeEventEmitter = ee;
            function J(ue, de, $e=pe=>pe) {
                const pe = (...ye)=>we.fire($e(...ye))
                  , ve = ()=>ue.addEventListener(de, pe)
                  , me = ()=>ue.removeEventListener(de, pe)
                  , we = new o({
                    onWillAddFirstListener: ve,
                    onDidRemoveLastListener: me
                });
                return we.event
            }
            N.fromDOMEventEmitter = J;
            function te(ue) {
                return new Promise(de=>B(ue)(de))
            }
            N.toPromise = te;
            function ne(ue) {
                const de = new o;
                return ue.then($e=>{
                    de.fire($e)
                }
                , ()=>{
                    de.fire(void 0)
                }
                ).finally(()=>{
                    de.dispose()
                }
                ),
                de.event
            }
            N.fromPromise = ne;
            function le(ue, de) {
                return ue($e=>de.fire($e))
            }
            N.forward = le;
            function ie(ue, de, $e) {
                return de($e),
                ue(pe=>de(pe))
            }
            N.runAndSubscribe = ie;
            class oe {
                constructor(de, $e) {
                    this._observable = de,
                    this.f = 0,
                    this.g = !1;
                    const pe = {
                        onWillAddFirstListener: ()=>{
                            de.addObserver(this)
                        }
                        ,
                        onDidRemoveLastListener: ()=>{
                            de.removeObserver(this)
                        }
                    };
                    $e || z(pe),
                    this.emitter = new o(pe),
                    $e && $e.add(this.emitter)
                }
                beginUpdate(de) {
                    this.f++
                }
                handlePossibleChange(de) {}
                handleChange(de, $e) {
                    this.g = !0
                }
                endUpdate(de) {
                    this.f--,
                    this.f === 0 && (this._observable.reportChanges(),
                    this.g && (this.g = !1,
                    this.emitter.fire(this._observable.get())))
                }
            }
            function fe(ue, de) {
                return new oe(ue,de).emitter.event
            }
            N.fromObservable = fe;
            function he(ue) {
                return (de,$e,pe)=>{
                    let ve = 0
                      , me = !1;
                    const we = {
                        beginUpdate() {
                            ve++
                        },
                        endUpdate() {
                            ve--,
                            ve === 0 && (ue.reportChanges(),
                            me && (me = !1,
                            de.call($e)))
                        },
                        handlePossibleChange() {},
                        handleChange() {
                            me = !0
                        }
                    };
                    ue.addObserver(we),
                    ue.reportChanges();
                    const ye = {
                        dispose() {
                            ue.removeObserver(we)
                        }
                    };
                    return pe instanceof C.$Tc ? pe.add(ye) : Array.isArray(pe) && pe.push(ye),
                    ye
                }
            }
            N.fromObservableLight = he
        }
        )(v || (e.Event = v = {}));
        class f {
            static{this.all = new Set
            }static{this.f = 0
            }constructor(z) {
                this.listenerCount = 0,
                this.invocationCount = 0,
                this.elapsedOverall = 0,
                this.durations = [],
                this.name = `${z}_${f.f++}`,
                f.all.add(this)
            }
            start(z) {
                this.g = new L.$fe,
                this.listenerCount = z
            }
            stop() {
                if (this.g) {
                    const z = this.g.elapsed();
                    this.durations.push(z),
                    this.elapsedOverall += z,
                    this.invocationCount += 1,
                    this.g = void 0
                }
            }
        }
        e.$he = f;
        let g = -1;
        function p(N) {
            const z = g;
            return g = N,
            {
                dispose() {
                    g = z
                }
            }
        }
        class i {
            static{this.f = 1
            }constructor(z, V, B=(i.f++).toString(16).padStart(3, "0")) {
                this.j = z,
                this.threshold = V,
                this.name = B,
                this.h = 0
            }
            dispose() {
                this.g?.clear()
            }
            check(z, V) {
                const B = this.threshold;
                if (B <= 0 || V < B)
                    return;
                this.g || (this.g = new Map);
                const j = this.g.get(z.value) || 0;
                if (this.g.set(z.value, j + 1),
                this.h -= 1,
                this.h <= 0) {
                    this.h = B * .5;
                    const [W,q] = this.getMostFrequentStack()
                      , H = `[${this.name}] potential listener LEAK detected, having ${V} listeners already. MOST frequent listener (${q}):`;
                    console.warn(H),
                    console.warn(W);
                    const U = new h(H,W);
                    this.j(U)
                }
                return ()=>{
                    const W = this.g.get(z.value) || 0;
                    this.g.set(z.value, W - 1)
                }
            }
            getMostFrequentStack() {
                if (!this.g)
                    return;
                let z, V = 0;
                for (const [B,j] of this.g)
                    (!z || V < j) && (z = [B, j],
                    V = j);
                return z
            }
        }
        class c {
            static create() {
                const z = new Error;
                return new c(z.stack ?? "")
            }
            constructor(z) {
                this.value = z
            }
            print() {
                console.warn(this.value.split(`
`).slice(2).join(`
`))
            }
        }
        class h extends Error {
            constructor(z, V) {
                super(z),
                this.name = "ListenerLeakError",
                this.stack = V
            }
        }
        e.$je = h;
        class a extends Error {
            constructor(z, V) {
                super(z),
                this.name = "ListenerRefusalError",
                this.stack = V
            }
        }
        e.$ke = a;
        let d = 0;
        class u {
            constructor(z) {
                this.value = z,
                this.id = d++
            }
        }
        const s = 2
          , r = (N,z)=>{
            if (N instanceof u)
                z(N);
            else
                for (let V = 0; V < N.length; V++) {
                    const B = N[V];
                    B && z(B)
                }
        }
        ;
        let l;
        if (y) {
            const N = [];
            setInterval(()=>{
                N.length !== 0 && (console.warn("[LEAKING LISTENERS] GC'ed these listeners that were NOT yet disposed:"),
                console.warn(N.join(`
`)),
                N.length = 0)
            }
            , 3e3),
            l = new FinalizationRegistry(z=>{
                typeof z == "string" && N.push(z)
            }
            )
        }
        class o {
            constructor(z) {
                this.z = 0,
                this.f = z,
                this.g = g > 0 || this.f?.leakWarningThreshold ? new i(z?.onListenerError ?? t.$Y,this.f?.leakWarningThreshold ?? g) : void 0,
                this.j = this.f?._profName ? new f(this.f._profName) : void 0,
                this.w = this.f?.deliveryQueue
            }
            dispose() {
                if (!this.m) {
                    if (this.m = !0,
                    this.w?.current === this && this.w.reset(),
                    this.u) {
                        if (E) {
                            const z = this.u;
                            queueMicrotask(()=>{
                                r(z, V=>V.stack?.print())
                            }
                            )
                        }
                        this.u = void 0,
                        this.z = 0
                    }
                    this.f?.onDidRemoveLastListener?.(),
                    this.g?.dispose()
                }
            }
            get event() {
                return this.q ??= (z,V,B)=>{
                    if (this.g && this.z > this.g.threshold ** 2) {
                        const U = `[${this.g.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this.z} vs ${this.g.threshold})`;
                        console.warn(U);
                        const K = this.g.getMostFrequentStack() ?? ["UNKNOWN stack", -1]
                          , G = new a(`${U}. HINT: Stack shows most frequent listener (${K[1]}-times)`,K[0]);
                        return (this.f?.onListenerError || t.$Y)(G),
                        C.$Uc.None
                    }
                    if (this.m)
                        return C.$Uc.None;
                    V && (z = z.bind(V));
                    const j = new u(z);
                    let W, q;
                    this.g && this.z >= Math.ceil(this.g.threshold * .2) && (j.stack = c.create(),
                    W = this.g.check(j.stack, this.z + 1)),
                    E && (j.stack = q ?? c.create()),
                    this.u ? this.u instanceof u ? (this.w ??= new m,
                    this.u = [this.u, j]) : this.u.push(j) : (this.f?.onWillAddFirstListener?.(this),
                    this.u = j,
                    this.f?.onDidAddFirstListener?.(this)),
                    this.z++;
                    const H = (0,
                    C.$Sc)(()=>{
                        l?.unregister(H),
                        W?.(),
                        this.A(j)
                    }
                    );
                    if (B instanceof C.$Tc ? B.add(H) : Array.isArray(B) && B.push(H),
                    l) {
                        const U = new Error().stack.split(`
`).slice(2, 3).join(`
`).trim()
                          , K = /(file:|vscode-file:\/\/vscode-app)?(\/[^:]*:\d+:\d+)/.exec(U);
                        l.register(H, K?.[2] ?? U, H)
                    }
                    return H
                }
                ,
                this.q
            }
            A(z) {
                if (this.f?.onWillRemoveListener?.(this),
                !this.u)
                    return;
                if (this.z === 1) {
                    this.u = void 0,
                    this.f?.onDidRemoveLastListener?.(this),
                    this.z = 0;
                    return
                }
                const V = this.u
                  , B = V.indexOf(z);
                if (B === -1)
                    throw console.log("disposed?", this.m),
                    console.log("size?", this.z),
                    console.log("arr?", JSON.stringify(this.u)),
                    new Error("Attempted to dispose unknown listener");
                this.z--,
                V[B] = void 0;
                const j = this.w.current === this;
                if (this.z * s <= V.length) {
                    let W = 0;
                    for (let q = 0; q < V.length; q++)
                        V[q] ? V[W++] = V[q] : j && (this.w.end--,
                        W < this.w.i && this.w.i--);
                    V.length = W
                }
            }
            B(z, V) {
                if (!z)
                    return;
                const B = this.f?.onListenerError || t.$Y;
                if (!B) {
                    z.value(V);
                    return
                }
                try {
                    z.value(V)
                } catch (j) {
                    B(j)
                }
            }
            C(z) {
                const V = z.current.u;
                for (; z.i < z.end; )
                    this.B(V[z.i++], z.value);
                z.reset()
            }
            fire(z) {
                if (this.w?.current && (this.C(this.w),
                this.j?.stop()),
                this.j?.start(this.z),
                this.u)
                    if (this.u instanceof u)
                        this.B(this.u, z);
                    else {
                        const V = this.w;
                        V.enqueue(this, z, this.u.length),
                        this.C(V)
                    }
                this.j?.stop()
            }
            hasListeners() {
                return this.z > 0
            }
        }
        e.$le = o;
        const b = ()=>new m;
        e.$me = b;
        class m {
            constructor() {
                this.i = -1,
                this.end = 0
            }
            enqueue(z, V, B) {
                this.i = 0,
                this.end = B,
                this.current = z,
                this.value = V
            }
            reset() {
                this.i = this.end,
                this.current = void 0,
                this.value = void 0
            }
        }
        class w extends o {
            async fireAsync(z, V, B) {
                if (this.u)
                    for (this.h || (this.h = new I.$5c),
                    r(this.u, j=>this.h.push([j.value, z])); this.h.size > 0 && !V.isCancellationRequested; ) {
                        const [j,W] = this.h.shift()
                          , q = []
                          , H = {
                            ...W,
                            token: V,
                            waitUntil: U=>{
                                if (Object.isFrozen(q))
                                    throw new Error("waitUntil can NOT be called asynchronous");
                                B && (U = B(U, j)),
                                q.push(U)
                            }
                        };
                        try {
                            j(H)
                        } catch (U) {
                            (0,
                            t.$Y)(U);
                            continue
                        }
                        Object.freeze(q),
                        await Promise.allSettled(q).then(U=>{
                            for (const K of U)
                                K.status === "rejected" && (0,
                                t.$Y)(K.reason)
                        }
                        )
                    }
            }
        }
        e.$ne = w;
        class S extends o {
            get isPaused() {
                return this.h !== 0
            }
            constructor(z) {
                super(z),
                this.h = 0,
                this.s = new I.$5c,
                this.t = z?.merge
            }
            pause() {
                this.h++
            }
            resume() {
                if (this.h !== 0 && --this.h === 0)
                    if (this.t) {
                        if (this.s.size > 0) {
                            const z = Array.from(this.s);
                            this.s.clear(),
                            super.fire(this.t(z))
                        }
                    } else
                        for (; !this.h && this.s.size !== 0; )
                            super.fire(this.s.shift())
            }
            fire(z) {
                this.z && (this.h !== 0 ? this.s.push(z) : super.fire(z))
            }
        }
        e.$oe = S;
        class T extends S {
            constructor(z) {
                super(z),
                this.k = z.delay ?? 100
            }
            fire(z) {
                this.o || (this.pause(),
                this.o = setTimeout(()=>{
                    this.o = void 0,
                    this.resume()
                }
                , this.k)),
                super.fire(z)
            }
        }
        e.$pe = T;
        class D extends o {
            constructor(z) {
                super(z),
                this.h = [],
                this.k = z?.merge
            }
            fire(z) {
                this.hasListeners() && (this.h.push(z),
                this.h.length === 1 && queueMicrotask(()=>{
                    this.k ? super.fire(this.k(this.h)) : this.h.forEach(V=>super.fire(V)),
                    this.h = []
                }
                ))
            }
        }
        e.$qe = D;
        class k {
            constructor() {
                this.g = !1,
                this.h = [],
                this.f = new o({
                    onWillAddFirstListener: ()=>this.j(),
                    onDidRemoveLastListener: ()=>this.k()
                })
            }
            get event() {
                return this.f.event
            }
            add(z) {
                const V = {
                    event: z,
                    listener: null
                };
                this.h.push(V),
                this.g && this.m(V);
                const B = ()=>{
                    this.g && this.o(V);
                    const j = this.h.indexOf(V);
                    this.h.splice(j, 1)
                }
                ;
                return (0,
                C.$Sc)((0,
                n.$cb)(B))
            }
            j() {
                this.g = !0,
                this.h.forEach(z=>this.m(z))
            }
            k() {
                this.g = !1,
                this.h.forEach(z=>this.o(z))
            }
            m(z) {
                z.listener = z.event(V=>this.f.fire(V))
            }
            o(z) {
                z.listener?.dispose(),
                z.listener = null
            }
            dispose() {
                this.f.dispose();
                for (const z of this.h)
                    z.listener?.dispose();
                this.h = []
            }
        }
        e.$re = k;
        class P {
            constructor(z, V, B, j) {
                this.f = new C.$Tc;
                const W = this.f.add(new k)
                  , q = this.f.add(new C.$4c);
                function H(U) {
                    q.set(U, W.add(j(U)))
                }
                for (const U of z)
                    H(U);
                this.f.add(V(U=>{
                    H(U)
                }
                )),
                this.f.add(B(U=>{
                    q.deleteAndDispose(U)
                }
                )),
                this.event = W.event
            }
            dispose() {
                this.f.dispose()
            }
        }
        e.$se = P;
        class A {
            constructor() {
                this.f = []
            }
            wrapEvent(z, V, B) {
                return (j,W,q)=>z(H=>{
                    const U = this.f[this.f.length - 1];
                    if (!V) {
                        U ? U.buffers.push(()=>j.call(W, H)) : j.call(W, H);
                        return
                    }
                    const K = U;
                    if (!K) {
                        j.call(W, V(B, H));
                        return
                    }
                    K.items ??= [],
                    K.items.push(H),
                    K.buffers.length === 0 && U.buffers.push(()=>{
                        K.reducedResult ??= B ? K.items.reduce(V, B) : K.items.reduce(V),
                        j.call(W, K.reducedResult)
                    }
                    )
                }
                , void 0, q)
            }
            bufferEvents(z) {
                const V = {
                    buffers: new Array
                };
                this.f.push(V);
                const B = z();
                return this.f.pop(),
                V.buffers.forEach(j=>j()),
                B
            }
        }
        e.$te = A;
        class M {
            constructor() {
                this.f = !1,
                this.g = v.None,
                this.h = C.$Uc.None,
                this.j = new o({
                    onDidAddFirstListener: ()=>{
                        this.f = !0,
                        this.h = this.g(this.j.fire, this.j)
                    }
                    ,
                    onDidRemoveLastListener: ()=>{
                        this.f = !1,
                        this.h.dispose()
                    }
                }),
                this.event = this.j.event
            }
            set input(z) {
                this.g = z,
                this.f && (this.h.dispose(),
                this.h = z(this.j.fire, this.j))
            }
            dispose() {
                this.h.dispose(),
                this.j.dispose()
            }
        }
        e.$ue = M;
        class O {
            static const(z) {
                return new R(z)
            }
            constructor(z) {
                this.g = z,
                this.f = new o,
                this.onDidChange = this.f.event
            }
            get value() {
                return this.g
            }
            set value(z) {
                z !== this.g && (this.g = z,
                this.f.fire(void 0))
            }
        }
        e.$ve = O;
        class R {
            constructor(z) {
                this.value = z,
                this.onDidChange = v.None
            }
        }
    }),
    define(ge[1335], be([1, 0, 78, 14, 5, 2]), function(ce, e, t, n, C, I) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$bS = void 0;
        class L extends I.$Uc {
            constructor(E) {
                if (super(),
                this.c = E,
                this.b = this.B(new C.$le),
                this.onDidReceiveData = this.b.event,
                "BroadcastChannel"in t.$_R)
                    try {
                        this.a = new BroadcastChannel(E);
                        const $ = v=>{
                            this.b.fire(v.data)
                        }
                        ;
                        this.a.addEventListener("message", $),
                        this.B((0,
                        I.$Sc)(()=>{
                            this.a && (this.a.removeEventListener("message", $),
                            this.a.close())
                        }
                        ))
                    } catch ($) {
                        console.warn("Error while creating broadcast channel. Falling back to localStorage.", (0,
                        n.$9)($))
                    }
                this.a || (this.c = `BroadcastDataChannel.${E}`,
                this.f())
            }
            f() {
                const E = $=>{
                    $.key === this.c && $.newValue && this.b.fire(JSON.parse($.newValue))
                }
                ;
                t.$_R.addEventListener("storage", E),
                this.B((0,
                I.$Sc)(()=>t.$_R.removeEventListener("storage", E)))
            }
            postData(E) {
                this.a ? this.a.postMessage(E) : (localStorage.removeItem(this.c),
                localStorage.setItem(this.c, JSON.stringify(E)))
            }
        }
        e.$bS = L
    }),
    define(ge[120], be([1, 0, 78, 5]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$rS = e.$qS = e.$pS = e.$oS = e.$nS = e.$mS = e.$lS = e.$kS = e.$fS = void 0,
        e.$cS = I,
        e.$dS = L,
        e.$eS = y,
        e.$gS = E,
        e.$hS = $,
        e.$iS = v,
        e.$jS = f,
        e.$sS = i,
        e.$tS = c,
        e.$uS = h;
        class C {
            constructor() {
                this.a = new Map,
                this.b = new n.$le,
                this.onDidChangeZoomLevel = this.b.event,
                this.c = new Map,
                this.d = new n.$le,
                this.onDidChangeFullscreen = this.d.event,
                this.e = new Map
            }
            static{this.INSTANCE = new C
            }getZoomLevel(d) {
                return this.a.get(this.f(d)) ?? 0
            }
            setZoomLevel(d, u) {
                if (this.getZoomLevel(u) === d)
                    return;
                const s = this.f(u);
                this.a.set(s, d),
                this.b.fire(s)
            }
            getZoomFactor(d) {
                return this.c.get(this.f(d)) ?? 1
            }
            setZoomFactor(d, u) {
                this.c.set(this.f(u), d)
            }
            setFullscreen(d, u) {
                if (this.isFullscreen(u) === d)
                    return;
                const s = this.f(u);
                this.e.set(s, d),
                this.d.fire(s)
            }
            isFullscreen(d) {
                return !!this.e.get(this.f(d))
            }
            f(d) {
                return d.vscodeWindowId
            }
        }
        function I(a, d, u) {
            typeof d == "string" && (d = a.matchMedia(d)),
            d.addEventListener("change", u)
        }
        function L(a, d) {
            C.INSTANCE.setZoomLevel(a, d)
        }
        function y(a) {
            return C.INSTANCE.getZoomLevel(a)
        }
        e.$fS = C.INSTANCE.onDidChangeZoomLevel;
        function E(a) {
            return C.INSTANCE.getZoomFactor(a)
        }
        function $(a, d) {
            C.INSTANCE.setZoomFactor(a, d)
        }
        function v(a, d) {
            C.INSTANCE.setFullscreen(a, d)
        }
        function f(a) {
            return C.INSTANCE.isFullscreen(a)
        }
        e.$kS = C.INSTANCE.onDidChangeFullscreen;
        const g = navigator.userAgent;
        e.$lS = g.indexOf("Firefox") >= 0,
        e.$mS = g.indexOf("AppleWebKit") >= 0,
        e.$nS = g.indexOf("Chrome") >= 0,
        e.$oS = !e.$nS && g.indexOf("Safari") >= 0,
        e.$pS = !e.$nS && !e.$oS && e.$mS,
        e.$qS = g.indexOf("Electron/") >= 0,
        e.$rS = g.indexOf("Android") >= 0;
        let p = !1;
        if (typeof t.$_R.matchMedia == "function") {
            const a = t.$_R.matchMedia("(display-mode: standalone) or (display-mode: window-controls-overlay)")
              , d = t.$_R.matchMedia("(display-mode: fullscreen)");
            p = a.matches,
            I(t.$_R, a, ({matches: u})=>{
                p && d.matches || (p = u)
            }
            )
        }
        function i() {
            return p
        }
        function c() {
            return navigator?.windowControlsOverlay?.visible
        }
        function h() {
            return navigator?.windowControlsOverlay?.getTitlebarAreaRect()
        }
    }),
    define(ge[301], be([1, 0, 120, 78, 12]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$vS = e.KeyboardSupport = void 0,
        t = xe(t),
        C = xe(C);
        var I;
        (function(L) {
            L[L.Always = 0] = "Always",
            L[L.FullScreen = 1] = "FullScreen",
            L[L.None = 2] = "None"
        }
        )(I || (e.KeyboardSupport = I = {})),
        e.$vS = {
            clipboard: {
                writeText: C.$n || document.queryCommandSupported && document.queryCommandSupported("copy") || !!(navigator && navigator.clipboard && navigator.clipboard.writeText),
                readText: C.$n || !!(navigator && navigator.clipboard && navigator.clipboard.readText)
            },
            keyboard: C.$n || t.$sS() ? I.Always : navigator.keyboard || t.$oS ? I.FullScreen : I.None,
            touch: "ontouchstart"in n.$_R || navigator.maxTouchPoints > 0,
            pointerEvents: n.$_R.PointerEvent && ("ontouchstart"in n.$_R || navigator.maxTouchPoints > 0)
        }
    }),
    define(ge[217], be([1, 0, 5]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$UU = void 0;
        class n {
            get event() {
                return this.a.event
            }
            constructor(I, L, y) {
                const E = $=>this.a.fire($);
                this.a = new t.$le({
                    onWillAddFirstListener: ()=>I.addEventListener(L, E, y),
                    onDidRemoveLastListener: ()=>I.removeEventListener(L, E, y)
                })
            }
            dispose() {
                this.a.dispose()
            }
        }
        e.$UU = n
    }),
    define(ge[100], be([1, 0, 120, 17, 322, 12]), function(ce, e, t, n, C, I) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$DS = void 0,
        e.$BS = f,
        e.$CS = g,
        t = xe(t),
        I = xe(I);
        function L(i) {
            if (i.charCode) {
                const h = String.fromCharCode(i.charCode).toUpperCase();
                return n.KeyCodeUtils.fromString(h)
            }
            const c = i.keyCode;
            if (c === 3)
                return n.KeyCode.PauseBreak;
            if (t.$lS)
                switch (c) {
                case 59:
                    return n.KeyCode.Semicolon;
                case 60:
                    if (I.$l)
                        return n.KeyCode.IntlBackslash;
                    break;
                case 61:
                    return n.KeyCode.Equal;
                case 107:
                    return n.KeyCode.NumpadAdd;
                case 109:
                    return n.KeyCode.NumpadSubtract;
                case 173:
                    return n.KeyCode.Minus;
                case 224:
                    if (I.$k)
                        return n.KeyCode.Meta;
                    break
                }
            else if (t.$mS) {
                if (I.$k && c === 93)
                    return n.KeyCode.Meta;
                if (!I.$k && c === 92)
                    return n.KeyCode.Meta
            }
            return n.$Tr[c] || n.KeyCode.Unknown
        }
        const y = I.$k ? n.KeyMod.WinCtrl : n.KeyMod.CtrlCmd
          , E = n.KeyMod.Alt
          , $ = n.KeyMod.Shift
          , v = I.$k ? n.KeyMod.CtrlCmd : n.KeyMod.WinCtrl;
        function f(i) {
            const c = [];
            return i.ctrlKey && c.push("ctrl"),
            i.shiftKey && c.push("shift"),
            i.altKey && c.push("alt"),
            i.metaKey && c.push("meta"),
            `modifiers: [${c.join(",")}], code: ${i.code}, keyCode: ${i.keyCode}, key: ${i.key}`
        }
        function g(i) {
            const c = [];
            return i.ctrlKey && c.push("ctrl"),
            i.shiftKey && c.push("shift"),
            i.altKey && c.push("alt"),
            i.metaKey && c.push("meta"),
            `modifiers: [${c.join(",")}], code: ${i.code}, keyCode: ${i.keyCode} ('${n.KeyCodeUtils.toString(i.keyCode)}')`
        }
        class p {
            constructor(c) {
                this._standardKeyboardEventBrand = !0;
                const h = c;
                this.browserEvent = h,
                this.target = h.target,
                this.ctrlKey = h.ctrlKey,
                this.shiftKey = h.shiftKey,
                this.altKey = h.altKey,
                this.metaKey = h.metaKey,
                this.altGraphKey = h.getModifierState?.("AltGraph"),
                this.keyCode = L(h),
                this.code = h.code,
                this.ctrlKey = this.ctrlKey || this.keyCode === n.KeyCode.Ctrl,
                this.altKey = this.altKey || this.keyCode === n.KeyCode.Alt,
                this.shiftKey = this.shiftKey || this.keyCode === n.KeyCode.Shift,
                this.metaKey = this.metaKey || this.keyCode === n.KeyCode.Meta,
                this.a = this.c(),
                this.b = this.d()
            }
            preventDefault() {
                this.browserEvent && this.browserEvent.preventDefault && this.browserEvent.preventDefault()
            }
            stopPropagation() {
                this.browserEvent && this.browserEvent.stopPropagation && this.browserEvent.stopPropagation()
            }
            toKeyCodeChord() {
                return this.b
            }
            equals(c) {
                return this.a === c
            }
            c() {
                let c = n.KeyCode.Unknown;
                this.keyCode !== n.KeyCode.Ctrl && this.keyCode !== n.KeyCode.Shift && this.keyCode !== n.KeyCode.Alt && this.keyCode !== n.KeyCode.Meta && (c = this.keyCode);
                let h = 0;
                return this.ctrlKey && (h |= y),
                this.altKey && (h |= E),
                this.shiftKey && (h |= $),
                this.metaKey && (h |= v),
                h |= c,
                h
            }
            d() {
                let c = n.KeyCode.Unknown;
                return this.keyCode !== n.KeyCode.Ctrl && this.keyCode !== n.KeyCode.Shift && this.keyCode !== n.KeyCode.Alt && this.keyCode !== n.KeyCode.Meta && (c = this.keyCode),
                new C.$2r(this.ctrlKey,this.shiftKey,this.altKey,this.metaKey,c)
            }
        }
        e.$DS = p
    }),
    define(ge[134], be([1, 0, 120, 736, 12]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$AS = e.$zS = e.$yS = void 0,
        t = xe(t),
        C = xe(C);
        class I {
            constructor($, v) {
                this.timestamp = Date.now(),
                this.browserEvent = v,
                this.leftButton = v.button === 0,
                this.middleButton = v.button === 1,
                this.rightButton = v.button === 2,
                this.buttons = v.buttons,
                this.target = v.target,
                this.detail = v.detail || 1,
                v.type === "dblclick" && (this.detail = 2),
                this.ctrlKey = v.ctrlKey,
                this.shiftKey = v.shiftKey,
                this.altKey = v.altKey,
                this.metaKey = v.metaKey,
                typeof v.pageX == "number" ? (this.posx = v.pageX,
                this.posy = v.pageY) : (this.posx = v.clientX + this.target.ownerDocument.body.scrollLeft + this.target.ownerDocument.documentElement.scrollLeft,
                this.posy = v.clientY + this.target.ownerDocument.body.scrollTop + this.target.ownerDocument.documentElement.scrollTop);
                const f = n.$wS.getPositionOfChildWindowRelativeToAncestorWindow($, v.view);
                this.posx -= f.left,
                this.posy -= f.top
            }
            preventDefault() {
                this.browserEvent.preventDefault()
            }
            stopPropagation() {
                this.browserEvent.stopPropagation()
            }
        }
        e.$yS = I;
        class L extends I {
            constructor($, v) {
                super($, v),
                this.dataTransfer = v.dataTransfer
            }
        }
        e.$zS = L;
        class y {
            constructor($, v=0, f=0) {
                this.browserEvent = $ || null,
                this.target = $ ? $.target || $.targetNode || $.srcElement : null,
                this.deltaY = f,
                this.deltaX = v;
                let g = !1;
                if (t.$nS) {
                    const p = navigator.userAgent.match(/Chrome\/(\d+)/);
                    g = (p ? parseInt(p[1]) : 123) <= 122
                }
                if ($) {
                    const p = $
                      , i = $
                      , c = $.view?.devicePixelRatio || 1;
                    if (typeof p.wheelDeltaY < "u")
                        g ? this.deltaY = p.wheelDeltaY / (120 * c) : this.deltaY = p.wheelDeltaY / 120;
                    else if (typeof i.VERTICAL_AXIS < "u" && i.axis === i.VERTICAL_AXIS)
                        this.deltaY = -i.detail / 3;
                    else if ($.type === "wheel") {
                        const h = $;
                        h.deltaMode === h.DOM_DELTA_LINE ? t.$lS && !C.$k ? this.deltaY = -$.deltaY / 3 : this.deltaY = -$.deltaY : this.deltaY = -$.deltaY / 40
                    }
                    if (typeof p.wheelDeltaX < "u")
                        t.$oS && C.$j ? this.deltaX = -(p.wheelDeltaX / 120) : g ? this.deltaX = p.wheelDeltaX / (120 * c) : this.deltaX = p.wheelDeltaX / 120;
                    else if (typeof i.HORIZONTAL_AXIS < "u" && i.axis === i.HORIZONTAL_AXIS)
                        this.deltaX = -$.detail / 3;
                    else if ($.type === "wheel") {
                        const h = $;
                        h.deltaMode === h.DOM_DELTA_LINE ? t.$lS && !C.$k ? this.deltaX = -$.deltaX / 3 : this.deltaX = -$.deltaX : this.deltaX = -$.deltaX / 40
                    }
                    this.deltaY === 0 && this.deltaX === 0 && $.wheelDelta && (g ? this.deltaY = $.wheelDelta / (120 * c) : this.deltaY = $.wheelDelta / 120)
                }
            }
            preventDefault() {
                this.browserEvent?.preventDefault()
            }
            stopPropagation() {
                this.browserEvent?.stopPropagation()
            }
        }
        e.$AS = y
    }),
    define(ge[29], be([1, 0, 5]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$we = e.CancellationToken = void 0,
        e.$xe = y;
        const n = Object.freeze(function(E, $) {
            const v = setTimeout(E.bind($), 0);
            return {
                dispose() {
                    clearTimeout(v)
                }
            }
        });
        var C;
        (function(E) {
            function $(v) {
                return v === E.None || v === E.Cancelled || v instanceof I ? !0 : !v || typeof v != "object" ? !1 : typeof v.isCancellationRequested == "boolean" && typeof v.onCancellationRequested == "function"
            }
            E.isCancellationToken = $,
            E.None = Object.freeze({
                isCancellationRequested: !1,
                onCancellationRequested: t.Event.None
            }),
            E.Cancelled = Object.freeze({
                isCancellationRequested: !0,
                onCancellationRequested: n
            })
        }
        )(C || (e.CancellationToken = C = {}));
        class I {
            constructor() {
                this.a = !1,
                this.b = null
            }
            cancel() {
                this.a || (this.a = !0,
                this.b && (this.b.fire(void 0),
                this.dispose()))
            }
            get isCancellationRequested() {
                return this.a
            }
            get onCancellationRequested() {
                return this.a ? n : (this.b || (this.b = new t.$le),
                this.b.event)
            }
            dispose() {
                this.b && (this.b.dispose(),
                this.b = null)
            }
        }
        class L {
            constructor($) {
                this.f = void 0,
                this.g = void 0,
                this.g = $ && $.onCancellationRequested(this.cancel, this)
            }
            get token() {
                return this.f || (this.f = new I),
                this.f
            }
            cancel() {
                this.f ? this.f instanceof I && this.f.cancel() : this.f = C.Cancelled
            }
            dispose($=!1) {
                $ && this.cancel(),
                this.g?.dispose(),
                this.f ? this.f instanceof I && this.f.dispose() : this.f = C.None
            }
        }
        e.$we = L;
        function y(E) {
            const $ = new L;
            return E.add({
                dispose() {
                    $.cancel()
                }
            }),
            $.token
        }
    }),
    define(ge[516], be([1, 0, 29]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$_e = e.$$e = e.$9e = void 0,
        e.$0e = C;
        class n {
            constructor(E) {
                this.b = E,
                this.a = null
            }
            get() {
                if (this.a)
                    return this.a;
                const E = new t.$we
                  , $ = this.b(E.token);
                return this.a = {
                    promise: $,
                    dispose: ()=>{
                        this.a = null,
                        E.cancel(),
                        E.dispose()
                    }
                },
                this.a
            }
        }
        e.$9e = n;
        function C(y) {
            return y
        }
        class I {
            constructor(E, $) {
                this.a = void 0,
                this.b = void 0,
                typeof E == "function" ? (this.c = E,
                this.d = C) : (this.c = $,
                this.d = E.getCacheKey)
            }
            get(E) {
                const $ = this.d(E);
                return this.b !== $ && (this.b = $,
                this.a = this.c(E)),
                this.a
            }
        }
        e.$$e = I;
        class L {
            get cachedValues() {
                return this.a
            }
            constructor(E, $) {
                this.a = new Map,
                this.b = new Map,
                typeof E == "function" ? (this.c = E,
                this.d = C) : (this.c = $,
                this.d = E.getCacheKey)
            }
            get(E) {
                const $ = this.d(E);
                if (this.b.has($))
                    return this.b.get($);
                const v = this.c(E);
                return this.a.set(E, v),
                this.b.set($, v),
                v
            }
        }
        e.$_e = L
    }),
    define(ge[935], be([1, 0, 5]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.IME = e.$AX = void 0;
        class n {
            constructor() {
                this.a = new t.$le,
                this.onDidChange = this.a.event,
                this.b = !0
            }
            get enabled() {
                return this.b
            }
            enable() {
                this.b = !0,
                this.a.fire()
            }
            disable() {
                this.b = !1,
                this.a.fire()
            }
        }
        e.$AX = n,
        e.IME = new n
    }),
    define(ge[1336], be([1, 0, 740, 300, 248, 29, 459, 320, 14]), function(ce, e, t, n, C, I, L, y, E) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ae = e.$_d = e.$$d = e.$0d = void 0,
        e.$be = p,
        e.$ce = i;
        class $ {
            get cachedValue() {
                return this.a
            }
            constructor(h) {
                this.b = h,
                this.a = (0,
                n.$6d)(this, void 0)
            }
            getValue() {
                let h = this.a.get();
                return h || (h = this.b(),
                this.a.set(h, void 0)),
                h
            }
        }
        e.$0d = $;
        class v {
            static fromFn(h) {
                return new v(h())
            }
            constructor(h) {
                this.a = (0,
                n.$6d)(this, void 0),
                this.promiseResult = this.a,
                this.promise = h.then(a=>((0,
                n.$1d)(d=>{
                    this.a.set(new f(a,void 0), d)
                }
                ),
                a), a=>{
                    throw (0,
                    n.$1d)(d=>{
                        this.a.set(new f(void 0,a), d)
                    }
                    ),
                    a
                }
                )
            }
        }
        e.$$d = v;
        class f {
            constructor(h, a) {
                this.data = h,
                this.error = a
            }
            getDataOrThrow() {
                if (this.error)
                    throw this.error;
                return this.data
            }
        }
        e.$_d = f;
        class g {
            constructor(h) {
                this.b = h,
                this.a = new $(()=>new v(this.b())),
                this.cachedPromiseResult = (0,
                C.$Nd)(this, a=>this.a.cachedValue.read(a)?.promiseResult.read(a))
            }
            getPromise() {
                return this.a.getValue().promise
            }
        }
        e.$ae = g;
        function p(c, h, a, d) {
            return h || (h = u=>u != null),
            new Promise((u,s)=>{
                let r = !0
                  , l = !1;
                const o = c.map(m=>({
                    isFinished: h(m),
                    error: a ? a(m) : !1,
                    state: m
                }))
                  , b = (0,
                t.$jd)(m=>{
                    const {isFinished: w, error: S, state: T} = o.read(m);
                    (w || S) && (r ? l = !0 : b.dispose(),
                    S ? s(S === !0 ? T : S) : u(T))
                }
                );
                if (d) {
                    const m = d.onCancellationRequested(()=>{
                        b.dispose(),
                        m.dispose(),
                        s(new E.$4)
                    }
                    );
                    if (d.isCancellationRequested) {
                        b.dispose(),
                        m.dispose(),
                        s(new E.$4);
                        return
                    }
                }
                r = !1,
                l && b.dispose()
            }
            )
        }
        function i(c, h) {
            let a, d;
            h === void 0 ? (a = c,
            d = void 0) : (d = c,
            a = h);
            let u;
            return new C.$Td(new L.$ad(d,void 0,a),s=>(u && u.dispose(!0),
            u = new I.$we,
            a(s, u.token)),void 0,void 0,()=>u?.dispose(),y.$6c)
        }
    }),
    define(ge[338], be([1, 0, 5, 2, 740, 300, 459, 248, 514, 14, 320]), function(ce, e, t, n, C, I, L, y, E, $, v) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Gd = e.$Cd = e.$ud = void 0,
        e.$qd = f,
        e.$rd = p,
        e.$sd = i,
        e.$td = c,
        e.$vd = a,
        e.$wd = u,
        e.$xd = r,
        e.$yd = l,
        e.$zd = o,
        e.$Ad = b,
        e.$Bd = m,
        e.$Dd = S,
        e.$Ed = T,
        e.$Fd = D,
        e.$Hd = A,
        e.$Id = M,
        e.$Jd = O;
        function f(R) {
            return new g(R)
        }
        class g extends I.$Yd {
            constructor(N) {
                super(),
                this.b = N
            }
            get debugName() {
                return this.toString()
            }
            get() {
                return this.b
            }
            addObserver(N) {}
            removeObserver(N) {}
            toString() {
                return `Const: ${this.b}`
            }
        }
        function p(R) {
            const N = (0,
            I.$6d)("promiseValue", {});
            return R.then(z=>{
                N.set({
                    value: z
                }, void 0)
            }
            ),
            N
        }
        function i(...R) {
            let N, z, V;
            return R.length === 3 ? [N,z,V] = R : [z,V] = R,
            new h(new L.$ad(N,void 0,V),z,V,()=>h.globalTransaction,v.$6c)
        }
        function c(R, N, z) {
            return new h(new L.$ad(R.owner,R.debugName,R.debugReferenceFn ?? z),N,z,()=>h.globalTransaction,R.equalsFn ?? v.$6c)
        }
        class h extends I.$Zd {
            constructor(N, z, V, B, j) {
                super(),
                this.j = N,
                this.k = z,
                this._getValue = V,
                this.l = B,
                this.n = j,
                this.g = !1,
                this.r = W=>{
                    const q = this._getValue(W)
                      , H = this.e
                      , U = !this.g || !this.n(H, q);
                    let K = !1;
                    U && (this.e = q,
                    this.g && (K = !0,
                    (0,
                    I.$4d)(this.l(), G=>{
                        (0,
                        E.$Ld)()?.handleFromEventObservableTriggered(this, {
                            oldValue: H,
                            newValue: q,
                            change: void 0,
                            didChange: U,
                            hadValue: this.g
                        });
                        for (const Z of this.b)
                            G.updateObserver(Z, this),
                            Z.handleChange(this, void 0)
                    }
                    , ()=>{
                        const G = this.p();
                        return "Event fired" + (G ? `: ${G}` : "")
                    }
                    )),
                    this.g = !0),
                    K || (0,
                    E.$Ld)()?.handleFromEventObservableTriggered(this, {
                        oldValue: H,
                        newValue: q,
                        change: void 0,
                        didChange: U,
                        hadValue: this.g
                    })
                }
            }
            p() {
                return this.j.getDebugName(this)
            }
            get debugName() {
                const N = this.p();
                return "From Event" + (N ? `: ${N}` : "")
            }
            c() {
                this.h = this.k(this.r)
            }
            f() {
                this.h.dispose(),
                this.h = void 0,
                this.g = !1,
                this.e = void 0
            }
            get() {
                return this.h ? (this.g || this.r(void 0),
                this.e) : this._getValue(void 0)
            }
        }
        e.$ud = h,
        function(R) {
            R.Observer = h;
            function N(z, V) {
                let B = !1;
                h.globalTransaction === void 0 && (h.globalTransaction = z,
                B = !0);
                try {
                    V()
                } finally {
                    B && (h.globalTransaction = void 0)
                }
            }
            R.batchEventsGlobally = N
        }(i || (e.$sd = i = {}));
        function a(R, N) {
            return new d(R,N)
        }
        class d extends I.$Zd {
            constructor(N, z) {
                super(),
                this.debugName = N,
                this.g = z,
                this.j = ()=>{
                    (0,
                    I.$1d)(V=>{
                        for (const B of this.b)
                            V.updateObserver(B, this),
                            B.handleChange(this, void 0)
                    }
                    , ()=>this.debugName)
                }
            }
            c() {
                this.e = this.g(this.j)
            }
            f() {
                this.e.dispose(),
                this.e = void 0
            }
            get() {}
        }
        function u(R) {
            return typeof R == "string" ? new s(R) : new s(void 0,R)
        }
        class s extends I.$Zd {
            get debugName() {
                return new L.$ad(this.g,this.e,void 0).getDebugName(this) ?? "Observable Signal"
            }
            toString() {
                return this.debugName
            }
            constructor(N, z) {
                super(),
                this.e = N,
                this.g = z
            }
            trigger(N, z) {
                if (!N) {
                    (0,
                    I.$1d)(V=>{
                        this.trigger(V, z)
                    }
                    , ()=>`Trigger signal ${this.debugName}`);
                    return
                }
                for (const V of this.b)
                    N.updateObserver(V, this),
                    V.handleChange(this, z)
            }
            get() {}
        }
        function r(R, N, z) {
            const V = (0,
            I.$6d)("debounced", void 0);
            let B;
            return z.add((0,
            C.$jd)(j=>{
                const W = R.read(j);
                B && clearTimeout(B),
                B = setTimeout(()=>{
                    (0,
                    I.$1d)(q=>{
                        V.set(W, q)
                    }
                    )
                }
                , N)
            }
            )),
            V
        }
        function l(R, N) {
            let z = !1, V, B;
            return i(j=>{
                const W = (0,
                C.$jd)(q=>{
                    const H = R.read(q);
                    z ? (B && clearTimeout(B),
                    B = setTimeout(()=>{
                        V = H,
                        j()
                    }
                    , N)) : (z = !0,
                    V = H)
                }
                );
                return {
                    dispose() {
                        W.dispose(),
                        z = !1,
                        V = void 0
                    }
                }
            }
            , ()=>z ? V : R.get())
        }
        function o(R, N, z) {
            const V = (0,
            I.$6d)("triggeredRecently", !1);
            let B;
            return z.add(R(()=>{
                V.set(!0, void 0),
                B && clearTimeout(B),
                B = setTimeout(()=>{
                    V.set(!1, void 0)
                }
                , N)
            }
            )),
            V
        }
        function b(R) {
            const N = new w(!1,void 0);
            return R.addObserver(N),
            (0,
            n.$Sc)(()=>{
                R.removeObserver(N)
            }
            )
        }
        (0,
        I.$Wd)(b);
        function m(R, N) {
            const z = new w(!0,N);
            return R.addObserver(z),
            N ? N(R.get()) : R.reportChanges(),
            (0,
            n.$Sc)(()=>{
                R.removeObserver(z)
            }
            )
        }
        (0,
        I.$Vd)(m);
        class w {
            constructor(N, z) {
                this.b = N,
                this.c = z,
                this.a = 0
            }
            beginUpdate(N) {
                this.a++
            }
            endUpdate(N) {
                this.a--,
                this.a === 0 && this.b && (this.c ? this.c(N.get()) : N.reportChanges())
            }
            handlePossibleChange(N) {}
            handleChange(N, z) {}
        }
        e.$Cd = w;
        function S(R, N) {
            let z;
            return (0,
            y.$Pd)({
                owner: R,
                debugReferenceFn: N
            }, B=>(z = N(B, z),
            z))
        }
        function T(R, N) {
            let z;
            const V = u("derivedObservableWithWritableCache")
              , B = (0,
            y.$Nd)(R, j=>(V.read(j),
            z = N(j, z),
            z));
            return Object.assign(B, {
                clearCache: j=>{
                    z = void 0,
                    V.trigger(j)
                }
                ,
                setCache: (j,W)=>{
                    z = j,
                    V.trigger(W)
                }
            })
        }
        function D(R, N, z, V) {
            let B = new k(z,V);
            return (0,
            y.$Pd)({
                debugReferenceFn: z,
                owner: R,
                onLastObserverRemoved: ()=>{
                    B.dispose(),
                    B = new k(z)
                }
            }, W=>(B.setItems(N.read(W)),
            B.getItems()))
        }
        class k {
            constructor(N, z) {
                this.c = N,
                this.e = z,
                this.a = new Map,
                this.b = []
            }
            dispose() {
                this.a.forEach(N=>N.store.dispose()),
                this.a.clear()
            }
            setItems(N) {
                const z = []
                  , V = new Set(this.a.keys());
                for (const B of N) {
                    const j = this.e ? this.e(B) : B;
                    let W = this.a.get(j);
                    if (W)
                        V.delete(j);
                    else {
                        const q = new n.$Tc;
                        W = {
                            out: this.c(B, q),
                            store: q
                        },
                        this.a.set(j, W)
                    }
                    z.push(W.out)
                }
                for (const B of V)
                    this.a.get(B).store.dispose(),
                    this.a.delete(B);
                this.b = z
            }
            getItems() {
                return this.b
            }
        }
        class P {
            constructor(N) {
                this.observable = N
            }
            get onDidChange() {
                return t.Event.fromObservableLight(this.observable)
            }
            get value() {
                return this.observable.get()
            }
        }
        e.$Gd = P;
        function A(R, N) {
            return N instanceof P ? N.observable : i(R, N.onDidChange, ()=>N.value)
        }
        function M(R, N) {
            if (N.length === 0)
                throw new $.$bb;
            let z = !1, V;
            const B = i(R, j=>{
                const W = new n.$Tc;
                for (const q of N)
                    W.add((0,
                    C.$kd)({
                        debugName: ()=>(0,
                        L.$bd)(B, new L.$ad(R,void 0,void 0)) + ".updateLastChangedValue"
                    }, H=>{
                        z = !0,
                        V = q.read(H),
                        j()
                    }
                    ));
                return W.add({
                    dispose() {
                        z = !1,
                        V = void 0
                    }
                }),
                W
            }
            , ()=>z ? V : N[N.length - 1].get());
            return B
        }
        function O(R, N) {
            return S(R, (z,V)=>V ?? N(z))
        }
    }),
    define(ge[61], be([1, 0, 300, 248, 740, 338, 1336, 1332, 514]), function(ce, e, t, n, C, I, L, y, E) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.observableValueOpts = e.derivedWithCancellationToken = e.waitForState = e.PromiseResult = e.ObservablePromise = e.ObservableLazyPromise = e.ObservableLazy = e.wasEventTriggeredRecently = e.observableSignalFromEvent = e.observableSignal = e.observableFromPromise = e.observableFromEvent = e.recomputeInitiallyAndOnChange = e.keepObserved = e.derivedObservableWithWritableCache = e.derivedObservableWithCache = e.debouncedObservable = e.constObservable = e.autorunWithStoreHandleChanges = e.autorunOpts = e.autorunWithStore = e.autorunHandleChanges = e.autorunDelta = e.autorun = e.derivedWithStore = e.derivedHandleChanges = e.derivedOpts = e.derived = e.subtransaction = e.transaction = e.disposableObservableValue = e.observableValue = void 0,
        Object.defineProperty(e, "observableValue", {
            enumerable: !0,
            get: function() {
                return t.$6d
            }
        }),
        Object.defineProperty(e, "disposableObservableValue", {
            enumerable: !0,
            get: function() {
                return t.$8d
            }
        }),
        Object.defineProperty(e, "transaction", {
            enumerable: !0,
            get: function() {
                return t.$1d
            }
        }),
        Object.defineProperty(e, "subtransaction", {
            enumerable: !0,
            get: function() {
                return t.$4d
            }
        }),
        Object.defineProperty(e, "derived", {
            enumerable: !0,
            get: function() {
                return n.$Nd
            }
        }),
        Object.defineProperty(e, "derivedOpts", {
            enumerable: !0,
            get: function() {
                return n.$Pd
            }
        }),
        Object.defineProperty(e, "derivedHandleChanges", {
            enumerable: !0,
            get: function() {
                return n.$Qd
            }
        }),
        Object.defineProperty(e, "derivedWithStore", {
            enumerable: !0,
            get: function() {
                return n.$Rd
            }
        }),
        Object.defineProperty(e, "autorun", {
            enumerable: !0,
            get: function() {
                return C.$jd
            }
        }),
        Object.defineProperty(e, "autorunDelta", {
            enumerable: !0,
            get: function() {
                return C.$od
            }
        }),
        Object.defineProperty(e, "autorunHandleChanges", {
            enumerable: !0,
            get: function() {
                return C.$ld
            }
        }),
        Object.defineProperty(e, "autorunWithStore", {
            enumerable: !0,
            get: function() {
                return C.$nd
            }
        }),
        Object.defineProperty(e, "autorunOpts", {
            enumerable: !0,
            get: function() {
                return C.$kd
            }
        }),
        Object.defineProperty(e, "autorunWithStoreHandleChanges", {
            enumerable: !0,
            get: function() {
                return C.$md
            }
        }),
        Object.defineProperty(e, "constObservable", {
            enumerable: !0,
            get: function() {
                return I.$qd
            }
        }),
        Object.defineProperty(e, "debouncedObservable", {
            enumerable: !0,
            get: function() {
                return I.$xd
            }
        }),
        Object.defineProperty(e, "derivedObservableWithCache", {
            enumerable: !0,
            get: function() {
                return I.$Dd
            }
        }),
        Object.defineProperty(e, "derivedObservableWithWritableCache", {
            enumerable: !0,
            get: function() {
                return I.$Ed
            }
        }),
        Object.defineProperty(e, "keepObserved", {
            enumerable: !0,
            get: function() {
                return I.$Ad
            }
        }),
        Object.defineProperty(e, "recomputeInitiallyAndOnChange", {
            enumerable: !0,
            get: function() {
                return I.$Bd
            }
        }),
        Object.defineProperty(e, "observableFromEvent", {
            enumerable: !0,
            get: function() {
                return I.$sd
            }
        }),
        Object.defineProperty(e, "observableFromPromise", {
            enumerable: !0,
            get: function() {
                return I.$rd
            }
        }),
        Object.defineProperty(e, "observableSignal", {
            enumerable: !0,
            get: function() {
                return I.$wd
            }
        }),
        Object.defineProperty(e, "observableSignalFromEvent", {
            enumerable: !0,
            get: function() {
                return I.$vd
            }
        }),
        Object.defineProperty(e, "wasEventTriggeredRecently", {
            enumerable: !0,
            get: function() {
                return I.$zd
            }
        }),
        Object.defineProperty(e, "ObservableLazy", {
            enumerable: !0,
            get: function() {
                return L.$0d
            }
        }),
        Object.defineProperty(e, "ObservableLazyPromise", {
            enumerable: !0,
            get: function() {
                return L.$ae
            }
        }),
        Object.defineProperty(e, "ObservablePromise", {
            enumerable: !0,
            get: function() {
                return L.$$d
            }
        }),
        Object.defineProperty(e, "PromiseResult", {
            enumerable: !0,
            get: function() {
                return L.$_d
            }
        }),
        Object.defineProperty(e, "waitForState", {
            enumerable: !0,
            get: function() {
                return L.$be
            }
        }),
        Object.defineProperty(e, "derivedWithCancellationToken", {
            enumerable: !0,
            get: function() {
                return L.$ce
            }
        }),
        Object.defineProperty(e, "observableValueOpts", {
            enumerable: !0,
            get: function() {
                return y.$ee
            }
        }),
        !1 && (0,
        E.$Kd)(new E.$Md)
    }),
    define(ge[517], be([1, 0, 934, 61]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$yX = C,
        e.$zX = I;
        function C(L, y) {
            return I([L], y),
            L
        }
        function I(L, y) {
            (0,
            t.$wX)() && (0,
            n.observableSignalFromEvent)("reload", $=>(0,
            t.$xX)(({oldExports: v})=>{
                if ([...Object.values(v)].some(f=>L.includes(f)))
                    return f=>($(void 0),
                    !0)
            }
            )).read(y)
        }
    }),
    define(ge[936], be([1, 0, 13, 29, 14]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$7o = e.$6o = void 0,
        e.$5o = L,
        e.$8o = $;
        function I(v) {
            return {
                isResolved: !!v,
                promise: null,
                cts: null,
                promiseIndexes: new Set,
                elements: v || []
            }
        }
        function L(v) {
            return {
                firstPage: v,
                total: v.length,
                pageSize: v.length,
                getPage: (f,g)=>Promise.resolve(v)
            }
        }
        class y {
            get length() {
                return this.a.total
            }
            constructor(f) {
                this.b = [],
                this.a = Array.isArray(f) ? L(f) : f;
                const g = Math.ceil(this.a.total / this.a.pageSize);
                this.b = [I(this.a.firstPage.slice()), ...(0,
                t.$Qb)(g - 1).map(()=>I())]
            }
            isResolved(f) {
                const g = Math.floor(f / this.a.pageSize);
                return !!this.b[g].isResolved
            }
            get(f) {
                const g = Math.floor(f / this.a.pageSize)
                  , p = f % this.a.pageSize;
                return this.b[g].elements[p]
            }
            resolve(f, g) {
                if (g.isCancellationRequested)
                    return Promise.reject(new C.$4);
                const p = Math.floor(f / this.a.pageSize)
                  , i = f % this.a.pageSize
                  , c = this.b[p];
                if (c.isResolved)
                    return Promise.resolve(c.elements[i]);
                c.promise || (c.cts = new n.$we,
                c.promise = this.a.getPage(p, c.cts.token).then(a=>{
                    c.elements = a,
                    c.isResolved = !0,
                    c.promise = null,
                    c.cts = null
                }
                , a=>(c.isResolved = !1,
                c.promise = null,
                c.cts = null,
                Promise.reject(a))));
                const h = g.onCancellationRequested(()=>{
                    c.cts && (c.promiseIndexes.delete(f),
                    c.promiseIndexes.size === 0 && c.cts.cancel())
                }
                );
                return c.promiseIndexes.add(f),
                c.promise.then(()=>c.elements[i]).finally(()=>h.dispose())
            }
        }
        e.$6o = y;
        class E {
            get length() {
                return this.a.length
            }
            constructor(f, g=500) {
                this.a = f,
                this.b = g
            }
            isResolved(f) {
                return this.a.isResolved(f)
            }
            get(f) {
                return this.a.get(f)
            }
            resolve(f, g) {
                return new Promise((p,i)=>{
                    if (g.isCancellationRequested)
                        return i(new C.$4);
                    const c = setTimeout(()=>{
                        if (g.isCancellationRequested)
                            return i(new C.$4);
                        h.dispose(),
                        this.a.resolve(f, g).then(p, i)
                    }
                    , this.b)
                      , h = g.onCancellationRequested(()=>{
                        clearTimeout(c),
                        h.dispose(),
                        i(new C.$4)
                    }
                    )
                }
                )
            }
        }
        e.$7o = E;
        function $(v, f) {
            return {
                firstPage: v.firstPage.map(f),
                total: v.total,
                pageSize: v.pageSize,
                getPage: (g,p)=>v.getPage(g, p).then(i=>i.map(f))
            }
        }
    }),
    define(ge[175], be([1, 0, 5, 2]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$gt = e.$ft = e.$et = e.$dt = e.ScrollbarVisibility = void 0;
        var C;
        (function(p) {
            p[p.Auto = 1] = "Auto",
            p[p.Hidden = 2] = "Hidden",
            p[p.Visible = 3] = "Visible"
        }
        )(C || (e.ScrollbarVisibility = C = {}));
        class I {
            constructor(i, c, h, a, d, u, s) {
                this.c = i,
                this._scrollStateBrand = void 0,
                this.c && (c = c | 0,
                h = h | 0,
                a = a | 0,
                d = d | 0,
                u = u | 0,
                s = s | 0),
                this.rawScrollLeft = a,
                this.rawScrollTop = s,
                c < 0 && (c = 0),
                a + c > h && (a = h - c),
                a < 0 && (a = 0),
                d < 0 && (d = 0),
                s + d > u && (s = u - d),
                s < 0 && (s = 0),
                this.width = c,
                this.scrollWidth = h,
                this.scrollLeft = a,
                this.height = d,
                this.scrollHeight = u,
                this.scrollTop = s
            }
            equals(i) {
                return this.rawScrollLeft === i.rawScrollLeft && this.rawScrollTop === i.rawScrollTop && this.width === i.width && this.scrollWidth === i.scrollWidth && this.scrollLeft === i.scrollLeft && this.height === i.height && this.scrollHeight === i.scrollHeight && this.scrollTop === i.scrollTop
            }
            withScrollDimensions(i, c) {
                return new I(this.c,typeof i.width < "u" ? i.width : this.width,typeof i.scrollWidth < "u" ? i.scrollWidth : this.scrollWidth,c ? this.rawScrollLeft : this.scrollLeft,typeof i.height < "u" ? i.height : this.height,typeof i.scrollHeight < "u" ? i.scrollHeight : this.scrollHeight,c ? this.rawScrollTop : this.scrollTop)
            }
            withScrollPosition(i) {
                return new I(this.c,this.width,this.scrollWidth,typeof i.scrollLeft < "u" ? i.scrollLeft : this.rawScrollLeft,this.height,this.scrollHeight,typeof i.scrollTop < "u" ? i.scrollTop : this.rawScrollTop)
            }
            createScrollEvent(i, c) {
                const h = this.width !== i.width
                  , a = this.scrollWidth !== i.scrollWidth
                  , d = this.scrollLeft !== i.scrollLeft
                  , u = this.height !== i.height
                  , s = this.scrollHeight !== i.scrollHeight
                  , r = this.scrollTop !== i.scrollTop;
                return {
                    inSmoothScrolling: c,
                    oldWidth: i.width,
                    oldScrollWidth: i.scrollWidth,
                    oldScrollLeft: i.scrollLeft,
                    width: this.width,
                    scrollWidth: this.scrollWidth,
                    scrollLeft: this.scrollLeft,
                    oldHeight: i.height,
                    oldScrollHeight: i.scrollHeight,
                    oldScrollTop: i.scrollTop,
                    height: this.height,
                    scrollHeight: this.scrollHeight,
                    scrollTop: this.scrollTop,
                    widthChanged: h,
                    scrollWidthChanged: a,
                    scrollLeftChanged: d,
                    heightChanged: u,
                    scrollHeightChanged: s,
                    scrollTopChanged: r
                }
            }
        }
        e.$dt = I;
        class L extends n.$Uc {
            constructor(i) {
                super(),
                this._scrollableBrand = void 0,
                this.j = this.B(new t.$le),
                this.onScroll = this.j.event,
                this.c = i.smoothScrollDuration,
                this.f = i.scheduleAtNextAnimationFrame,
                this.g = new I(i.forceIntegerValues,0,0,0,0,0,0),
                this.h = null
            }
            dispose() {
                this.h && (this.h.dispose(),
                this.h = null),
                super.dispose()
            }
            setSmoothScrollDuration(i) {
                this.c = i
            }
            validateScrollPosition(i) {
                return this.g.withScrollPosition(i)
            }
            getScrollDimensions() {
                return this.g
            }
            setScrollDimensions(i, c) {
                const h = this.g.withScrollDimensions(i, c);
                this.n(h, !!this.h),
                this.h?.acceptScrollDimensions(this.g)
            }
            getFutureScrollPosition() {
                return this.h ? this.h.to : this.g
            }
            getCurrentScrollPosition() {
                return this.g
            }
            setScrollPositionNow(i) {
                const c = this.g.withScrollPosition(i);
                this.h && (this.h.dispose(),
                this.h = null),
                this.n(c, !1)
            }
            setScrollPositionSmooth(i, c) {
                if (this.c === 0)
                    return this.setScrollPositionNow(i);
                if (this.h) {
                    i = {
                        scrollLeft: typeof i.scrollLeft > "u" ? this.h.to.scrollLeft : i.scrollLeft,
                        scrollTop: typeof i.scrollTop > "u" ? this.h.to.scrollTop : i.scrollTop
                    };
                    const h = this.g.withScrollPosition(i);
                    if (this.h.to.scrollLeft === h.scrollLeft && this.h.to.scrollTop === h.scrollTop)
                        return;
                    let a;
                    c ? a = new v(this.h.from,h,this.h.startTime,this.h.duration) : a = this.h.combine(this.g, h, this.c),
                    this.h.dispose(),
                    this.h = a
                } else {
                    const h = this.g.withScrollPosition(i);
                    this.h = v.start(this.g, h, this.c)
                }
                this.h.animationFrameDisposable = this.f(()=>{
                    this.h && (this.h.animationFrameDisposable = null,
                    this.m())
                }
                )
            }
            hasPendingScrollAnimation() {
                return !!this.h
            }
            m() {
                if (!this.h)
                    return;
                const i = this.h.tick()
                  , c = this.g.withScrollPosition(i);
                if (this.n(c, !0),
                !!this.h) {
                    if (i.isDone) {
                        this.h.dispose(),
                        this.h = null;
                        return
                    }
                    this.h.animationFrameDisposable = this.f(()=>{
                        this.h && (this.h.animationFrameDisposable = null,
                        this.m())
                    }
                    )
                }
            }
            n(i, c) {
                const h = this.g;
                h.equals(i) || (this.g = i,
                this.j.fire(this.g.createScrollEvent(h, c)))
            }
        }
        e.$et = L;
        class y {
            constructor(i, c, h) {
                this.scrollLeft = i,
                this.scrollTop = c,
                this.isDone = h
            }
        }
        e.$ft = y;
        function E(p, i) {
            const c = i - p;
            return function(h) {
                return p + c * g(h)
            }
        }
        function $(p, i, c) {
            return function(h) {
                return h < c ? p(h / c) : i((h - c) / (1 - c))
            }
        }
        class v {
            constructor(i, c, h, a) {
                this.from = i,
                this.to = c,
                this.duration = a,
                this.startTime = h,
                this.animationFrameDisposable = null,
                this.e()
            }
            e() {
                this.c = this.f(this.from.scrollLeft, this.to.scrollLeft, this.to.width),
                this.d = this.f(this.from.scrollTop, this.to.scrollTop, this.to.height)
            }
            f(i, c, h) {
                if (Math.abs(i - c) > 2.5 * h) {
                    let d, u;
                    return i < c ? (d = i + .75 * h,
                    u = c - .75 * h) : (d = i - .75 * h,
                    u = c + .75 * h),
                    $(E(i, d), E(u, c), .33)
                }
                return E(i, c)
            }
            dispose() {
                this.animationFrameDisposable !== null && (this.animationFrameDisposable.dispose(),
                this.animationFrameDisposable = null)
            }
            acceptScrollDimensions(i) {
                this.to = i.withScrollPosition(this.to),
                this.e()
            }
            tick() {
                return this.g(Date.now())
            }
            g(i) {
                const c = (i - this.startTime) / this.duration;
                if (c < 1) {
                    const h = this.c(c)
                      , a = this.d(c);
                    return new y(h,a,!1)
                }
                return new y(this.to.scrollLeft,this.to.scrollTop,!0)
            }
            combine(i, c, h) {
                return v.start(i, c, h)
            }
            static start(i, c, h) {
                h = h + 10;
                const a = Date.now() - 10;
                return new v(i,c,a,h)
            }
        }
        e.$gt = v;
        function f(p) {
            return Math.pow(p, 3)
        }
        function g(p) {
            return 1 - f(1 - p)
        }
    }),
    define(ge[302], be([1, 0, 14, 2]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ye = C,
        e.$ze = I,
        e.$Ae = L,
        e.$Be = y,
        e.$Ce = $,
        e.$De = v,
        e.$Ee = f,
        e.$Fe = g,
        e.$Ge = p,
        e.$He = i,
        e.$Ie = c,
        e.$Je = h,
        e.$Ke = a,
        e.$Le = d,
        e.$Me = u;
        function C(s) {
            const r = s;
            return r ? typeof r.read == "function" : !1
        }
        function I(s) {
            const r = s;
            return r ? [r.on, r.pause, r.resume, r.destroy].every(l=>typeof l == "function") : !1
        }
        function L(s) {
            const r = s;
            return r ? I(r.stream) && Array.isArray(r.buffer) && typeof r.ended == "boolean" : !1
        }
        function y(s, r) {
            return new E(s,r)
        }
        class E {
            constructor(r, l) {
                this.e = r,
                this.f = l,
                this.a = {
                    flowing: !1,
                    ended: !1,
                    destroyed: !1
                },
                this.b = {
                    data: [],
                    error: []
                },
                this.c = {
                    data: [],
                    error: [],
                    end: []
                },
                this.d = []
            }
            pause() {
                this.a.destroyed || (this.a.flowing = !1)
            }
            resume() {
                this.a.destroyed || this.a.flowing || (this.a.flowing = !0,
                this.j(),
                this.k(),
                this.l())
            }
            write(r) {
                if (!this.a.destroyed) {
                    if (this.a.flowing)
                        this.g(r);
                    else if (this.b.data.push(r),
                    typeof this.f?.highWaterMark == "number" && this.b.data.length > this.f.highWaterMark)
                        return new Promise(l=>this.d.push(l))
                }
            }
            error(r) {
                this.a.destroyed || (this.a.flowing ? this.h(r) : this.b.error.push(r))
            }
            end(r) {
                this.a.destroyed || (typeof r < "u" && this.write(r),
                this.a.flowing ? (this.i(),
                this.destroy()) : this.a.ended = !0)
            }
            g(r) {
                this.c.data.slice(0).forEach(l=>l(r))
            }
            h(r) {
                this.c.error.length === 0 ? (0,
                t.$Y)(r) : this.c.error.slice(0).forEach(l=>l(r))
            }
            i() {
                this.c.end.slice(0).forEach(r=>r())
            }
            on(r, l) {
                if (!this.a.destroyed)
                    switch (r) {
                    case "data":
                        this.c.data.push(l),
                        this.resume();
                        break;
                    case "end":
                        this.c.end.push(l),
                        this.a.flowing && this.l() && this.destroy();
                        break;
                    case "error":
                        this.c.error.push(l),
                        this.a.flowing && this.k();
                        break
                    }
            }
            removeListener(r, l) {
                if (this.a.destroyed)
                    return;
                let o;
                switch (r) {
                case "data":
                    o = this.c.data;
                    break;
                case "end":
                    o = this.c.end;
                    break;
                case "error":
                    o = this.c.error;
                    break
                }
                if (o) {
                    const b = o.indexOf(l);
                    b >= 0 && o.splice(b, 1)
                }
            }
            j() {
                if (this.b.data.length > 0) {
                    const r = this.e(this.b.data);
                    this.g(r),
                    this.b.data.length = 0;
                    const l = [...this.d];
                    this.d.length = 0,
                    l.forEach(o=>o())
                }
            }
            k() {
                if (this.c.error.length > 0) {
                    for (const r of this.b.error)
                        this.h(r);
                    this.b.error.length = 0
                }
            }
            l() {
                return this.a.ended ? (this.i(),
                this.c.end.length > 0) : !1
            }
            destroy() {
                this.a.destroyed || (this.a.destroyed = !0,
                this.a.ended = !0,
                this.b.data.length = 0,
                this.b.error.length = 0,
                this.c.data.length = 0,
                this.c.error.length = 0,
                this.c.end.length = 0,
                this.d.length = 0)
            }
        }
        function $(s, r) {
            const l = [];
            let o;
            for (; (o = s.read()) !== null; )
                l.push(o);
            return r(l)
        }
        function v(s, r, l) {
            const o = [];
            let b;
            for (; (b = s.read()) !== null && o.length < l; )
                o.push(b);
            return b === null && o.length > 0 ? r(o) : {
                read: ()=>{
                    if (o.length > 0)
                        return o.shift();
                    if (typeof b < "u") {
                        const m = b;
                        return b = void 0,
                        m
                    }
                    return s.read()
                }
            }
        }
        function f(s, r) {
            return new Promise((l,o)=>{
                const b = [];
                g(s, {
                    onData: m=>{
                        r && b.push(m)
                    }
                    ,
                    onError: m=>{
                        r ? o(m) : l(void 0)
                    }
                    ,
                    onEnd: ()=>{
                        l(r ? r(b) : void 0)
                    }
                })
            }
            )
        }
        function g(s, r, l) {
            s.on("error", o=>{
                l?.isCancellationRequested || r.onError(o)
            }
            ),
            s.on("end", ()=>{
                l?.isCancellationRequested || r.onEnd()
            }
            ),
            s.on("data", o=>{
                l?.isCancellationRequested || r.onData(o)
            }
            )
        }
        function p(s, r) {
            return new Promise((l,o)=>{
                const b = new n.$Tc
                  , m = []
                  , w = D=>{
                    if (m.push(D),
                    m.length > r)
                        return b.dispose(),
                        s.pause(),
                        l({
                            stream: s,
                            buffer: m,
                            ended: !1
                        })
                }
                  , S = D=>(b.dispose(),
                o(D))
                  , T = ()=>(b.dispose(),
                l({
                    stream: s,
                    buffer: m,
                    ended: !0
                }));
                b.add((0,
                n.$Sc)(()=>s.removeListener("error", S))),
                s.on("error", S),
                b.add((0,
                n.$Sc)(()=>s.removeListener("end", T))),
                s.on("end", T),
                b.add((0,
                n.$Sc)(()=>s.removeListener("data", w))),
                s.on("data", w)
            }
            )
        }
        function i(s, r) {
            const l = y(r);
            return l.end(s),
            l
        }
        function c() {
            const s = y(()=>{
                throw new Error("not supported")
            }
            );
            return s.end(),
            s
        }
        function h(s) {
            let r = !1;
            return {
                read: ()=>r ? null : (r = !0,
                s)
            }
        }
        function a(s, r, l) {
            const o = y(l);
            return g(s, {
                onData: b=>o.write(r.data(b)),
                onError: b=>o.error(r.error ? r.error(b) : b),
                onEnd: ()=>o.end()
            }),
            o
        }
        function d(s, r, l) {
            let o = !1;
            return {
                read: ()=>{
                    const b = r.read();
                    return o ? b : (o = !0,
                    b !== null ? l([s, b]) : s)
                }
            }
        }
        function u(s, r, l) {
            let o = !1;
            const b = y(l);
            return g(r, {
                onData: m=>o ? b.write(m) : (o = !0,
                b.write(l([s, m]))),
                onError: m=>b.error(m),
                onEnd: ()=>{
                    o || (o = !0,
                    b.write(s)),
                    b.end()
                }
            }),
            b
        }
    }),
    define(ge[70], be([1, 0, 147, 302]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Ne = void 0,
        e.$Oe = $,
        e.$Pe = v,
        e.$Qe = f,
        e.$Re = g,
        e.$Se = p,
        e.$Te = i,
        e.$Ue = c,
        e.$Ve = h,
        e.$We = a,
        e.$Xe = d,
        e.$Ye = u,
        e.$Ze = s,
        e.$1e = r,
        e.$2e = l,
        e.$3e = o,
        e.$4e = b,
        e.$5e = m,
        e.$6e = w,
        e.$7e = S,
        e.$8e = k,
        n = xe(n);
        const C = typeof Buffer < "u"
          , I = new t.$T(()=>new Uint8Array(256));
        let L, y;
        class E {
            static alloc(A) {
                return C ? new E(Buffer.allocUnsafe(A)) : new E(new Uint8Array(A))
            }
            static wrap(A) {
                return C && !Buffer.isBuffer(A) && (A = Buffer.from(A.buffer, A.byteOffset, A.byteLength)),
                new E(A)
            }
            static fromString(A, M) {
                return !(M?.dontUseNodeBuffer || !1) && C ? new E(Buffer.from(A)) : (L || (L = new TextEncoder),
                new E(L.encode(A)))
            }
            static fromByteArray(A) {
                const M = E.alloc(A.length);
                for (let O = 0, R = A.length; O < R; O++)
                    M.buffer[O] = A[O];
                return M
            }
            static concat(A, M) {
                if (typeof M > "u") {
                    M = 0;
                    for (let N = 0, z = A.length; N < z; N++)
                        M += A[N].byteLength
                }
                const O = E.alloc(M);
                let R = 0;
                for (let N = 0, z = A.length; N < z; N++) {
                    const V = A[N];
                    O.set(V, R),
                    R += V.byteLength
                }
                return O
            }
            constructor(A) {
                this.buffer = A,
                this.byteLength = this.buffer.byteLength
            }
            clone() {
                const A = E.alloc(this.byteLength);
                return A.set(this),
                A
            }
            toString() {
                return C ? this.buffer.toString() : (y || (y = new TextDecoder),
                y.decode(this.buffer))
            }
            slice(A, M) {
                return new E(this.buffer.subarray(A, M))
            }
            set(A, M) {
                if (A instanceof E)
                    this.buffer.set(A.buffer, M);
                else if (A instanceof Uint8Array)
                    this.buffer.set(A, M);
                else if (A instanceof ArrayBuffer)
                    this.buffer.set(new Uint8Array(A), M);
                else if (ArrayBuffer.isView(A))
                    this.buffer.set(new Uint8Array(A.buffer,A.byteOffset,A.byteLength), M);
                else
                    throw new Error("Unknown argument 'array'")
            }
            readUInt32BE(A) {
                return g(this.buffer, A)
            }
            writeUInt32BE(A, M) {
                p(this.buffer, A, M)
            }
            readUInt32LE(A) {
                return i(this.buffer, A)
            }
            writeUInt32LE(A, M) {
                c(this.buffer, A, M)
            }
            readUInt8(A) {
                return h(this.buffer, A)
            }
            writeUInt8(A, M) {
                a(this.buffer, A, M)
            }
            indexOf(A, M=0) {
                return $(this.buffer, A instanceof E ? A.buffer : A, M)
            }
        }
        e.$Ne = E;
        function $(P, A, M=0) {
            const O = A.byteLength
              , R = P.byteLength;
            if (O === 0)
                return 0;
            if (O === 1)
                return P.indexOf(A[0]);
            if (O > R - M)
                return -1;
            const N = I.value;
            N.fill(A.length);
            for (let j = 0; j < A.length; j++)
                N[A[j]] = A.length - j - 1;
            let z = M + A.length - 1
              , V = z
              , B = -1;
            for (; z < R; )
                if (P[z] === A[V]) {
                    if (V === 0) {
                        B = z;
                        break
                    }
                    z--,
                    V--
                } else
                    z += Math.max(A.length - V, N[P[z]]),
                    V = A.length - 1;
            return B
        }
        function v(P, A) {
            return P[A + 0] << 0 >>> 0 | P[A + 1] << 8 >>> 0
        }
        function f(P, A, M) {
            P[M + 0] = A & 255,
            A = A >>> 8,
            P[M + 1] = A & 255
        }
        function g(P, A) {
            return P[A] * 2 ** 24 + P[A + 1] * 2 ** 16 + P[A + 2] * 2 ** 8 + P[A + 3]
        }
        function p(P, A, M) {
            P[M + 3] = A,
            A = A >>> 8,
            P[M + 2] = A,
            A = A >>> 8,
            P[M + 1] = A,
            A = A >>> 8,
            P[M] = A
        }
        function i(P, A) {
            return P[A + 0] << 0 >>> 0 | P[A + 1] << 8 >>> 0 | P[A + 2] << 16 >>> 0 | P[A + 3] << 24 >>> 0
        }
        function c(P, A, M) {
            P[M + 0] = A & 255,
            A = A >>> 8,
            P[M + 1] = A & 255,
            A = A >>> 8,
            P[M + 2] = A & 255,
            A = A >>> 8,
            P[M + 3] = A & 255
        }
        function h(P, A) {
            return P[A]
        }
        function a(P, A, M) {
            P[M] = A
        }
        function d(P) {
            return n.$Ce(P, A=>E.concat(A))
        }
        function u(P) {
            return n.$Je(P)
        }
        function s(P) {
            return n.$Ee(P, A=>E.concat(A))
        }
        async function r(P) {
            return P.ended ? E.concat(P.buffer) : E.concat([...P.buffer, await s(P.stream)])
        }
        function l(P) {
            return n.$He(P, A=>E.concat(A))
        }
        function o(P) {
            return n.$Ke(P, {
                data: A=>typeof A == "string" ? E.fromString(A) : E.wrap(A)
            }, A=>E.concat(A))
        }
        function b(P) {
            return n.$Be(A=>E.concat(A), P)
        }
        function m(P, A) {
            return n.$Le(P, A, M=>E.concat(M))
        }
        function w(P, A) {
            return n.$Me(P, A, M=>E.concat(M))
        }
        function S(P) {
            let A = 0
              , M = 0
              , O = 0;
            const R = new Uint8Array(Math.floor(P.length / 4 * 3))
              , N = V=>{
                switch (M) {
                case 3:
                    R[O++] = A | V,
                    M = 0;
                    break;
                case 2:
                    R[O++] = A | V >>> 2,
                    A = V << 6,
                    M = 3;
                    break;
                case 1:
                    R[O++] = A | V >>> 4,
                    A = V << 4,
                    M = 2;
                    break;
                default:
                    A = V << 2,
                    M = 1
                }
            }
            ;
            for (let V = 0; V < P.length; V++) {
                const B = P.charCodeAt(V);
                if (B >= 65 && B <= 90)
                    N(B - 65);
                else if (B >= 97 && B <= 122)
                    N(B - 97 + 26);
                else if (B >= 48 && B <= 57)
                    N(B - 48 + 52);
                else if (B === 43 || B === 45)
                    N(62);
                else if (B === 47 || B === 95)
                    N(63);
                else {
                    if (B === 61)
                        break;
                    throw new SyntaxError(`Unexpected base64 character ${P[V]}`)
                }
            }
            const z = O;
            for (; M > 0; )
                N(0);
            return E.wrap(R).slice(0, z)
        }
        const T = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
          , D = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";
        function k({buffer: P}, A=!0, M=!1) {
            const O = M ? D : T;
            let R = "";
            const N = P.byteLength % 3;
            let z = 0;
            for (; z < P.byteLength - N; z += 3) {
                const V = P[z + 0]
                  , B = P[z + 1]
                  , j = P[z + 2];
                R += O[V >>> 2],
                R += O[(V << 4 | B >>> 4) & 63],
                R += O[(B << 2 | j >>> 6) & 63],
                R += O[j & 63]
            }
            if (N === 1) {
                const V = P[z + 0];
                R += O[V >>> 2],
                R += O[V << 4 & 63],
                A && (R += "==")
            } else if (N === 2) {
                const V = P[z + 0]
                  , B = P[z + 1];
                R += O[V >>> 2],
                R += O[(V << 4 | B >>> 4) & 63],
                R += O[B << 2 & 63],
                A && (R += "=")
            }
            return R
        }
    }),
    define(ge[461], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ge = void 0,
        e.$ge = Symbol("MicrotaskDelay")
    }),
    define(ge[937], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$HX = void 0,
        e.$IX = C;
        function t(I) {
            const L = new Map;
            for (const y of I)
                L.set(y, (L.get(y) ?? 0) + 1);
            return L
        }
        class n {
            constructor() {
                this.e = 0,
                this.f = new Map,
                this.g = new Map
            }
            calculateScores(L, y) {
                const E = this.i(L)
                  , $ = new Map
                  , v = [];
                for (const [f,g] of this.g) {
                    if (y.isCancellationRequested)
                        return [];
                    for (const p of g.chunks) {
                        const i = this.h(p, E, $);
                        i > 0 && v.push({
                            key: f,
                            score: i
                        })
                    }
                }
                return v
            }
            static c(L) {
                return t(n.d(L))
            }
            static*d(L) {
                const y = E=>E.toLowerCase();
                for (const [E] of L.matchAll(/\b\p{Letter}[\p{Letter}\d]{2,}\b/gu)) {
                    yield y(E);
                    const $ = E.replace(/([a-z])([A-Z])/g, "$1 $2").split(/\s+/g);
                    if ($.length > 1)
                        for (const v of $)
                            v.length > 2 && /\p{Letter}{3,}/gu.test(v) && (yield y(v))
                }
            }
            updateDocuments(L) {
                for (const {key: y} of L)
                    this.deleteDocument(y);
                for (const y of L) {
                    const E = [];
                    for (const $ of y.textChunks) {
                        const v = n.c($);
                        for (const f of v.keys())
                            this.f.set(f, (this.f.get(f) ?? 0) + 1);
                        E.push({
                            text: $,
                            tf: v
                        })
                    }
                    this.e += E.length,
                    this.g.set(y.key, {
                        chunks: E
                    })
                }
                return this
            }
            deleteDocument(L) {
                const y = this.g.get(L);
                if (y) {
                    this.g.delete(L),
                    this.e -= y.chunks.length;
                    for (const E of y.chunks)
                        for (const $ of E.tf.keys()) {
                            const v = this.f.get($);
                            if (typeof v == "number") {
                                const f = v - 1;
                                f <= 0 ? this.f.delete($) : this.f.set($, f)
                            }
                        }
                }
            }
            h(L, y, E) {
                let $ = 0;
                for (const [v,f] of Object.entries(y)) {
                    const g = L.tf.get(v);
                    if (!g)
                        continue;
                    let p = E.get(v);
                    typeof p != "number" && (p = this.j(v),
                    E.set(v, p));
                    const i = g * p;
                    $ += i * f
                }
                return $
            }
            i(L) {
                const y = n.c(L);
                return this.k(y)
            }
            j(L) {
                const y = this.f.get(L) ?? 0;
                return y > 0 ? Math.log((this.e + 1) / y) : 0
            }
            k(L) {
                const y = Object.create(null);
                for (const [E,$] of L) {
                    const v = this.j(E);
                    v > 0 && (y[E] = $ * v)
                }
                return y
            }
        }
        e.$HX = n;
        function C(I) {
            const L = I.slice(0);
            L.sort((E,$)=>$.score - E.score);
            const y = L[0]?.score ?? 0;
            if (y > 0)
                for (const E of L)
                    E.score /= y;
            return L
        }
    }),
    define(ge[18], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$eg = t,
        e.$fg = n,
        e.$gg = C,
        e.$hg = I,
        e.$ig = L,
        e.$jg = y,
        e.$kg = E,
        e.$lg = $,
        e.$mg = v,
        e.$ng = f,
        e.$og = g,
        e.$pg = p,
        e.$qg = i,
        e.$rg = h,
        e.$sg = a,
        e.$tg = d,
        e.$ug = u,
        e.$vg = s,
        e.$wg = r;
        function t(l) {
            return typeof l == "string"
        }
        function n(l) {
            return Array.isArray(l) && l.every(o=>t(o))
        }
        function C(l) {
            return typeof l == "object" && l !== null && !Array.isArray(l) && !(l instanceof RegExp) && !(l instanceof Date)
        }
        function I(l) {
            const o = Object.getPrototypeOf(Uint8Array);
            return typeof l == "object" && l instanceof o
        }
        function L(l) {
            return typeof l == "number" && !isNaN(l)
        }
        function y(l) {
            return !!l && typeof l[Symbol.iterator] == "function"
        }
        function E(l) {
            return l === !0 || l === !1
        }
        function $(l) {
            return typeof l > "u"
        }
        function v(l) {
            return !f(l)
        }
        function f(l) {
            return $(l) || l === null
        }
        function g(l, o) {
            if (!l)
                throw new Error(o ? `Unexpected type, expected '${o}'` : "Unexpected type")
        }
        function p(l) {
            if (f(l))
                throw new Error("Assertion Failed: argument is undefined or null");
            return l
        }
        function i(...l) {
            const o = [];
            for (let b = 0; b < l.length; b++) {
                const m = l[b];
                if (f(m))
                    throw new Error(`Assertion Failed: argument at index ${b} is undefined or null`);
                o.push(m)
            }
            return o
        }
        const c = Object.prototype.hasOwnProperty;
        function h(l) {
            if (!C(l))
                return !1;
            for (const o in l)
                if (c.call(l, o))
                    return !1;
            return !0
        }
        function a(l) {
            return typeof l == "function"
        }
        function d(...l) {
            return l.length > 0 && l.every(a)
        }
        function u(l, o) {
            const b = Math.min(l.length, o.length);
            for (let m = 0; m < b; m++)
                s(l[m], o[m])
        }
        function s(l, o) {
            if (t(o)) {
                if (typeof l !== o)
                    throw new Error(`argument does not match constraint: typeof ${o}`)
            } else if (a(o)) {
                try {
                    if (l instanceof o)
                        return
                } catch {}
                if (!f(l) && l.constructor === o || o.length === 1 && o.call(void 0, l) === !0)
                    return;
                throw new Error("argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true")
            }
        }
        function r(l) {
            return l
        }
    }),
    define(ge[609], be([1, 0, 18]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Zj = C,
        e.$1j = I;
        const n = Object.create(null);
        function C(L, y) {
            if ((0,
            t.$eg)(y)) {
                const E = n[y];
                if (E === void 0)
                    throw new Error(`${L} references an unknown codicon: ${y}`);
                y = E
            }
            return n[L] = y,
            {
                id: L
            }
        }
        function I() {
            return n
        }
    }),
    define(ge[938], be([1, 0, 609]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$2j = void 0,
        e.$2j = {
            add: (0,
            t.$Zj)("add", 6e4),
            plus: (0,
            t.$Zj)("plus", 6e4),
            gistNew: (0,
            t.$Zj)("gist-new", 6e4),
            repoCreate: (0,
            t.$Zj)("repo-create", 6e4),
            lightbulb: (0,
            t.$Zj)("lightbulb", 60001),
            lightBulb: (0,
            t.$Zj)("light-bulb", 60001),
            repo: (0,
            t.$Zj)("repo", 60002),
            repoDelete: (0,
            t.$Zj)("repo-delete", 60002),
            gistFork: (0,
            t.$Zj)("gist-fork", 60003),
            repoForked: (0,
            t.$Zj)("repo-forked", 60003),
            gitPullRequest: (0,
            t.$Zj)("git-pull-request", 60004),
            gitPullRequestAbandoned: (0,
            t.$Zj)("git-pull-request-abandoned", 60004),
            recordKeys: (0,
            t.$Zj)("record-keys", 60005),
            keyboard: (0,
            t.$Zj)("keyboard", 60005),
            tag: (0,
            t.$Zj)("tag", 60006),
            gitPullRequestLabel: (0,
            t.$Zj)("git-pull-request-label", 60006),
            tagAdd: (0,
            t.$Zj)("tag-add", 60006),
            tagRemove: (0,
            t.$Zj)("tag-remove", 60006),
            person: (0,
            t.$Zj)("person", 60007),
            personFollow: (0,
            t.$Zj)("person-follow", 60007),
            personOutline: (0,
            t.$Zj)("person-outline", 60007),
            personFilled: (0,
            t.$Zj)("person-filled", 60007),
            gitBranch: (0,
            t.$Zj)("git-branch", 60008),
            gitBranchCreate: (0,
            t.$Zj)("git-branch-create", 60008),
            gitBranchDelete: (0,
            t.$Zj)("git-branch-delete", 60008),
            sourceControl: (0,
            t.$Zj)("source-control", 60008),
            mirror: (0,
            t.$Zj)("mirror", 60009),
            mirrorPublic: (0,
            t.$Zj)("mirror-public", 60009),
            star: (0,
            t.$Zj)("star", 60010),
            starAdd: (0,
            t.$Zj)("star-add", 60010),
            starDelete: (0,
            t.$Zj)("star-delete", 60010),
            starEmpty: (0,
            t.$Zj)("star-empty", 60010),
            comment: (0,
            t.$Zj)("comment", 60011),
            commentAdd: (0,
            t.$Zj)("comment-add", 60011),
            alert: (0,
            t.$Zj)("alert", 60012),
            warning: (0,
            t.$Zj)("warning", 60012),
            search: (0,
            t.$Zj)("search", 60013),
            searchSave: (0,
            t.$Zj)("search-save", 60013),
            logOut: (0,
            t.$Zj)("log-out", 60014),
            signOut: (0,
            t.$Zj)("sign-out", 60014),
            logIn: (0,
            t.$Zj)("log-in", 60015),
            signIn: (0,
            t.$Zj)("sign-in", 60015),
            eye: (0,
            t.$Zj)("eye", 60016),
            eyeUnwatch: (0,
            t.$Zj)("eye-unwatch", 60016),
            eyeWatch: (0,
            t.$Zj)("eye-watch", 60016),
            circleFilled: (0,
            t.$Zj)("circle-filled", 60017),
            primitiveDot: (0,
            t.$Zj)("primitive-dot", 60017),
            closeDirty: (0,
            t.$Zj)("close-dirty", 60017),
            debugBreakpoint: (0,
            t.$Zj)("debug-breakpoint", 60017),
            debugBreakpointDisabled: (0,
            t.$Zj)("debug-breakpoint-disabled", 60017),
            debugHint: (0,
            t.$Zj)("debug-hint", 60017),
            terminalDecorationSuccess: (0,
            t.$Zj)("terminal-decoration-success", 60017),
            primitiveSquare: (0,
            t.$Zj)("primitive-square", 60018),
            edit: (0,
            t.$Zj)("edit", 60019),
            pencil: (0,
            t.$Zj)("pencil", 60019),
            info: (0,
            t.$Zj)("info", 60020),
            issueOpened: (0,
            t.$Zj)("issue-opened", 60020),
            gistPrivate: (0,
            t.$Zj)("gist-private", 60021),
            gitForkPrivate: (0,
            t.$Zj)("git-fork-private", 60021),
            lock: (0,
            t.$Zj)("lock", 60021),
            mirrorPrivate: (0,
            t.$Zj)("mirror-private", 60021),
            close: (0,
            t.$Zj)("close", 60022),
            removeClose: (0,
            t.$Zj)("remove-close", 60022),
            x: (0,
            t.$Zj)("x", 60022),
            repoSync: (0,
            t.$Zj)("repo-sync", 60023),
            sync: (0,
            t.$Zj)("sync", 60023),
            clone: (0,
            t.$Zj)("clone", 60024),
            desktopDownload: (0,
            t.$Zj)("desktop-download", 60024),
            beaker: (0,
            t.$Zj)("beaker", 60025),
            microscope: (0,
            t.$Zj)("microscope", 60025),
            vm: (0,
            t.$Zj)("vm", 60026),
            deviceDesktop: (0,
            t.$Zj)("device-desktop", 60026),
            file: (0,
            t.$Zj)("file", 60027),
            fileText: (0,
            t.$Zj)("file-text", 60027),
            more: (0,
            t.$Zj)("more", 60028),
            ellipsis: (0,
            t.$Zj)("ellipsis", 60028),
            kebabHorizontal: (0,
            t.$Zj)("kebab-horizontal", 60028),
            mailReply: (0,
            t.$Zj)("mail-reply", 60029),
            reply: (0,
            t.$Zj)("reply", 60029),
            organization: (0,
            t.$Zj)("organization", 60030),
            organizationFilled: (0,
            t.$Zj)("organization-filled", 60030),
            organizationOutline: (0,
            t.$Zj)("organization-outline", 60030),
            newFile: (0,
            t.$Zj)("new-file", 60031),
            fileAdd: (0,
            t.$Zj)("file-add", 60031),
            newFolder: (0,
            t.$Zj)("new-folder", 60032),
            fileDirectoryCreate: (0,
            t.$Zj)("file-directory-create", 60032),
            trash: (0,
            t.$Zj)("trash", 60033),
            trashcan: (0,
            t.$Zj)("trashcan", 60033),
            history: (0,
            t.$Zj)("history", 60034),
            clock: (0,
            t.$Zj)("clock", 60034),
            folder: (0,
            t.$Zj)("folder", 60035),
            fileDirectory: (0,
            t.$Zj)("file-directory", 60035),
            symbolFolder: (0,
            t.$Zj)("symbol-folder", 60035),
            logoGithub: (0,
            t.$Zj)("logo-github", 60036),
            markGithub: (0,
            t.$Zj)("mark-github", 60036),
            github: (0,
            t.$Zj)("github", 60036),
            terminal: (0,
            t.$Zj)("terminal", 60037),
            console: (0,
            t.$Zj)("console", 60037),
            repl: (0,
            t.$Zj)("repl", 60037),
            zap: (0,
            t.$Zj)("zap", 60038),
            symbolEvent: (0,
            t.$Zj)("symbol-event", 60038),
            error: (0,
            t.$Zj)("error", 60039),
            stop: (0,
            t.$Zj)("stop", 60039),
            variable: (0,
            t.$Zj)("variable", 60040),
            symbolVariable: (0,
            t.$Zj)("symbol-variable", 60040),
            array: (0,
            t.$Zj)("array", 60042),
            symbolArray: (0,
            t.$Zj)("symbol-array", 60042),
            symbolModule: (0,
            t.$Zj)("symbol-module", 60043),
            symbolPackage: (0,
            t.$Zj)("symbol-package", 60043),
            symbolNamespace: (0,
            t.$Zj)("symbol-namespace", 60043),
            symbolObject: (0,
            t.$Zj)("symbol-object", 60043),
            symbolMethod: (0,
            t.$Zj)("symbol-method", 60044),
            symbolFunction: (0,
            t.$Zj)("symbol-function", 60044),
            symbolConstructor: (0,
            t.$Zj)("symbol-constructor", 60044),
            symbolBoolean: (0,
            t.$Zj)("symbol-boolean", 60047),
            symbolNull: (0,
            t.$Zj)("symbol-null", 60047),
            symbolNumeric: (0,
            t.$Zj)("symbol-numeric", 60048),
            symbolNumber: (0,
            t.$Zj)("symbol-number", 60048),
            symbolStructure: (0,
            t.$Zj)("symbol-structure", 60049),
            symbolStruct: (0,
            t.$Zj)("symbol-struct", 60049),
            symbolParameter: (0,
            t.$Zj)("symbol-parameter", 60050),
            symbolTypeParameter: (0,
            t.$Zj)("symbol-type-parameter", 60050),
            symbolKey: (0,
            t.$Zj)("symbol-key", 60051),
            symbolText: (0,
            t.$Zj)("symbol-text", 60051),
            symbolReference: (0,
            t.$Zj)("symbol-reference", 60052),
            goToFile: (0,
            t.$Zj)("go-to-file", 60052),
            symbolEnum: (0,
            t.$Zj)("symbol-enum", 60053),
            symbolValue: (0,
            t.$Zj)("symbol-value", 60053),
            symbolRuler: (0,
            t.$Zj)("symbol-ruler", 60054),
            symbolUnit: (0,
            t.$Zj)("symbol-unit", 60054),
            activateBreakpoints: (0,
            t.$Zj)("activate-breakpoints", 60055),
            archive: (0,
            t.$Zj)("archive", 60056),
            arrowBoth: (0,
            t.$Zj)("arrow-both", 60057),
            arrowDown: (0,
            t.$Zj)("arrow-down", 60058),
            arrowLeft: (0,
            t.$Zj)("arrow-left", 60059),
            arrowRight: (0,
            t.$Zj)("arrow-right", 60060),
            arrowSmallDown: (0,
            t.$Zj)("arrow-small-down", 60061),
            arrowSmallLeft: (0,
            t.$Zj)("arrow-small-left", 60062),
            arrowSmallRight: (0,
            t.$Zj)("arrow-small-right", 60063),
            arrowSmallUp: (0,
            t.$Zj)("arrow-small-up", 60064),
            arrowUp: (0,
            t.$Zj)("arrow-up", 60065),
            bell: (0,
            t.$Zj)("bell", 60066),
            bold: (0,
            t.$Zj)("bold", 60067),
            book: (0,
            t.$Zj)("book", 60068),
            bookmark: (0,
            t.$Zj)("bookmark", 60069),
            debugBreakpointConditionalUnverified: (0,
            t.$Zj)("debug-breakpoint-conditional-unverified", 60070),
            debugBreakpointConditional: (0,
            t.$Zj)("debug-breakpoint-conditional", 60071),
            debugBreakpointConditionalDisabled: (0,
            t.$Zj)("debug-breakpoint-conditional-disabled", 60071),
            debugBreakpointDataUnverified: (0,
            t.$Zj)("debug-breakpoint-data-unverified", 60072),
            debugBreakpointData: (0,
            t.$Zj)("debug-breakpoint-data", 60073),
            debugBreakpointDataDisabled: (0,
            t.$Zj)("debug-breakpoint-data-disabled", 60073),
            debugBreakpointLogUnverified: (0,
            t.$Zj)("debug-breakpoint-log-unverified", 60074),
            debugBreakpointLog: (0,
            t.$Zj)("debug-breakpoint-log", 60075),
            debugBreakpointLogDisabled: (0,
            t.$Zj)("debug-breakpoint-log-disabled", 60075),
            briefcase: (0,
            t.$Zj)("briefcase", 60076),
            broadcast: (0,
            t.$Zj)("broadcast", 60077),
            browser: (0,
            t.$Zj)("browser", 60078),
            bug: (0,
            t.$Zj)("bug", 60079),
            calendar: (0,
            t.$Zj)("calendar", 60080),
            caseSensitive: (0,
            t.$Zj)("case-sensitive", 60081),
            check: (0,
            t.$Zj)("check", 60082),
            checklist: (0,
            t.$Zj)("checklist", 60083),
            chevronDown: (0,
            t.$Zj)("chevron-down", 60084),
            chevronLeft: (0,
            t.$Zj)("chevron-left", 60085),
            chevronRight: (0,
            t.$Zj)("chevron-right", 60086),
            chevronUp: (0,
            t.$Zj)("chevron-up", 60087),
            chromeClose: (0,
            t.$Zj)("chrome-close", 60088),
            chromeMaximize: (0,
            t.$Zj)("chrome-maximize", 60089),
            chromeMinimize: (0,
            t.$Zj)("chrome-minimize", 60090),
            chromeRestore: (0,
            t.$Zj)("chrome-restore", 60091),
            circleOutline: (0,
            t.$Zj)("circle-outline", 60092),
            circle: (0,
            t.$Zj)("circle", 60092),
            debugBreakpointUnverified: (0,
            t.$Zj)("debug-breakpoint-unverified", 60092),
            terminalDecorationIncomplete: (0,
            t.$Zj)("terminal-decoration-incomplete", 60092),
            circleSlash: (0,
            t.$Zj)("circle-slash", 60093),
            circuitBoard: (0,
            t.$Zj)("circuit-board", 60094),
            clearAll: (0,
            t.$Zj)("clear-all", 60095),
            clippy: (0,
            t.$Zj)("clippy", 60096),
            closeAll: (0,
            t.$Zj)("close-all", 60097),
            cloudDownload: (0,
            t.$Zj)("cloud-download", 60098),
            cloudUpload: (0,
            t.$Zj)("cloud-upload", 60099),
            code: (0,
            t.$Zj)("code", 60100),
            collapseAll: (0,
            t.$Zj)("collapse-all", 60101),
            colorMode: (0,
            t.$Zj)("color-mode", 60102),
            commentDiscussion: (0,
            t.$Zj)("comment-discussion", 60103),
            creditCard: (0,
            t.$Zj)("credit-card", 60105),
            dash: (0,
            t.$Zj)("dash", 60108),
            dashboard: (0,
            t.$Zj)("dashboard", 60109),
            database: (0,
            t.$Zj)("database", 60110),
            debugContinue: (0,
            t.$Zj)("debug-continue", 60111),
            debugDisconnect: (0,
            t.$Zj)("debug-disconnect", 60112),
            debugPause: (0,
            t.$Zj)("debug-pause", 60113),
            debugRestart: (0,
            t.$Zj)("debug-restart", 60114),
            debugStart: (0,
            t.$Zj)("debug-start", 60115),
            debugStepInto: (0,
            t.$Zj)("debug-step-into", 60116),
            debugStepOut: (0,
            t.$Zj)("debug-step-out", 60117),
            debugStepOver: (0,
            t.$Zj)("debug-step-over", 60118),
            debugStop: (0,
            t.$Zj)("debug-stop", 60119),
            debug: (0,
            t.$Zj)("debug", 60120),
            deviceCameraVideo: (0,
            t.$Zj)("device-camera-video", 60121),
            deviceCamera: (0,
            t.$Zj)("device-camera", 60122),
            deviceMobile: (0,
            t.$Zj)("device-mobile", 60123),
            diffAdded: (0,
            t.$Zj)("diff-added", 60124),
            diffIgnored: (0,
            t.$Zj)("diff-ignored", 60125),
            diffModified: (0,
            t.$Zj)("diff-modified", 60126),
            diffRemoved: (0,
            t.$Zj)("diff-removed", 60127),
            diffRenamed: (0,
            t.$Zj)("diff-renamed", 60128),
            diff: (0,
            t.$Zj)("diff", 60129),
            diffSidebyside: (0,
            t.$Zj)("diff-sidebyside", 60129),
            discard: (0,
            t.$Zj)("discard", 60130),
            editorLayout: (0,
            t.$Zj)("editor-layout", 60131),
            emptyWindow: (0,
            t.$Zj)("empty-window", 60132),
            exclude: (0,
            t.$Zj)("exclude", 60133),
            extensions: (0,
            t.$Zj)("extensions", 60134),
            eyeClosed: (0,
            t.$Zj)("eye-closed", 60135),
            fileBinary: (0,
            t.$Zj)("file-binary", 60136),
            fileCode: (0,
            t.$Zj)("file-code", 60137),
            fileMedia: (0,
            t.$Zj)("file-media", 60138),
            filePdf: (0,
            t.$Zj)("file-pdf", 60139),
            fileSubmodule: (0,
            t.$Zj)("file-submodule", 60140),
            fileSymlinkDirectory: (0,
            t.$Zj)("file-symlink-directory", 60141),
            fileSymlinkFile: (0,
            t.$Zj)("file-symlink-file", 60142),
            fileZip: (0,
            t.$Zj)("file-zip", 60143),
            files: (0,
            t.$Zj)("files", 60144),
            filter: (0,
            t.$Zj)("filter", 60145),
            flame: (0,
            t.$Zj)("flame", 60146),
            foldDown: (0,
            t.$Zj)("fold-down", 60147),
            foldUp: (0,
            t.$Zj)("fold-up", 60148),
            fold: (0,
            t.$Zj)("fold", 60149),
            folderActive: (0,
            t.$Zj)("folder-active", 60150),
            folderOpened: (0,
            t.$Zj)("folder-opened", 60151),
            gear: (0,
            t.$Zj)("gear", 60152),
            gift: (0,
            t.$Zj)("gift", 60153),
            gistSecret: (0,
            t.$Zj)("gist-secret", 60154),
            gist: (0,
            t.$Zj)("gist", 60155),
            gitCommit: (0,
            t.$Zj)("git-commit", 60156),
            gitCompare: (0,
            t.$Zj)("git-compare", 60157),
            compareChanges: (0,
            t.$Zj)("compare-changes", 60157),
            gitMerge: (0,
            t.$Zj)("git-merge", 60158),
            githubAction: (0,
            t.$Zj)("github-action", 60159),
            githubAlt: (0,
            t.$Zj)("github-alt", 60160),
            globe: (0,
            t.$Zj)("globe", 60161),
            grabber: (0,
            t.$Zj)("grabber", 60162),
            graph: (0,
            t.$Zj)("graph", 60163),
            gripper: (0,
            t.$Zj)("gripper", 60164),
            heart: (0,
            t.$Zj)("heart", 60165),
            home: (0,
            t.$Zj)("home", 60166),
            horizontalRule: (0,
            t.$Zj)("horizontal-rule", 60167),
            hubot: (0,
            t.$Zj)("hubot", 60168),
            inbox: (0,
            t.$Zj)("inbox", 60169),
            issueReopened: (0,
            t.$Zj)("issue-reopened", 60171),
            issues: (0,
            t.$Zj)("issues", 60172),
            italic: (0,
            t.$Zj)("italic", 60173),
            jersey: (0,
            t.$Zj)("jersey", 60174),
            json: (0,
            t.$Zj)("json", 60175),
            kebabVertical: (0,
            t.$Zj)("kebab-vertical", 60176),
            key: (0,
            t.$Zj)("key", 60177),
            law: (0,
            t.$Zj)("law", 60178),
            lightbulbAutofix: (0,
            t.$Zj)("lightbulb-autofix", 60179),
            linkExternal: (0,
            t.$Zj)("link-external", 60180),
            link: (0,
            t.$Zj)("link", 60181),
            listOrdered: (0,
            t.$Zj)("list-ordered", 60182),
            listUnordered: (0,
            t.$Zj)("list-unordered", 60183),
            liveShare: (0,
            t.$Zj)("live-share", 60184),
            loading: (0,
            t.$Zj)("loading", 60185),
            location: (0,
            t.$Zj)("location", 60186),
            mailRead: (0,
            t.$Zj)("mail-read", 60187),
            mail: (0,
            t.$Zj)("mail", 60188),
            markdown: (0,
            t.$Zj)("markdown", 60189),
            megaphone: (0,
            t.$Zj)("megaphone", 60190),
            mention: (0,
            t.$Zj)("mention", 60191),
            milestone: (0,
            t.$Zj)("milestone", 60192),
            gitPullRequestMilestone: (0,
            t.$Zj)("git-pull-request-milestone", 60192),
            mortarBoard: (0,
            t.$Zj)("mortar-board", 60193),
            move: (0,
            t.$Zj)("move", 60194),
            multipleWindows: (0,
            t.$Zj)("multiple-windows", 60195),
            mute: (0,
            t.$Zj)("mute", 60196),
            noNewline: (0,
            t.$Zj)("no-newline", 60197),
            note: (0,
            t.$Zj)("note", 60198),
            octoface: (0,
            t.$Zj)("octoface", 60199),
            openPreview: (0,
            t.$Zj)("open-preview", 60200),
            package: (0,
            t.$Zj)("package", 60201),
            paintcan: (0,
            t.$Zj)("paintcan", 60202),
            pin: (0,
            t.$Zj)("pin", 60203),
            play: (0,
            t.$Zj)("play", 60204),
            run: (0,
            t.$Zj)("run", 60204),
            plug: (0,
            t.$Zj)("plug", 60205),
            preserveCase: (0,
            t.$Zj)("preserve-case", 60206),
            preview: (0,
            t.$Zj)("preview", 60207),
            project: (0,
            t.$Zj)("project", 60208),
            pulse: (0,
            t.$Zj)("pulse", 60209),
            question: (0,
            t.$Zj)("question", 60210),
            quote: (0,
            t.$Zj)("quote", 60211),
            radioTower: (0,
            t.$Zj)("radio-tower", 60212),
            reactions: (0,
            t.$Zj)("reactions", 60213),
            references: (0,
            t.$Zj)("references", 60214),
            refresh: (0,
            t.$Zj)("refresh", 60215),
            regex: (0,
            t.$Zj)("regex", 60216),
            remoteExplorer: (0,
            t.$Zj)("remote-explorer", 60217),
            remote: (0,
            t.$Zj)("remote", 60218),
            remove: (0,
            t.$Zj)("remove", 60219),
            replaceAll: (0,
            t.$Zj)("replace-all", 60220),
            replace: (0,
            t.$Zj)("replace", 60221),
            repoClone: (0,
            t.$Zj)("repo-clone", 60222),
            repoForcePush: (0,
            t.$Zj)("repo-force-push", 60223),
            repoPull: (0,
            t.$Zj)("repo-pull", 60224),
            repoPush: (0,
            t.$Zj)("repo-push", 60225),
            report: (0,
            t.$Zj)("report", 60226),
            requestChanges: (0,
            t.$Zj)("request-changes", 60227),
            rocket: (0,
            t.$Zj)("rocket", 60228),
            rootFolderOpened: (0,
            t.$Zj)("root-folder-opened", 60229),
            rootFolder: (0,
            t.$Zj)("root-folder", 60230),
            rss: (0,
            t.$Zj)("rss", 60231),
            ruby: (0,
            t.$Zj)("ruby", 60232),
            saveAll: (0,
            t.$Zj)("save-all", 60233),
            saveAs: (0,
            t.$Zj)("save-as", 60234),
            save: (0,
            t.$Zj)("save", 60235),
            screenFull: (0,
            t.$Zj)("screen-full", 60236),
            screenNormal: (0,
            t.$Zj)("screen-normal", 60237),
            searchStop: (0,
            t.$Zj)("search-stop", 60238),
            server: (0,
            t.$Zj)("server", 60240),
            settingsGear: (0,
            t.$Zj)("settings-gear", 60241),
            settings: (0,
            t.$Zj)("settings", 60242),
            shield: (0,
            t.$Zj)("shield", 60243),
            smiley: (0,
            t.$Zj)("smiley", 60244),
            sortPrecedence: (0,
            t.$Zj)("sort-precedence", 60245),
            splitHorizontal: (0,
            t.$Zj)("split-horizontal", 60246),
            splitVertical: (0,
            t.$Zj)("split-vertical", 60247),
            squirrel: (0,
            t.$Zj)("squirrel", 60248),
            starFull: (0,
            t.$Zj)("star-full", 60249),
            starHalf: (0,
            t.$Zj)("star-half", 60250),
            symbolClass: (0,
            t.$Zj)("symbol-class", 60251),
            symbolColor: (0,
            t.$Zj)("symbol-color", 60252),
            symbolConstant: (0,
            t.$Zj)("symbol-constant", 60253),
            symbolEnumMember: (0,
            t.$Zj)("symbol-enum-member", 60254),
            symbolField: (0,
            t.$Zj)("symbol-field", 60255),
            symbolFile: (0,
            t.$Zj)("symbol-file", 60256),
            symbolInterface: (0,
            t.$Zj)("symbol-interface", 60257),
            symbolKeyword: (0,
            t.$Zj)("symbol-keyword", 60258),
            symbolMisc: (0,
            t.$Zj)("symbol-misc", 60259),
            symbolOperator: (0,
            t.$Zj)("symbol-operator", 60260),
            symbolProperty: (0,
            t.$Zj)("symbol-property", 60261),
            wrench: (0,
            t.$Zj)("wrench", 60261),
            wrenchSubaction: (0,
            t.$Zj)("wrench-subaction", 60261),
            symbolSnippet: (0,
            t.$Zj)("symbol-snippet", 60262),
            tasklist: (0,
            t.$Zj)("tasklist", 60263),
            telescope: (0,
            t.$Zj)("telescope", 60264),
            textSize: (0,
            t.$Zj)("text-size", 60265),
            threeBars: (0,
            t.$Zj)("three-bars", 60266),
            thumbsdown: (0,
            t.$Zj)("thumbsdown", 60267),
            thumbsup: (0,
            t.$Zj)("thumbsup", 60268),
            tools: (0,
            t.$Zj)("tools", 60269),
            triangleDown: (0,
            t.$Zj)("triangle-down", 60270),
            triangleLeft: (0,
            t.$Zj)("triangle-left", 60271),
            triangleRight: (0,
            t.$Zj)("triangle-right", 60272),
            triangleUp: (0,
            t.$Zj)("triangle-up", 60273),
            twitter: (0,
            t.$Zj)("twitter", 60274),
            unfold: (0,
            t.$Zj)("unfold", 60275),
            unlock: (0,
            t.$Zj)("unlock", 60276),
            unmute: (0,
            t.$Zj)("unmute", 60277),
            unverified: (0,
            t.$Zj)("unverified", 60278),
            verified: (0,
            t.$Zj)("verified", 60279),
            versions: (0,
            t.$Zj)("versions", 60280),
            vmActive: (0,
            t.$Zj)("vm-active", 60281),
            vmOutline: (0,
            t.$Zj)("vm-outline", 60282),
            vmRunning: (0,
            t.$Zj)("vm-running", 60283),
            watch: (0,
            t.$Zj)("watch", 60284),
            whitespace: (0,
            t.$Zj)("whitespace", 60285),
            wholeWord: (0,
            t.$Zj)("whole-word", 60286),
            window: (0,
            t.$Zj)("window", 60287),
            wordWrap: (0,
            t.$Zj)("word-wrap", 60288),
            zoomIn: (0,
            t.$Zj)("zoom-in", 60289),
            zoomOut: (0,
            t.$Zj)("zoom-out", 60290),
            listFilter: (0,
            t.$Zj)("list-filter", 60291),
            listFlat: (0,
            t.$Zj)("list-flat", 60292),
            listSelection: (0,
            t.$Zj)("list-selection", 60293),
            selection: (0,
            t.$Zj)("selection", 60293),
            listTree: (0,
            t.$Zj)("list-tree", 60294),
            debugBreakpointFunctionUnverified: (0,
            t.$Zj)("debug-breakpoint-function-unverified", 60295),
            debugBreakpointFunction: (0,
            t.$Zj)("debug-breakpoint-function", 60296),
            debugBreakpointFunctionDisabled: (0,
            t.$Zj)("debug-breakpoint-function-disabled", 60296),
            debugStackframeActive: (0,
            t.$Zj)("debug-stackframe-active", 60297),
            circleSmallFilled: (0,
            t.$Zj)("circle-small-filled", 60298),
            debugStackframeDot: (0,
            t.$Zj)("debug-stackframe-dot", 60298),
            terminalDecorationMark: (0,
            t.$Zj)("terminal-decoration-mark", 60298),
            debugStackframe: (0,
            t.$Zj)("debug-stackframe", 60299),
            debugStackframeFocused: (0,
            t.$Zj)("debug-stackframe-focused", 60299),
            debugBreakpointUnsupported: (0,
            t.$Zj)("debug-breakpoint-unsupported", 60300),
            symbolString: (0,
            t.$Zj)("symbol-string", 60301),
            debugReverseContinue: (0,
            t.$Zj)("debug-reverse-continue", 60302),
            debugStepBack: (0,
            t.$Zj)("debug-step-back", 60303),
            debugRestartFrame: (0,
            t.$Zj)("debug-restart-frame", 60304),
            debugAlt: (0,
            t.$Zj)("debug-alt", 60305),
            callIncoming: (0,
            t.$Zj)("call-incoming", 60306),
            callOutgoing: (0,
            t.$Zj)("call-outgoing", 60307),
            menu: (0,
            t.$Zj)("menu", 60308),
            expandAll: (0,
            t.$Zj)("expand-all", 60309),
            feedback: (0,
            t.$Zj)("feedback", 60310),
            gitPullRequestReviewer: (0,
            t.$Zj)("git-pull-request-reviewer", 60310),
            groupByRefType: (0,
            t.$Zj)("group-by-ref-type", 60311),
            ungroupByRefType: (0,
            t.$Zj)("ungroup-by-ref-type", 60312),
            account: (0,
            t.$Zj)("account", 60313),
            gitPullRequestAssignee: (0,
            t.$Zj)("git-pull-request-assignee", 60313),
            bellDot: (0,
            t.$Zj)("bell-dot", 60314),
            debugConsole: (0,
            t.$Zj)("debug-console", 60315),
            library: (0,
            t.$Zj)("library", 60316),
            output: (0,
            t.$Zj)("output", 60317),
            runAll: (0,
            t.$Zj)("run-all", 60318),
            syncIgnored: (0,
            t.$Zj)("sync-ignored", 60319),
            pinned: (0,
            t.$Zj)("pinned", 60320),
            githubInverted: (0,
            t.$Zj)("github-inverted", 60321),
            serverProcess: (0,
            t.$Zj)("server-process", 60322),
            serverEnvironment: (0,
            t.$Zj)("server-environment", 60323),
            pass: (0,
            t.$Zj)("pass", 60324),
            issueClosed: (0,
            t.$Zj)("issue-closed", 60324),
            stopCircle: (0,
            t.$Zj)("stop-circle", 60325),
            playCircle: (0,
            t.$Zj)("play-circle", 60326),
            record: (0,
            t.$Zj)("record", 60327),
            debugAltSmall: (0,
            t.$Zj)("debug-alt-small", 60328),
            vmConnect: (0,
            t.$Zj)("vm-connect", 60329),
            cloud: (0,
            t.$Zj)("cloud", 60330),
            merge: (0,
            t.$Zj)("merge", 60331),
            export: (0,
            t.$Zj)("export", 60332),
            graphLeft: (0,
            t.$Zj)("graph-left", 60333),
            magnet: (0,
            t.$Zj)("magnet", 60334),
            notebook: (0,
            t.$Zj)("notebook", 60335),
            redo: (0,
            t.$Zj)("redo", 60336),
            checkAll: (0,
            t.$Zj)("check-all", 60337),
            pinnedDirty: (0,
            t.$Zj)("pinned-dirty", 60338),
            passFilled: (0,
            t.$Zj)("pass-filled", 60339),
            circleLargeFilled: (0,
            t.$Zj)("circle-large-filled", 60340),
            circleLarge: (0,
            t.$Zj)("circle-large", 60341),
            circleLargeOutline: (0,
            t.$Zj)("circle-large-outline", 60341),
            combine: (0,
            t.$Zj)("combine", 60342),
            gather: (0,
            t.$Zj)("gather", 60342),
            table: (0,
            t.$Zj)("table", 60343),
            variableGroup: (0,
            t.$Zj)("variable-group", 60344),
            typeHierarchy: (0,
            t.$Zj)("type-hierarchy", 60345),
            typeHierarchySub: (0,
            t.$Zj)("type-hierarchy-sub", 60346),
            typeHierarchySuper: (0,
            t.$Zj)("type-hierarchy-super", 60347),
            gitPullRequestCreate: (0,
            t.$Zj)("git-pull-request-create", 60348),
            runAbove: (0,
            t.$Zj)("run-above", 60349),
            runBelow: (0,
            t.$Zj)("run-below", 60350),
            notebookTemplate: (0,
            t.$Zj)("notebook-template", 60351),
            debugRerun: (0,
            t.$Zj)("debug-rerun", 60352),
            workspaceTrusted: (0,
            t.$Zj)("workspace-trusted", 60353),
            workspaceUntrusted: (0,
            t.$Zj)("workspace-untrusted", 60354),
            workspaceUnknown: (0,
            t.$Zj)("workspace-unknown", 60355),
            terminalCmd: (0,
            t.$Zj)("terminal-cmd", 60356),
            terminalDebian: (0,
            t.$Zj)("terminal-debian", 60357),
            terminalLinux: (0,
            t.$Zj)("terminal-linux", 60358),
            terminalPowershell: (0,
            t.$Zj)("terminal-powershell", 60359),
            terminalTmux: (0,
            t.$Zj)("terminal-tmux", 60360),
            terminalUbuntu: (0,
            t.$Zj)("terminal-ubuntu", 60361),
            terminalBash: (0,
            t.$Zj)("terminal-bash", 60362),
            arrowSwap: (0,
            t.$Zj)("arrow-swap", 60363),
            copy: (0,
            t.$Zj)("copy", 60364),
            personAdd: (0,
            t.$Zj)("person-add", 60365),
            filterFilled: (0,
            t.$Zj)("filter-filled", 60366),
            wand: (0,
            t.$Zj)("wand", 60367),
            debugLineByLine: (0,
            t.$Zj)("debug-line-by-line", 60368),
            inspect: (0,
            t.$Zj)("inspect", 60369),
            layers: (0,
            t.$Zj)("layers", 60370),
            layersDot: (0,
            t.$Zj)("layers-dot", 60371),
            layersActive: (0,
            t.$Zj)("layers-active", 60372),
            compass: (0,
            t.$Zj)("compass", 60373),
            compassDot: (0,
            t.$Zj)("compass-dot", 60374),
            compassActive: (0,
            t.$Zj)("compass-active", 60375),
            azure: (0,
            t.$Zj)("azure", 60376),
            issueDraft: (0,
            t.$Zj)("issue-draft", 60377),
            gitPullRequestClosed: (0,
            t.$Zj)("git-pull-request-closed", 60378),
            gitPullRequestDraft: (0,
            t.$Zj)("git-pull-request-draft", 60379),
            debugAll: (0,
            t.$Zj)("debug-all", 60380),
            debugCoverage: (0,
            t.$Zj)("debug-coverage", 60381),
            runErrors: (0,
            t.$Zj)("run-errors", 60382),
            folderLibrary: (0,
            t.$Zj)("folder-library", 60383),
            debugContinueSmall: (0,
            t.$Zj)("debug-continue-small", 60384),
            beakerStop: (0,
            t.$Zj)("beaker-stop", 60385),
            graphLine: (0,
            t.$Zj)("graph-line", 60386),
            graphScatter: (0,
            t.$Zj)("graph-scatter", 60387),
            pieChart: (0,
            t.$Zj)("pie-chart", 60388),
            bracket: (0,
            t.$Zj)("bracket", 60175),
            bracketDot: (0,
            t.$Zj)("bracket-dot", 60389),
            bracketError: (0,
            t.$Zj)("bracket-error", 60390),
            lockSmall: (0,
            t.$Zj)("lock-small", 60391),
            azureDevops: (0,
            t.$Zj)("azure-devops", 60392),
            verifiedFilled: (0,
            t.$Zj)("verified-filled", 60393),
            newline: (0,
            t.$Zj)("newline", 60394),
            layout: (0,
            t.$Zj)("layout", 60395),
            layoutActivitybarLeft: (0,
            t.$Zj)("layout-activitybar-left", 60396),
            layoutActivitybarRight: (0,
            t.$Zj)("layout-activitybar-right", 60397),
            layoutPanelLeft: (0,
            t.$Zj)("layout-panel-left", 60398),
            layoutPanelCenter: (0,
            t.$Zj)("layout-panel-center", 60399),
            layoutPanelJustify: (0,
            t.$Zj)("layout-panel-justify", 60400),
            layoutPanelRight: (0,
            t.$Zj)("layout-panel-right", 60401),
            layoutPanel: (0,
            t.$Zj)("layout-panel", 60402),
            layoutSidebarLeft: (0,
            t.$Zj)("layout-sidebar-left", 60403),
            layoutSidebarRight: (0,
            t.$Zj)("layout-sidebar-right", 60404),
            layoutStatusbar: (0,
            t.$Zj)("layout-statusbar", 60405),
            layoutMenubar: (0,
            t.$Zj)("layout-menubar", 60406),
            layoutCentered: (0,
            t.$Zj)("layout-centered", 60407),
            target: (0,
            t.$Zj)("target", 60408),
            indent: (0,
            t.$Zj)("indent", 60409),
            recordSmall: (0,
            t.$Zj)("record-small", 60410),
            errorSmall: (0,
            t.$Zj)("error-small", 60411),
            terminalDecorationError: (0,
            t.$Zj)("terminal-decoration-error", 60411),
            arrowCircleDown: (0,
            t.$Zj)("arrow-circle-down", 60412),
            arrowCircleLeft: (0,
            t.$Zj)("arrow-circle-left", 60413),
            arrowCircleRight: (0,
            t.$Zj)("arrow-circle-right", 60414),
            arrowCircleUp: (0,
            t.$Zj)("arrow-circle-up", 60415),
            layoutSidebarRightOff: (0,
            t.$Zj)("layout-sidebar-right-off", 60416),
            layoutPanelOff: (0,
            t.$Zj)("layout-panel-off", 60417),
            layoutSidebarLeftOff: (0,
            t.$Zj)("layout-sidebar-left-off", 60418),
            blank: (0,
            t.$Zj)("blank", 60419),
            heartFilled: (0,
            t.$Zj)("heart-filled", 60420),
            map: (0,
            t.$Zj)("map", 60421),
            mapHorizontal: (0,
            t.$Zj)("map-horizontal", 60421),
            foldHorizontal: (0,
            t.$Zj)("fold-horizontal", 60421),
            mapFilled: (0,
            t.$Zj)("map-filled", 60422),
            mapHorizontalFilled: (0,
            t.$Zj)("map-horizontal-filled", 60422),
            foldHorizontalFilled: (0,
            t.$Zj)("fold-horizontal-filled", 60422),
            circleSmall: (0,
            t.$Zj)("circle-small", 60423),
            bellSlash: (0,
            t.$Zj)("bell-slash", 60424),
            bellSlashDot: (0,
            t.$Zj)("bell-slash-dot", 60425),
            commentUnresolved: (0,
            t.$Zj)("comment-unresolved", 60426),
            gitPullRequestGoToChanges: (0,
            t.$Zj)("git-pull-request-go-to-changes", 60427),
            gitPullRequestNewChanges: (0,
            t.$Zj)("git-pull-request-new-changes", 60428),
            searchFuzzy: (0,
            t.$Zj)("search-fuzzy", 60429),
            commentDraft: (0,
            t.$Zj)("comment-draft", 60430),
            send: (0,
            t.$Zj)("send", 60431),
            sparkle: (0,
            t.$Zj)("sparkle", 60432),
            insert: (0,
            t.$Zj)("insert", 60433),
            mic: (0,
            t.$Zj)("mic", 60434),
            thumbsdownFilled: (0,
            t.$Zj)("thumbsdown-filled", 60435),
            thumbsupFilled: (0,
            t.$Zj)("thumbsup-filled", 60436),
            coffee: (0,
            t.$Zj)("coffee", 60437),
            snake: (0,
            t.$Zj)("snake", 60438),
            game: (0,
            t.$Zj)("game", 60439),
            vr: (0,
            t.$Zj)("vr", 60440),
            chip: (0,
            t.$Zj)("chip", 60441),
            piano: (0,
            t.$Zj)("piano", 60442),
            music: (0,
            t.$Zj)("music", 60443),
            micFilled: (0,
            t.$Zj)("mic-filled", 60444),
            repoFetch: (0,
            t.$Zj)("repo-fetch", 60445),
            copilot: (0,
            t.$Zj)("copilot", 60446),
            lightbulbSparkle: (0,
            t.$Zj)("lightbulb-sparkle", 60447),
            robot: (0,
            t.$Zj)("robot", 60448),
            sparkleFilled: (0,
            t.$Zj)("sparkle-filled", 60449),
            diffSingle: (0,
            t.$Zj)("diff-single", 60450),
            diffMultiple: (0,
            t.$Zj)("diff-multiple", 60451),
            surroundWith: (0,
            t.$Zj)("surround-with", 60452),
            share: (0,
            t.$Zj)("share", 60453),
            gitStash: (0,
            t.$Zj)("git-stash", 60454),
            gitStashApply: (0,
            t.$Zj)("git-stash-apply", 60455),
            gitStashPop: (0,
            t.$Zj)("git-stash-pop", 60456),
            vscode: (0,
            t.$Zj)("vscode", 60457),
            vscodeInsiders: (0,
            t.$Zj)("vscode-insiders", 60458),
            codeOss: (0,
            t.$Zj)("code-oss", 60459),
            runCoverage: (0,
            t.$Zj)("run-coverage", 60460),
            runAllCoverage: (0,
            t.$Zj)("run-all-coverage", 60461),
            coverage: (0,
            t.$Zj)("coverage", 60462),
            githubProject: (0,
            t.$Zj)("github-project", 60463),
            mapVertical: (0,
            t.$Zj)("map-vertical", 60464),
            foldVertical: (0,
            t.$Zj)("fold-vertical", 60464),
            mapVerticalFilled: (0,
            t.$Zj)("map-vertical-filled", 60465),
            foldVerticalFilled: (0,
            t.$Zj)("fold-vertical-filled", 60465),
            goToSearch: (0,
            t.$Zj)("go-to-search", 60466),
            percentage: (0,
            t.$Zj)("percentage", 60467),
            sortPercentage: (0,
            t.$Zj)("sort-percentage", 60467),
            attach: (0,
            t.$Zj)("attach", 60468)
        }
    }),
    define(ge[26], be([1, 0, 609, 938]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$5j = e.$4j = void 0,
        e.$3j = C;
        function C() {
            return Object.values(e.$5j)
        }
        e.$4j = {
            dialogError: (0,
            t.$Zj)("dialog-error", "error"),
            dialogWarning: (0,
            t.$Zj)("dialog-warning", "warning"),
            dialogInfo: (0,
            t.$Zj)("dialog-info", "info"),
            dialogClose: (0,
            t.$Zj)("dialog-close", "close"),
            treeItemExpanded: (0,
            t.$Zj)("tree-item-expanded", "chevron-down"),
            treeFilterOnTypeOn: (0,
            t.$Zj)("tree-filter-on-type-on", "list-filter"),
            treeFilterOnTypeOff: (0,
            t.$Zj)("tree-filter-on-type-off", "list-selection"),
            treeFilterClear: (0,
            t.$Zj)("tree-filter-clear", "close"),
            treeItemLoading: (0,
            t.$Zj)("tree-item-loading", "loading"),
            menuSelection: (0,
            t.$Zj)("menu-selection", "check"),
            menuSubmenu: (0,
            t.$Zj)("menu-submenu", "chevron-right"),
            menuBarMore: (0,
            t.$Zj)("menubar-more", "more"),
            scrollbarButtonLeft: (0,
            t.$Zj)("scrollbar-button-left", "triangle-left"),
            scrollbarButtonRight: (0,
            t.$Zj)("scrollbar-button-right", "triangle-right"),
            scrollbarButtonUp: (0,
            t.$Zj)("scrollbar-button-up", "triangle-up"),
            scrollbarButtonDown: (0,
            t.$Zj)("scrollbar-button-down", "triangle-down"),
            toolBarMore: (0,
            t.$Zj)("toolbar-more", "more"),
            quickInputBack: (0,
            t.$Zj)("quick-input-back", "arrow-left"),
            dropDownButton: (0,
            t.$Zj)("drop-down-button", 60084),
            symbolCustomColor: (0,
            t.$Zj)("symbol-customcolor", 60252),
            exportIcon: (0,
            t.$Zj)("export", 60332),
            workspaceUnspecified: (0,
            t.$Zj)("workspace-unspecified", 60355),
            newLine: (0,
            t.$Zj)("newline", 60394),
            thumbsDownFilled: (0,
            t.$Zj)("thumbsdown-filled", 60435),
            thumbsUpFilled: (0,
            t.$Zj)("thumbsup-filled", 60436),
            gitFetch: (0,
            t.$Zj)("git-fetch", 60445),
            lightbulbSparkleAutofix: (0,
            t.$Zj)("lightbulb-sparkle-autofix", 60447),
            debugBreakpointPending: (0,
            t.$Zj)("debug-breakpoint-pending", 60377)
        },
        e.$5j = {
            ...n.$2j,
            ...e.$4j
        }
    }),
    define(ge[65], be([1, 0, 18]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$eo = n,
        e.$fo = C,
        e.$go = L,
        e.$ho = E,
        e.$io = $,
        e.$jo = v,
        e.$ko = f,
        e.$lo = g,
        e.$mo = p,
        e.$no = i,
        e.$oo = c,
        e.$po = h,
        e.$qo = a;
        function n(d) {
            if (!d || typeof d != "object" || d instanceof RegExp)
                return d;
            const u = Array.isArray(d) ? [] : {};
            return Object.entries(d).forEach(([s,r])=>{
                u[s] = r && typeof r == "object" ? n(r) : r
            }
            ),
            u
        }
        function C(d) {
            if (!d || typeof d != "object")
                return d;
            const u = [d];
            for (; u.length > 0; ) {
                const s = u.shift();
                Object.freeze(s);
                for (const r in s)
                    if (I.call(s, r)) {
                        const l = s[r];
                        typeof l == "object" && !Object.isFrozen(l) && !(0,
                        t.$hg)(l) && u.push(l)
                    }
            }
            return d
        }
        const I = Object.prototype.hasOwnProperty;
        function L(d, u) {
            return y(d, u, new Set)
        }
        function y(d, u, s) {
            if ((0,
            t.$ng)(d))
                return d;
            const r = u(d);
            if (typeof r < "u")
                return r;
            if (Array.isArray(d)) {
                const l = [];
                for (const o of d)
                    l.push(y(o, u, s));
                return l
            }
            if ((0,
            t.$gg)(d)) {
                if (s.has(d))
                    throw new Error("Cannot clone recursive data-structure");
                s.add(d);
                const l = {};
                for (const o in d)
                    I.call(d, o) && (l[o] = y(d[o], u, s));
                return s.delete(d),
                l
            }
            return d
        }
        function E(d, u, s=!0) {
            return (0,
            t.$gg)(d) ? ((0,
            t.$gg)(u) && Object.keys(u).forEach(r=>{
                r in d ? s && ((0,
                t.$gg)(d[r]) && (0,
                t.$gg)(u[r]) ? E(d[r], u[r], s) : d[r] = u[r]) : d[r] = u[r]
            }
            ),
            d) : u
        }
        function $(d, u) {
            if (d === u)
                return !0;
            if (d == null || u === null || u === void 0 || typeof d != typeof u || typeof d != "object" || Array.isArray(d) !== Array.isArray(u))
                return !1;
            let s, r;
            if (Array.isArray(d)) {
                if (d.length !== u.length)
                    return !1;
                for (s = 0; s < d.length; s++)
                    if (!$(d[s], u[s]))
                        return !1
            } else {
                const l = [];
                for (r in d)
                    l.push(r);
                l.sort();
                const o = [];
                for (r in u)
                    o.push(r);
                if (o.sort(),
                !$(l, o))
                    return !1;
                for (s = 0; s < l.length; s++)
                    if (!$(d[l[s]], u[l[s]]))
                        return !1
            }
            return !0
        }
        function v(d) {
            const u = new Set;
            return JSON.stringify(d, (s,r)=>{
                if ((0,
                t.$gg)(r) || Array.isArray(r)) {
                    if (u.has(r))
                        return "[Circular]";
                    u.add(r)
                }
                return typeof r == "bigint" ? `[BigInt ${r.toString()}]` : r
            }
            )
        }
        function f(d, u) {
            const s = Object.create(null);
            return !d || !u || Object.keys(u).forEach(l=>{
                const o = d[l]
                  , b = u[l];
                $(o, b) || (s[l] = b)
            }
            ),
            s
        }
        function g(d, u) {
            const s = u.toLowerCase()
              , r = Object.keys(d).find(l=>l.toLowerCase() === s);
            return r ? d[r] : d[u]
        }
        function p(d, u) {
            const s = Object.create(null);
            for (const [r,l] of Object.entries(d))
                u(r, l) && (s[r] = l);
            return s
        }
        function i(d) {
            let u = [];
            for (; Object.prototype !== d; )
                u = u.concat(Object.getOwnPropertyNames(d)),
                d = Object.getPrototypeOf(d);
            return u
        }
        function c(d) {
            const u = [];
            for (const s of i(d))
                typeof d[s] == "function" && u.push(s);
            return u
        }
        function h(d, u) {
            const s = l=>function() {
                const o = Array.prototype.slice.call(arguments, 0);
                return u(l, o)
            }
              , r = {};
            for (const l of d)
                r[l] = s(l);
            return r
        }
        function a(d, u) {
            const s = {};
            for (const [r,l] of Object.entries(d))
                s[r] = u(l, r);
            return s
        }
    }),
    define(ge[32], be([1, 0, 26]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.ThemeIcon = e.ThemeColor = void 0,
        e.$6j = C;
        var n;
        (function(L) {
            function y(E) {
                return E && typeof E == "object" && typeof E.id == "string"
            }
            L.isThemeColor = y
        }
        )(n || (e.ThemeColor = n = {}));
        function C(L) {
            return {
                id: L
            }
        }
        var I;
        (function(L) {
            L.iconNameSegment = "[A-Za-z0-9]+",
            L.iconNameExpression = "[A-Za-z0-9-]+",
            L.iconModifierExpression = "~[A-Za-z]+",
            L.iconNameCharacter = "[A-Za-z0-9~-]";
            const y = new RegExp(`^(${L.iconNameExpression})(${L.iconModifierExpression})?$`);
            function E(d) {
                const u = y.exec(d.id);
                if (!u)
                    return E(t.$5j.error);
                const [,s,r] = u
                  , l = ["codicon", "codicon-" + s];
                return r && l.push("codicon-modifier-" + r.substring(1)),
                l
            }
            L.asClassNameArray = E;
            function $(d) {
                return E(d).join(" ")
            }
            L.asClassName = $;
            function v(d) {
                return "." + E(d).join(".")
            }
            L.asCSSSelector = v;
            function f(d) {
                return d && typeof d == "object" && typeof d.id == "string" && (typeof d.color > "u" || n.isThemeColor(d.color))
            }
            L.isThemeIcon = f;
            const g = new RegExp(`^\\$\\((${L.iconNameExpression}(?:${L.iconModifierExpression})?)\\)$`);
            function p(d) {
                const u = g.exec(d);
                if (!u)
                    return;
                const [,s] = u;
                return {
                    id: s
                }
            }
            L.fromString = p;
            function i(d) {
                return {
                    id: d
                }
            }
            L.fromId = i;
            function c(d, u) {
                let s = d.id;
                const r = s.lastIndexOf("~");
                return r !== -1 && (s = s.substring(0, r)),
                u && (s = `${s}~${u}`),
                {
                    id: s
                }
            }
            L.modify = c;
            function h(d) {
                const u = d.id.lastIndexOf("~");
                if (u !== -1)
                    return d.id.substring(u + 1)
            }
            L.getModifier = h;
            function a(d, u) {
                return d.id === u.id && d.color?.id === u.color?.id
            }
            L.isEqual = a
        }
        )(I || (e.ThemeIcon = I = {}))
    }),
    define(ge[168], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.Constants = void 0,
        e.$af = n,
        e.$bf = C;
        var t;
        (function(I) {
            I[I.MAX_SAFE_SMALL_INTEGER = 1073741824] = "MAX_SAFE_SMALL_INTEGER",
            I[I.MIN_SAFE_SMALL_INTEGER = -1073741824] = "MIN_SAFE_SMALL_INTEGER",
            I[I.MAX_UINT_8 = 255] = "MAX_UINT_8",
            I[I.MAX_UINT_16 = 65535] = "MAX_UINT_16",
            I[I.MAX_UINT_32 = 4294967295] = "MAX_UINT_32",
            I[I.UNICODE_SUPPLEMENTARY_PLANE_BEGIN = 65536] = "UNICODE_SUPPLEMENTARY_PLANE_BEGIN"
        }
        )(t || (e.Constants = t = {}));
        function n(I) {
            return I < 0 ? 0 : I > t.MAX_UINT_8 ? t.MAX_UINT_8 : I | 0
        }
        function C(I) {
            return I < 0 ? 0 : I > t.MAX_UINT_32 ? t.MAX_UINT_32 : I | 0
        }
    }),
    define(ge[31], be([1, 0, 516, 105, 147, 168]), function(ce, e, t, n, C, I) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$dg = e.$cg = e.$bg = e.GraphemeBreakType = e.$4f = e.$Vf = e.$Of = e.$Nf = void 0,
        e.$cf = L,
        e.$df = E,
        e.$ef = v,
        e.$ff = f,
        e.$gf = g,
        e.$hf = p,
        e.$if = i,
        e.$jf = c,
        e.$kf = h,
        e.$lf = a,
        e.$mf = d,
        e.$nf = u,
        e.$of = s,
        e.$pf = r,
        e.$qf = l,
        e.$rf = o,
        e.$sf = b,
        e.$tf = m,
        e.$uf = w,
        e.$vf = S,
        e.$wf = T,
        e.$xf = D,
        e.$yf = k,
        e.$zf = P,
        e.$Af = A,
        e.$Bf = M,
        e.$Cf = O,
        e.$Df = R,
        e.$Ef = N,
        e.$Ff = z,
        e.$Gf = V,
        e.$Hf = B,
        e.$If = j,
        e.$Jf = W,
        e.$Kf = q,
        e.$Lf = H,
        e.$Mf = U,
        e.$Pf = x,
        e.$Qf = X,
        e.$Rf = Y,
        e.$Sf = Q,
        e.$Tf = re,
        e.$Uf = ee,
        e.$Wf = J,
        e.$Xf = te,
        e.$Yf = ne,
        e.$Zf = le,
        e.$1f = oe,
        e.$2f = fe,
        e.$3f = ue,
        e.$5f = de,
        e.$6f = $e,
        e.$7f = pe,
        e.$8f = ve,
        e.$9f = me,
        e.$0f = we,
        e.$$f = ye,
        e.$_f = Le,
        e.$ag = Me;
        function L(Ie) {
            return !Ie || typeof Ie != "string" ? !0 : Ie.trim().length === 0
        }
        const y = /{(\d+)}/g;
        function E(Ie, ...Te) {
            return Te.length === 0 ? Ie : Ie.replace(y, function(Ne, Oe) {
                const Fe = parseInt(Oe, 10);
                return isNaN(Fe) || Fe < 0 || Fe >= Te.length ? Ne : Te[Fe]
            })
        }
        const $ = /{([^}]+)}/g;
        function v(Ie, Te) {
            return Object.keys(Te).length === 0 ? Ie : Ie.replace($, (Ne,Oe)=>Te[Oe] ?? Ne)
        }
        function f(Ie) {
            return Ie.replace(/[<>"'&]/g, Te=>{
                switch (Te) {
                case "<":
                    return "&lt;";
                case ">":
                    return "&gt;";
                case '"':
                    return "&quot;";
                case "'":
                    return "&apos;";
                case "&":
                    return "&amp;"
                }
                return Te
            }
            )
        }
        function g(Ie) {
            return Ie.replace(/[<>&]/g, function(Te) {
                switch (Te) {
                case "<":
                    return "&lt;";
                case ">":
                    return "&gt;";
                case "&":
                    return "&amp;";
                default:
                    return Te
                }
            })
        }
        function p(Ie) {
            return Ie.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g, "\\$&")
        }
        function i(Ie, Te) {
            let Ne = 0
              , Oe = Ie.indexOf(Te);
            for (; Oe !== -1; )
                Ne++,
                Oe = Ie.indexOf(Te, Oe + Te.length);
            return Ne
        }
        function c(Ie, Te, Ne="\u2026") {
            return Ie.length <= Te ? Ie : `${Ie.substr(0, Te)}${Ne}`
        }
        function h(Ie, Te, Ne="\u2026") {
            if (Ie.length <= Te)
                return Ie;
            const Oe = Math.ceil(Te / 2) - Ne.length / 2
              , Fe = Math.floor(Te / 2) - Ne.length / 2;
            return `${Ie.substr(0, Oe)}${Ne}${Ie.substr(Ie.length - Fe)}`
        }
        function a(Ie, Te=" ") {
            const Ne = d(Ie, Te);
            return u(Ne, Te)
        }
        function d(Ie, Te) {
            if (!Ie || !Te)
                return Ie;
            const Ne = Te.length;
            if (Ne === 0 || Ie.length === 0)
                return Ie;
            let Oe = 0;
            for (; Ie.indexOf(Te, Oe) === Oe; )
                Oe = Oe + Ne;
            return Ie.substring(Oe)
        }
        function u(Ie, Te) {
            if (!Ie || !Te)
                return Ie;
            const Ne = Te.length
              , Oe = Ie.length;
            if (Ne === 0 || Oe === 0)
                return Ie;
            let Fe = Oe
              , Re = -1;
            for (; Re = Ie.lastIndexOf(Te, Fe - 1),
            !(Re === -1 || Re + Ne !== Fe); ) {
                if (Re === 0)
                    return "";
                Fe = Re
            }
            return Ie.substring(0, Fe)
        }
        function s(Ie) {
            return Ie.replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&").replace(/[\*]/g, ".*")
        }
        function r(Ie) {
            return Ie.replace(/\*/g, "")
        }
        function l(Ie, Te, Ne={}) {
            if (!Ie)
                throw new Error("Cannot create regex from empty string");
            Te || (Ie = p(Ie)),
            Ne.wholeWord && (/\B/.test(Ie.charAt(0)) || (Ie = "\\b" + Ie),
            /\B/.test(Ie.charAt(Ie.length - 1)) || (Ie = Ie + "\\b"));
            let Oe = "";
            return Ne.global && (Oe += "g"),
            Ne.matchCase || (Oe += "i"),
            Ne.multiline && (Oe += "m"),
            Ne.unicode && (Oe += "u"),
            new RegExp(Ie,Oe)
        }
        function o(Ie) {
            return Ie.source === "^" || Ie.source === "^$" || Ie.source === "$" || Ie.source === "^\\s*$" ? !1 : !!(Ie.exec("") && Ie.lastIndex === 0)
        }
        function b(Ie) {
            return Ie.split(/\r\n|\r|\n/)
        }
        function m(Ie) {
            const Te = []
              , Ne = Ie.split(/(\r\n|\r|\n)/);
            for (let Oe = 0; Oe < Math.ceil(Ne.length / 2); Oe++)
                Te.push(Ne[2 * Oe] + (Ne[2 * Oe + 1] ?? ""));
            return Te
        }
        function w(Ie) {
            for (let Te = 0, Ne = Ie.length; Te < Ne; Te++) {
                const Oe = Ie.charCodeAt(Te);
                if (Oe !== n.CharCode.Space && Oe !== n.CharCode.Tab)
                    return Te
            }
            return -1
        }
        function S(Ie, Te=0, Ne=Ie.length) {
            for (let Oe = Te; Oe < Ne; Oe++) {
                const Fe = Ie.charCodeAt(Oe);
                if (Fe !== n.CharCode.Space && Fe !== n.CharCode.Tab)
                    return Ie.substring(Te, Oe)
            }
            return Ie.substring(Te, Ne)
        }
        function T(Ie, Te=Ie.length - 1) {
            for (let Ne = Te; Ne >= 0; Ne--) {
                const Oe = Ie.charCodeAt(Ne);
                if (Oe !== n.CharCode.Space && Oe !== n.CharCode.Tab)
                    return Ne
            }
            return -1
        }
        function D(Ie, Te, Ne) {
            const Oe = [];
            let Fe = 0;
            for (const Re of Ie.matchAll(Te)) {
                if (Oe.push(Ie.slice(Fe, Re.index)),
                Re.index === void 0)
                    throw new Error("match.index should be defined");
                Fe = Re.index + Re[0].length,
                Oe.push(Ne(Re[0], ...Re.slice(1), Re.index, Ie, Re.groups))
            }
            return Oe.push(Ie.slice(Fe)),
            Promise.all(Oe).then(Re=>Re.join(""))
        }
        function k(Ie, Te) {
            return Ie < Te ? -1 : Ie > Te ? 1 : 0
        }
        function P(Ie, Te, Ne=0, Oe=Ie.length, Fe=0, Re=Te.length) {
            for (; Ne < Oe && Fe < Re; Ne++,
            Fe++) {
                const He = Ie.charCodeAt(Ne)
                  , Ge = Te.charCodeAt(Fe);
                if (He < Ge)
                    return -1;
                if (He > Ge)
                    return 1
            }
            const We = Oe - Ne
              , Ue = Re - Fe;
            return We < Ue ? -1 : We > Ue ? 1 : 0
        }
        function A(Ie, Te) {
            return M(Ie, Te, 0, Ie.length, 0, Te.length)
        }
        function M(Ie, Te, Ne=0, Oe=Ie.length, Fe=0, Re=Te.length) {
            for (; Ne < Oe && Fe < Re; Ne++,
            Fe++) {
                let He = Ie.charCodeAt(Ne)
                  , Ge = Te.charCodeAt(Fe);
                if (He === Ge)
                    continue;
                if (He >= 128 || Ge >= 128)
                    return P(Ie.toLowerCase(), Te.toLowerCase(), Ne, Oe, Fe, Re);
                R(He) && (He -= 32),
                R(Ge) && (Ge -= 32);
                const et = He - Ge;
                if (et !== 0)
                    return et
            }
            const We = Oe - Ne
              , Ue = Re - Fe;
            return We < Ue ? -1 : We > Ue ? 1 : 0
        }
        function O(Ie) {
            return Ie >= n.CharCode.Digit0 && Ie <= n.CharCode.Digit9
        }
        function R(Ie) {
            return Ie >= n.CharCode.a && Ie <= n.CharCode.z
        }
        function N(Ie) {
            return Ie >= n.CharCode.A && Ie <= n.CharCode.Z
        }
        function z(Ie, Te) {
            return Ie.length === Te.length && M(Ie, Te) === 0
        }
        function V(Ie, Te) {
            const Ne = Te.length;
            return Te.length > Ie.length ? !1 : M(Ie, Te, 0, Ne) === 0
        }
        function B(Ie, Te) {
            const Ne = Math.min(Ie.length, Te.length);
            let Oe;
            for (Oe = 0; Oe < Ne; Oe++)
                if (Ie.charCodeAt(Oe) !== Te.charCodeAt(Oe))
                    return Oe;
            return Ne
        }
        function j(Ie, Te) {
            const Ne = Math.min(Ie.length, Te.length);
            let Oe;
            const Fe = Ie.length - 1
              , Re = Te.length - 1;
            for (Oe = 0; Oe < Ne; Oe++)
                if (Ie.charCodeAt(Fe - Oe) !== Te.charCodeAt(Re - Oe))
                    return Oe;
            return Ne
        }
        function W(Ie) {
            return 55296 <= Ie && Ie <= 56319
        }
        function q(Ie) {
            return 56320 <= Ie && Ie <= 57343
        }
        function H(Ie, Te) {
            return (Ie - 55296 << 10) + (Te - 56320) + 65536
        }
        function U(Ie, Te, Ne) {
            const Oe = Ie.charCodeAt(Ne);
            if (W(Oe) && Ne + 1 < Te) {
                const Fe = Ie.charCodeAt(Ne + 1);
                if (q(Fe))
                    return H(Oe, Fe)
            }
            return Oe
        }
        function K(Ie, Te) {
            const Ne = Ie.charCodeAt(Te - 1);
            if (q(Ne) && Te > 1) {
                const Oe = Ie.charCodeAt(Te - 2);
                if (W(Oe))
                    return H(Oe, Ne)
            }
            return Ne
        }
        class G {
            get offset() {
                return this.e
            }
            constructor(Te, Ne=0) {
                this.c = Te,
                this.d = Te.length,
                this.e = Ne
            }
            setOffset(Te) {
                this.e = Te
            }
            prevCodePoint() {
                const Te = K(this.c, this.e);
                return this.e -= Te >= I.Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1,
                Te
            }
            nextCodePoint() {
                const Te = U(this.c, this.d, this.e);
                return this.e += Te >= I.Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1,
                Te
            }
            eol() {
                return this.e >= this.d
            }
        }
        e.$Nf = G;
        class Z {
            get offset() {
                return this.c.offset
            }
            constructor(Te, Ne=0) {
                this.c = new G(Te,Ne)
            }
            nextGraphemeLength() {
                const Te = ze.getInstance()
                  , Ne = this.c
                  , Oe = Ne.offset;
                let Fe = Te.getGraphemeBreakType(Ne.nextCodePoint());
                for (; !Ne.eol(); ) {
                    const Re = Ne.offset
                      , We = Te.getGraphemeBreakType(Ne.nextCodePoint());
                    if (De(Fe, We)) {
                        Ne.setOffset(Re);
                        break
                    }
                    Fe = We
                }
                return Ne.offset - Oe
            }
            prevGraphemeLength() {
                const Te = ze.getInstance()
                  , Ne = this.c
                  , Oe = Ne.offset;
                let Fe = Te.getGraphemeBreakType(Ne.prevCodePoint());
                for (; Ne.offset > 0; ) {
                    const Re = Ne.offset
                      , We = Te.getGraphemeBreakType(Ne.prevCodePoint());
                    if (De(We, Fe)) {
                        Ne.setOffset(Re);
                        break
                    }
                    Fe = We
                }
                return Oe - Ne.offset
            }
            eol() {
                return this.c.eol()
            }
        }
        e.$Of = Z;
        function x(Ie, Te) {
            return new Z(Ie,Te).nextGraphemeLength()
        }
        function X(Ie, Te) {
            return new Z(Ie,Te).prevGraphemeLength()
        }
        function Y(Ie, Te) {
            Te > 0 && q(Ie.charCodeAt(Te)) && Te--;
            const Ne = Te + x(Ie, Te);
            return [Ne - X(Ie, Ne), Ne]
        }
        function Q(Ie) {
            const Te = new Z(Ie);
            let Ne = 0;
            for (; !Te.eol(); )
                Ne++,
                Te.nextGraphemeLength();
            return Ne
        }
        let _;
        function ae() {
            return /(?:[\u05BE\u05C0\u05C3\u05C6\u05D0-\u05F4\u0608\u060B\u060D\u061B-\u064A\u066D-\u066F\u0671-\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u0710\u0712-\u072F\u074D-\u07A5\u07B1-\u07EA\u07F4\u07F5\u07FA\u07FE-\u0815\u081A\u0824\u0828\u0830-\u0858\u085E-\u088E\u08A0-\u08C9\u200F\uFB1D\uFB1F-\uFB28\uFB2A-\uFD3D\uFD50-\uFDC7\uFDF0-\uFDFC\uFE70-\uFEFC]|\uD802[\uDC00-\uDD1B\uDD20-\uDE00\uDE10-\uDE35\uDE40-\uDEE4\uDEEB-\uDF35\uDF40-\uDFFF]|\uD803[\uDC00-\uDD23\uDE80-\uDEA9\uDEAD-\uDF45\uDF51-\uDF81\uDF86-\uDFF6]|\uD83A[\uDC00-\uDCCF\uDD00-\uDD43\uDD4B-\uDFFF]|\uD83B[\uDC00-\uDEBB])/
        }
        function re(Ie) {
            return _ || (_ = ae()),
            _.test(Ie)
        }
        const se = /^[\t\n\r\x20-\x7E]*$/;
        function ee(Ie) {
            return se.test(Ie)
        }
        e.$Vf = /[\u2028\u2029]/;
        function J(Ie) {
            return e.$Vf.test(Ie)
        }
        function te(Ie) {
            return Ie >= 11904 && Ie <= 55215 || Ie >= 63744 && Ie <= 64255 || Ie >= 65281 && Ie <= 65374
        }
        function ne(Ie) {
            return Ie >= 127462 && Ie <= 127487 || Ie === 8986 || Ie === 8987 || Ie === 9200 || Ie === 9203 || Ie >= 9728 && Ie <= 10175 || Ie === 11088 || Ie === 11093 || Ie >= 127744 && Ie <= 128591 || Ie >= 128640 && Ie <= 128764 || Ie >= 128992 && Ie <= 129008 || Ie >= 129280 && Ie <= 129535 || Ie >= 129648 && Ie <= 129782
        }
        function le(Ie, Te, Ne="") {
            const Oe = Ie.trimStart();
            if (Oe.length < Te)
                return Oe;
            const Fe = /\b/g;
            let Re = 0;
            for (; Fe.test(Oe) && !(Oe.length - Fe.lastIndex < Te); )
                Re = Fe.lastIndex,
                Fe.lastIndex += 1;
            return Re === 0 ? Oe : Ne + Oe.substring(Re).trimStart()
        }
        const ie = /(?:(?:\x1b\[|\x9B)[=?>!]?[\d;:]*["$#'* ]?[a-zA-Z@^`{}|~])|(:?\x1b\].*?\x07)/g;
        function *oe(Ie) {
            let Te = 0;
            for (const Ne of Ie.matchAll(ie))
                Te !== Ne.index && (yield{
                    isCode: !1,
                    str: Ie.substring(Te, Ne.index)
                }),
                yield{
                    isCode: !0,
                    str: Ne[0]
                },
                Te = Ne.index + Ne[0].length;
            Te !== Ie.length && (yield{
                isCode: !1,
                str: Ie.substring(Te)
            })
        }
        function fe(Ie) {
            return Ie && (Ie = Ie.replace(ie, "")),
            Ie
        }
        const he = /\\\[.*?\\\]/g;
        function ue(Ie) {
            return fe(Ie).replace(he, "")
        }
        e.$4f = String.fromCharCode(n.CharCode.UTF8_BOM);
        function de(Ie) {
            return !!(Ie && Ie.length > 0 && Ie.charCodeAt(0) === n.CharCode.UTF8_BOM)
        }
        function $e(Ie) {
            return de(Ie) ? Ie.substr(1) : Ie
        }
        function pe(Ie, Te) {
            if (!Ie || !Te || Ie.length < Te.length)
                return !1;
            const Ne = Te.length
              , Oe = Ie.toLowerCase();
            let Fe = 0
              , Re = -1;
            for (; Fe < Ne; ) {
                const We = Oe.indexOf(Te[Fe], Re + 1);
                if (We < 0)
                    return !1;
                Re = We,
                Fe++
            }
            return !0
        }
        function ve(Ie, Te=!1) {
            return Ie ? (Te && (Ie = Ie.replace(/\\./g, "")),
            Ie.toLowerCase() !== Ie) : !1
        }
        function me(Ie) {
            return Ie.charAt(0).toUpperCase() + Ie.slice(1)
        }
        function we(Ie, Te=1) {
            if (Te === 0)
                return "";
            let Ne = -1;
            do
                Ne = Ie.indexOf(`
`, Ne + 1),
                Te--;
            while (Te > 0 && Ne >= 0);
            return Ne === -1 ? Ie : (Ie[Ne - 1] === "\r" && Ne--,
            Ie.substr(0, Ne))
        }
        function ye(Ie) {
            const Te = n.CharCode.Z - n.CharCode.A + 1;
            return Ie = Ie % (2 * Te),
            Ie < Te ? String.fromCharCode(n.CharCode.a + Ie) : String.fromCharCode(n.CharCode.A + Ie - Te)
        }
        function Le(Ie) {
            return ze.getInstance().getGraphemeBreakType(Ie)
        }
        function De(Ie, Te) {
            return Ie === Pe.Other ? Te !== Pe.Extend && Te !== Pe.SpacingMark : Ie === Pe.CR && Te === Pe.LF ? !1 : Ie === Pe.Control || Ie === Pe.CR || Ie === Pe.LF || Te === Pe.Control || Te === Pe.CR || Te === Pe.LF ? !0 : !(Ie === Pe.L && (Te === Pe.L || Te === Pe.V || Te === Pe.LV || Te === Pe.LVT) || (Ie === Pe.LV || Ie === Pe.V) && (Te === Pe.V || Te === Pe.T) || (Ie === Pe.LVT || Ie === Pe.T) && Te === Pe.T || Te === Pe.Extend || Te === Pe.ZWJ || Te === Pe.SpacingMark || Ie === Pe.Prepend || Ie === Pe.ZWJ && Te === Pe.Extended_Pictographic || Ie === Pe.Regional_Indicator && Te === Pe.Regional_Indicator)
        }
        var Pe;
        (function(Ie) {
            Ie[Ie.Other = 0] = "Other",
            Ie[Ie.Prepend = 1] = "Prepend",
            Ie[Ie.CR = 2] = "CR",
            Ie[Ie.LF = 3] = "LF",
            Ie[Ie.Control = 4] = "Control",
            Ie[Ie.Extend = 5] = "Extend",
            Ie[Ie.Regional_Indicator = 6] = "Regional_Indicator",
            Ie[Ie.SpacingMark = 7] = "SpacingMark",
            Ie[Ie.L = 8] = "L",
            Ie[Ie.V = 9] = "V",
            Ie[Ie.T = 10] = "T",
            Ie[Ie.LV = 11] = "LV",
            Ie[Ie.LVT = 12] = "LVT",
            Ie[Ie.ZWJ = 13] = "ZWJ",
            Ie[Ie.Extended_Pictographic = 14] = "Extended_Pictographic"
        }
        )(Pe || (e.GraphemeBreakType = Pe = {}));
        class ze {
            static{this.c = null
            }static getInstance() {
                return ze.c || (ze.c = new ze),
                ze.c
            }
            constructor() {
                this.d = Be()
            }
            getGraphemeBreakType(Te) {
                if (Te < 32)
                    return Te === n.CharCode.LineFeed ? Pe.LF : Te === n.CharCode.CarriageReturn ? Pe.CR : Pe.Control;
                if (Te < 127)
                    return Pe.Other;
                const Ne = this.d
                  , Oe = Ne.length / 3;
                let Fe = 1;
                for (; Fe <= Oe; )
                    if (Te < Ne[3 * Fe])
                        Fe = 2 * Fe;
                    else if (Te > Ne[3 * Fe + 1])
                        Fe = 2 * Fe + 1;
                    else
                        return Ne[3 * Fe + 2];
                return Pe.Other
            }
        }
        function Be() {
            return JSON.parse("[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]")
        }
        function Me(Ie, Te) {
            if (Ie === 0)
                return 0;
            const Ne = Ae(Ie, Te);
            if (Ne !== void 0)
                return Ne;
            const Oe = new G(Te,Ie);
            return Oe.prevCodePoint(),
            Oe.offset
        }
        function Ae(Ie, Te) {
            const Ne = new G(Te,Ie);
            let Oe = Ne.prevCodePoint();
            for (; Se(Oe) || Oe === Ce.emojiVariantSelector || Oe === Ce.enclosingKeyCap; ) {
                if (Ne.offset === 0)
                    return;
                Oe = Ne.prevCodePoint()
            }
            if (!ne(Oe))
                return;
            let Fe = Ne.offset;
            return Fe > 0 && Ne.prevCodePoint() === Ce.zwj && (Fe = Ne.offset),
            Fe
        }
        function Se(Ie) {
            return 127995 <= Ie && Ie <= 127999
        }
        var Ce;
        (function(Ie) {
            Ie[Ie.zwj = 8205] = "zwj",
            Ie[Ie.emojiVariantSelector = 65039] = "emojiVariantSelector",
            Ie[Ie.enclosingKeyCap = 8419] = "enclosingKeyCap"
        }
        )(Ce || (Ce = {})),
        e.$bg = "\xA0";
        class ke {
            static{this.c = new C.$T(()=>JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"cs":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"es":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"fr":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"it":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ja":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],"ko":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pt-BR":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ru":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"zh-hans":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],"zh-hant":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'))
            }static{this.d = new t.$$e({
                getCacheKey: JSON.stringify
            },Te=>{
                function Ne(et) {
                    const Qe = new Map;
                    for (let tt = 0; tt < et.length; tt += 2)
                        Qe.set(et[tt], et[tt + 1]);
                    return Qe
                }
                function Oe(et, Qe) {
                    const tt = new Map(et);
                    for (const [ut,_e] of Qe)
                        tt.set(ut, _e);
                    return tt
                }
                function Fe(et, Qe) {
                    if (!et)
                        return Qe;
                    const tt = new Map;
                    for (const [ut,_e] of et)
                        Qe.has(ut) && tt.set(ut, _e);
                    return tt
                }
                const Re = this.c.value;
                let We = Te.filter(et=>!et.startsWith("_") && et in Re);
                We.length === 0 && (We = ["_default"]);
                let Ue;
                for (const et of We) {
                    const Qe = Ne(Re[et]);
                    Ue = Fe(Ue, Qe)
                }
                const He = Ne(Re._common)
                  , Ge = Oe(He, Ue);
                return new ke(Ge)
            }
            )
            }static getInstance(Te) {
                return ke.d.get(Array.from(Te))
            }
            static{this.e = new C.$T(()=>Object.keys(ke.c.value).filter(Te=>!Te.startsWith("_")))
            }static getLocales() {
                return ke.e.value
            }
            constructor(Te) {
                this.f = Te
            }
            isAmbiguous(Te) {
                return this.f.has(Te)
            }
            containsAmbiguousCharacter(Te) {
                for (let Ne = 0; Ne < Te.length; Ne++) {
                    const Oe = Te.codePointAt(Ne);
                    if (typeof Oe == "number" && this.isAmbiguous(Oe))
                        return !0
                }
                return !1
            }
            getPrimaryConfusable(Te) {
                return this.f.get(Te)
            }
            getConfusableCodePoints() {
                return new Set(this.f.keys())
            }
        }
        e.$cg = ke;
        class je {
            static c() {
                return JSON.parse("[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]")
            }
            static{this.d = void 0
            }static e() {
                return this.d || (this.d = new Set(je.c())),
                this.d
            }
            static isInvisibleCharacter(Te) {
                return je.e().has(Te)
            }
            static containsInvisibleCharacter(Te) {
                for (let Ne = 0; Ne < Te.length; Ne++) {
                    const Oe = Te.codePointAt(Ne);
                    if (typeof Oe == "number" && je.isInvisibleCharacter(Oe))
                        return !0
                }
                return !1
            }
            static get codePoints() {
                return je.e()
            }
        }
        e.$dg = je
    }),
    define(ge[208], be([1, 0, 105, 67, 12, 31, 18]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$xg = y,
        e.$yg = E,
        e.$zg = $,
        e.$Ag = v,
        e.$Bg = f,
        e.$Cg = c,
        e.$Dg = h,
        e.$Eg = a,
        e.$Fg = d,
        e.$Gg = u,
        e.$Hg = s,
        e.$Ig = r,
        e.$Jg = l,
        e.$Kg = o,
        e.$Lg = b,
        e.$Mg = m,
        e.$Ng = T;
        function y(D) {
            return D === t.CharCode.Slash || D === t.CharCode.Backslash
        }
        function E(D) {
            return D.replace(/[\\/]/g, n.$gc.sep)
        }
        function $(D) {
            return D.indexOf("/") === -1 && (D = E(D)),
            /^[a-zA-Z]:(\/|$)/.test(D) && (D = "/" + D),
            D
        }
        function v(D, k=n.$gc.sep) {
            if (!D)
                return "";
            const P = D.length
              , A = D.charCodeAt(0);
            if (y(A)) {
                if (y(D.charCodeAt(1)) && !y(D.charCodeAt(2))) {
                    let O = 3;
                    const R = O;
                    for (; O < P && !y(D.charCodeAt(O)); O++)
                        ;
                    if (R !== O && !y(D.charCodeAt(O + 1))) {
                        for (O += 1; O < P; O++)
                            if (y(D.charCodeAt(O)))
                                return D.slice(0, O + 1).replace(/[\\/]/g, k)
                    }
                }
                return k
            } else if (d(A) && D.charCodeAt(1) === t.CharCode.Colon)
                return y(D.charCodeAt(2)) ? D.slice(0, 2) + k : D.slice(0, 2);
            let M = D.indexOf("://");
            if (M !== -1) {
                for (M += 3; M < P; M++)
                    if (y(D.charCodeAt(M)))
                        return D.slice(0, M + 1)
            }
            return ""
        }
        function f(D) {
            if (!C.$j || !D || D.length < 5)
                return !1;
            let k = D.charCodeAt(0);
            if (k !== t.CharCode.Backslash || (k = D.charCodeAt(1),
            k !== t.CharCode.Backslash))
                return !1;
            let P = 2;
            const A = P;
            for (; P < D.length && (k = D.charCodeAt(P),
            k !== t.CharCode.Backslash); P++)
                ;
            return !(A === P || (k = D.charCodeAt(P + 1),
            isNaN(k) || k === t.CharCode.Backslash))
        }
        const g = /[\\/:\*\?"<>\|]/g
          , p = /[/]/g
          , i = /^(con|prn|aux|clock\$|nul|lpt[0-9]|com[0-9])(\.(.*?))?$/i;
        function c(D, k=C.$j) {
            const P = k ? g : p;
            return !(!D || D.length === 0 || /^\s+$/.test(D) || (P.lastIndex = 0,
            P.test(D)) || k && i.test(D) || D === "." || D === ".." || k && D[D.length - 1] === "." || k && D.length !== D.trim().length || D.length > 255)
        }
        function h(D, k, P) {
            const A = D === k;
            return !P || A ? A : !D || !k ? !1 : (0,
            I.$Ff)(D, k)
        }
        function a(D, k, P, A=n.sep) {
            if (D === k)
                return !0;
            if (!D || !k || k.length > D.length)
                return !1;
            if (P) {
                if (!(0,
                I.$Gf)(D, k))
                    return !1;
                if (k.length === D.length)
                    return !0;
                let O = k.length;
                return k.charAt(k.length - 1) === A && O--,
                D.charAt(O) === A
            }
            return k.charAt(k.length - 1) !== A && (k += A),
            D.indexOf(k) === 0
        }
        function d(D) {
            return D >= t.CharCode.A && D <= t.CharCode.Z || D >= t.CharCode.a && D <= t.CharCode.z
        }
        function u(D, k) {
            return C.$j && D.endsWith(":") && (D += n.sep),
            (0,
            n.$ic)(D) || (D = (0,
            n.$jc)(k, D)),
            D = (0,
            n.$hc)(D),
            s(D)
        }
        function s(D) {
            return C.$j ? (D = (0,
            I.$nf)(D, n.sep),
            D.endsWith(":") && (D += n.sep)) : (D = (0,
            I.$nf)(D, n.sep),
            D || (D = n.sep)),
            D
        }
        function r(D) {
            const k = (0,
            n.$hc)(D);
            return C.$j ? D.length > 3 ? !1 : l(k) && (D.length === 2 || k.charCodeAt(2) === t.CharCode.Backslash) : k === n.$gc.sep
        }
        function l(D, k=C.$j) {
            return k ? d(D.charCodeAt(0)) && D.charCodeAt(1) === t.CharCode.Colon : !1
        }
        function o(D, k=C.$j) {
            return l(D, k) ? D[0] : void 0
        }
        function b(D, k, P) {
            return k.length > D.length ? -1 : D === k ? 0 : (P && (D = D.toLowerCase(),
            k = k.toLowerCase()),
            D.indexOf(k))
        }
        function m(D) {
            const k = D.split(":");
            let P, A, M;
            for (const O of k) {
                const R = Number(O);
                (0,
                L.$ig)(R) ? A === void 0 ? A = R : M === void 0 && (M = R) : P = P ? [P, O].join(":") : O
            }
            if (!P)
                throw new Error("Format for `--goto` should be: `FILE:LINE(:COLUMN)`");
            return {
                path: P,
                line: A !== void 0 ? A : void 0,
                column: M !== void 0 ? M : A !== void 0 ? 1 : void 0
            }
        }
        const w = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
          , S = "BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789";
        function T(D, k, P=8) {
            let A = "";
            for (let O = 0; O < P; O++) {
                let R;
                O === 0 && C.$j && !k && (P === 3 || P === 4) ? R = S : R = w,
                A += R.charAt(Math.floor(Math.random() * R.length))
            }
            let M;
            return k ? M = `${k}-${A}` : M = A,
            D ? (0,
            n.$jc)(D, M) : M
        }
    }),
    define(ge[115], be([1, 0, 105, 56, 1329, 31]), function(ce, e, t, n, C, I) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Tk = e.FuzzyScore = e.$Ik = e.$Hk = void 0,
        e.or = L,
        e.$Jk = E,
        e.$Kk = $,
        e.$Lk = g,
        e.$Mk = T,
        e.$Nk = D,
        e.$Ok = R,
        e.$Pk = N,
        e.$Qk = z,
        e.$Rk = V,
        e.$Sk = ae,
        e.$Uk = J,
        e.$Vk = le,
        e.$Wk = ie,
        I = xe(I);
        function L(...he) {
            return function(ue, de) {
                for (let $e = 0, pe = he.length; $e < pe; $e++) {
                    const ve = he[$e](ue, de);
                    if (ve)
                        return ve
                }
                return null
            }
        }
        e.$Hk = y.bind(void 0, !1),
        e.$Ik = y.bind(void 0, !0);
        function y(he, ue, de) {
            if (!de || de.length < ue.length)
                return null;
            let $e;
            return he ? $e = I.$Gf(de, ue) : $e = de.indexOf(ue) === 0,
            $e ? ue.length > 0 ? [{
                start: 0,
                end: ue.length
            }] : [] : null
        }
        function E(he, ue) {
            const de = ue.toLowerCase().indexOf(he.toLowerCase());
            return de === -1 ? null : [{
                start: de,
                end: de + he.length
            }]
        }
        function $(he, ue) {
            return v(he.toLowerCase(), ue.toLowerCase(), 0, 0)
        }
        function v(he, ue, de, $e) {
            if (de === he.length)
                return [];
            if ($e === ue.length)
                return null;
            if (he[de] === ue[$e]) {
                let pe = null;
                return (pe = v(he, ue, de + 1, $e + 1)) ? r({
                    start: $e,
                    end: $e + 1
                }, pe) : null
            }
            return v(he, ue, de, $e + 1)
        }
        function f(he) {
            return t.CharCode.a <= he && he <= t.CharCode.z
        }
        function g(he) {
            return t.CharCode.A <= he && he <= t.CharCode.Z
        }
        function p(he) {
            return t.CharCode.Digit0 <= he && he <= t.CharCode.Digit9
        }
        function i(he) {
            return he === t.CharCode.Space || he === t.CharCode.Tab || he === t.CharCode.LineFeed || he === t.CharCode.CarriageReturn
        }
        const c = new Set;
        "()[]{}<>`'\"-/;:,.?!".split("").forEach(he=>c.add(he.charCodeAt(0)));
        function h(he) {
            return i(he) || c.has(he)
        }
        function a(he, ue) {
            return he === ue || h(he) && h(ue)
        }
        const d = new Map;
        function u(he) {
            if (d.has(he))
                return d.get(he);
            let ue;
            const de = (0,
            C.$Fk)(he);
            return de && (ue = de),
            d.set(he, ue),
            ue
        }
        function s(he) {
            return f(he) || g(he) || p(he)
        }
        function r(he, ue) {
            return ue.length === 0 ? ue = [he] : he.end === ue[0].start ? ue[0].start = he.start : ue.unshift(he),
            ue
        }
        function l(he, ue) {
            for (let de = ue; de < he.length; de++) {
                const $e = he.charCodeAt(de);
                if (g($e) || p($e) || de > 0 && !s(he.charCodeAt(de - 1)))
                    return de
            }
            return he.length
        }
        function o(he, ue, de, $e) {
            if (de === he.length)
                return [];
            if ($e === ue.length)
                return null;
            if (he[de] !== ue[$e].toLowerCase())
                return null;
            {
                let pe = null
                  , ve = $e + 1;
                for (pe = o(he, ue, de + 1, $e + 1); !pe && (ve = l(ue, ve)) < ue.length; )
                    pe = o(he, ue, de + 1, ve),
                    ve++;
                return pe === null ? null : r({
                    start: $e,
                    end: $e + 1
                }, pe)
            }
        }
        function b(he) {
            let ue = 0
              , de = 0
              , $e = 0
              , pe = 0
              , ve = 0;
            for (let De = 0; De < he.length; De++)
                ve = he.charCodeAt(De),
                g(ve) && ue++,
                f(ve) && de++,
                s(ve) && $e++,
                p(ve) && pe++;
            const me = ue / he.length
              , we = de / he.length
              , ye = $e / he.length
              , Le = pe / he.length;
            return {
                upperPercent: me,
                lowerPercent: we,
                alphaPercent: ye,
                numericPercent: Le
            }
        }
        function m(he) {
            const {upperPercent: ue, lowerPercent: de} = he;
            return de === 0 && ue > .6
        }
        function w(he) {
            const {upperPercent: ue, lowerPercent: de, alphaPercent: $e, numericPercent: pe} = he;
            return de > .2 && ue < .8 && $e > .6 && pe < .2
        }
        function S(he) {
            let ue = 0
              , de = 0
              , $e = 0
              , pe = 0;
            for (let ve = 0; ve < he.length; ve++)
                $e = he.charCodeAt(ve),
                g($e) && ue++,
                f($e) && de++,
                i($e) && pe++;
            return (ue === 0 || de === 0) && pe === 0 ? he.length <= 30 : ue <= 5
        }
        function T(he, ue) {
            if (!ue || (ue = ue.trim(),
            ue.length === 0) || !S(he))
                return null;
            ue.length > 60 && (ue = ue.substring(0, 60));
            const de = b(ue);
            if (!w(de)) {
                if (!m(de))
                    return null;
                ue = ue.toLowerCase()
            }
            let $e = null
              , pe = 0;
            for (he = he.toLowerCase(); pe < ue.length && ($e = o(he, ue, 0, pe)) === null; )
                pe = l(ue, pe + 1);
            return $e
        }
        function D(he, ue, de=!1) {
            if (!ue || ue.length === 0)
                return null;
            let $e = null
              , pe = 0;
            for (he = he.toLowerCase(),
            ue = ue.toLowerCase(); pe < ue.length && ($e = k(he, ue, 0, pe, de),
            $e === null); )
                pe = P(ue, pe + 1);
            return $e
        }
        function k(he, ue, de, $e, pe) {
            let ve = 0;
            if (de === he.length)
                return [];
            if ($e === ue.length)
                return null;
            if (!a(he.charCodeAt(de), ue.charCodeAt($e))) {
                const ye = u(he.charCodeAt(de));
                if (!ye)
                    return null;
                for (let Le = 0; Le < ye.length; Le++)
                    if (!a(ye[Le], ue.charCodeAt($e + Le)))
                        return null;
                ve += ye.length - 1
            }
            let me = null
              , we = $e + ve + 1;
            if (me = k(he, ue, de + 1, we, pe),
            !pe)
                for (; !me && (we = P(ue, we)) < ue.length; )
                    me = k(he, ue, de + 1, we, pe),
                    we++;
            if (!me)
                return null;
            if (he.charCodeAt(de) !== ue.charCodeAt($e)) {
                const ye = u(he.charCodeAt(de));
                if (!ye)
                    return me;
                for (let Le = 0; Le < ye.length; Le++)
                    if (ye[Le] !== ue.charCodeAt($e + Le))
                        return me
            }
            return r({
                start: $e,
                end: $e + ve + 1
            }, me)
        }
        function P(he, ue) {
            for (let de = ue; de < he.length; de++)
                if (h(he.charCodeAt(de)) || de > 0 && h(he.charCodeAt(de - 1)))
                    return de;
            return he.length
        }
        const A = L(e.$Ik, T, E)
          , M = L(e.$Ik, T, $)
          , O = new n.$Dc(1e4);
        function R(he, ue, de=!1) {
            if (typeof he != "string" || typeof ue != "string")
                return null;
            let $e = O.get(he);
            $e || ($e = new RegExp(I.$of(he),"i"),
            O.set(he, $e));
            const pe = $e.exec(ue);
            return pe ? [{
                start: pe.index,
                end: pe.index + pe[0].length
            }] : de ? M(he, ue) : A(he, ue)
        }
        function N(he, ue) {
            const de = J(he, he.toLowerCase(), 0, ue, ue.toLowerCase(), 0, {
                firstMatchCanBeWeak: !0,
                boostFullMatch: !0
            });
            return de ? V(de) : null
        }
        function z(he, ue, de, $e, pe, ve) {
            const me = Math.min(13, he.length);
            for (; de < me; de++) {
                const we = J(he, ue, de, $e, pe, ve, {
                    firstMatchCanBeWeak: !0,
                    boostFullMatch: !0
                });
                if (we)
                    return we
            }
            return [0, ve]
        }
        function V(he) {
            if (typeof he > "u")
                return [];
            const ue = []
              , de = he[1];
            for (let $e = he.length - 1; $e > 1; $e--) {
                const pe = he[$e] + de
                  , ve = ue[ue.length - 1];
                ve && ve.end === pe ? ve.end = pe + 1 : ue.push({
                    start: pe,
                    end: pe + 1
                })
            }
            return ue
        }
        const B = 128;
        function j() {
            const he = []
              , ue = [];
            for (let de = 0; de <= B; de++)
                ue[de] = 0;
            for (let de = 0; de <= B; de++)
                he.push(ue.slice(0));
            return he
        }
        function W(he) {
            const ue = [];
            for (let de = 0; de <= he; de++)
                ue[de] = 0;
            return ue
        }
        const q = W(2 * B)
          , H = W(2 * B)
          , U = j()
          , K = j()
          , G = j()
          , Z = !1;
        function x(he, ue, de, $e, pe) {
            function ve(we, ye, Le=" ") {
                for (; we.length < ye; )
                    we = Le + we;
                return we
            }
            let me = ` |   |${$e.split("").map(we=>ve(we, 3)).join("|")}
`;
            for (let we = 0; we <= de; we++)
                we === 0 ? me += " |" : me += `${ue[we - 1]}|`,
                me += he[we].slice(0, pe + 1).map(ye=>ve(ye.toString(), 3)).join("|") + `
`;
            return me
        }
        function X(he, ue, de, $e) {
            he = he.substr(ue),
            de = de.substr($e),
            console.log(x(K, he, he.length, de, de.length)),
            console.log(x(G, he, he.length, de, de.length)),
            console.log(x(U, he, he.length, de, de.length))
        }
        function Y(he, ue) {
            if (ue < 0 || ue >= he.length)
                return !1;
            const de = he.codePointAt(ue);
            switch (de) {
            case t.CharCode.Underline:
            case t.CharCode.Dash:
            case t.CharCode.Period:
            case t.CharCode.Space:
            case t.CharCode.Slash:
            case t.CharCode.Backslash:
            case t.CharCode.SingleQuote:
            case t.CharCode.DoubleQuote:
            case t.CharCode.Colon:
            case t.CharCode.DollarSign:
            case t.CharCode.LessThan:
            case t.CharCode.GreaterThan:
            case t.CharCode.OpenParen:
            case t.CharCode.CloseParen:
            case t.CharCode.OpenSquareBracket:
            case t.CharCode.CloseSquareBracket:
            case t.CharCode.OpenCurlyBrace:
            case t.CharCode.CloseCurlyBrace:
                return !0;
            case void 0:
                return !1;
            default:
                return !!I.$Yf(de)
            }
        }
        function Q(he, ue) {
            if (ue < 0 || ue >= he.length)
                return !1;
            switch (he.charCodeAt(ue)) {
            case t.CharCode.Space:
            case t.CharCode.Tab:
                return !0;
            default:
                return !1
            }
        }
        function _(he, ue, de) {
            return ue[he] !== de[he]
        }
        function ae(he, ue, de, $e, pe, ve, me=!1) {
            for (; ue < de && pe < ve; )
                he[ue] === $e[pe] && (me && (q[ue] = pe),
                ue += 1),
                pe += 1;
            return ue === de
        }
        var re;
        (function(he) {
            he[he.Diag = 1] = "Diag",
            he[he.Left = 2] = "Left",
            he[he.LeftLeft = 3] = "LeftLeft"
        }
        )(re || (re = {}));
        var se;
        (function(he) {
            he.Default = [-100, 0];
            function ue(de) {
                return !de || de.length === 2 && de[0] === -100 && de[1] === 0
            }
            he.isDefault = ue
        }
        )(se || (e.FuzzyScore = se = {}));
        class ee {
            static{this.default = {
                boostFullMatch: !0,
                firstMatchCanBeWeak: !1
            }
            }constructor(ue, de) {
                this.firstMatchCanBeWeak = ue,
                this.boostFullMatch = de
            }
        }
        e.$Tk = ee;
        function J(he, ue, de, $e, pe, ve, me=ee.default) {
            const we = he.length > B ? B : he.length
              , ye = $e.length > B ? B : $e.length;
            if (de >= we || ve >= ye || we - de > ye - ve || !ae(ue, de, we, pe, ve, ye, !0))
                return;
            te(we, ye, de, ve, ue, pe);
            let Le = 1
              , De = 1
              , Pe = de
              , ze = ve;
            const Be = [!1];
            for (Le = 1,
            Pe = de; Pe < we; Le++,
            Pe++) {
                const ke = q[Pe]
                  , je = H[Pe]
                  , Ie = Pe + 1 < we ? H[Pe + 1] : ye;
                for (De = ke - ve + 1,
                ze = ke; ze < Ie; De++,
                ze++) {
                    let Te = Number.MIN_SAFE_INTEGER
                      , Ne = !1;
                    ze <= je && (Te = ne(he, ue, Pe, de, $e, pe, ze, ye, ve, U[Le - 1][De - 1] === 0, Be));
                    let Oe = 0;
                    Te !== Number.MAX_SAFE_INTEGER && (Ne = !0,
                    Oe = Te + K[Le - 1][De - 1]);
                    const Fe = ze > ke
                      , Re = Fe ? K[Le][De - 1] + (U[Le][De - 1] > 0 ? -5 : 0) : 0
                      , We = ze > ke + 1 && U[Le][De - 1] > 0
                      , Ue = We ? K[Le][De - 2] + (U[Le][De - 2] > 0 ? -5 : 0) : 0;
                    if (We && (!Fe || Ue >= Re) && (!Ne || Ue >= Oe))
                        K[Le][De] = Ue,
                        G[Le][De] = re.LeftLeft,
                        U[Le][De] = 0;
                    else if (Fe && (!Ne || Re >= Oe))
                        K[Le][De] = Re,
                        G[Le][De] = re.Left,
                        U[Le][De] = 0;
                    else if (Ne)
                        K[Le][De] = Oe,
                        G[Le][De] = re.Diag,
                        U[Le][De] = U[Le - 1][De - 1] + 1;
                    else
                        throw new Error("not possible")
                }
            }
            if (Z && X(he, de, $e, ve),
            !Be[0] && !me.firstMatchCanBeWeak)
                return;
            Le--,
            De--;
            const Me = [K[Le][De], ve];
            let Ae = 0
              , Se = 0;
            for (; Le >= 1; ) {
                let ke = De;
                do {
                    const je = G[Le][ke];
                    if (je === re.LeftLeft)
                        ke = ke - 2;
                    else if (je === re.Left)
                        ke = ke - 1;
                    else
                        break
                } while (ke >= 1);
                Ae > 1 && ue[de + Le - 1] === pe[ve + De - 1] && !_(ke + ve - 1, $e, pe) && Ae + 1 > U[Le][ke] && (ke = De),
                ke === De ? Ae++ : Ae = 1,
                Se || (Se = ke),
                Le--,
                De = ke - 1,
                Me.push(De)
            }
            ye - ve === we && me.boostFullMatch && (Me[0] += 2);
            const Ce = Se - we;
            return Me[0] -= Ce,
            Me
        }
        function te(he, ue, de, $e, pe, ve) {
            let me = he - 1
              , we = ue - 1;
            for (; me >= de && we >= $e; )
                pe[me] === ve[we] && (H[me] = we,
                me--),
                we--
        }
        function ne(he, ue, de, $e, pe, ve, me, we, ye, Le, De) {
            if (ue[de] !== ve[me])
                return Number.MIN_SAFE_INTEGER;
            let Pe = 1
              , ze = !1;
            return me === de - $e ? Pe = he[de] === pe[me] ? 7 : 5 : _(me, pe, ve) && (me === 0 || !_(me - 1, pe, ve)) ? (Pe = he[de] === pe[me] ? 7 : 5,
            ze = !0) : Y(ve, me) && (me === 0 || !Y(ve, me - 1)) ? Pe = 5 : (Y(ve, me - 1) || Q(ve, me - 1)) && (Pe = 5,
            ze = !0),
            Pe > 1 && de === $e && (De[0] = !0),
            ze || (ze = _(me, pe, ve) || Y(ve, me - 1) || Q(ve, me - 1)),
            de === $e ? me > ye && (Pe -= ze ? 3 : 5) : Le ? Pe += ze ? 2 : 0 : Pe += ze ? 0 : 1,
            me + 1 === we && (Pe -= ze ? 3 : 5),
            Pe
        }
        function le(he, ue, de, $e, pe, ve, me) {
            return oe(he, ue, de, $e, pe, ve, !0, me)
        }
        function ie(he, ue, de, $e, pe, ve, me) {
            return oe(he, ue, de, $e, pe, ve, !1, me)
        }
        function oe(he, ue, de, $e, pe, ve, me, we) {
            let ye = J(he, ue, de, $e, pe, ve, we);
            if (ye && !me)
                return ye;
            if (he.length >= 3) {
                const Le = Math.min(7, he.length - 1);
                for (let De = de + 1; De < Le; De++) {
                    const Pe = fe(he, De);
                    if (Pe) {
                        const ze = J(Pe, Pe.toLowerCase(), de, $e, pe, ve, we);
                        ze && (ze[0] -= 3,
                        (!ye || ze[0] > ye[0]) && (ye = ze))
                    }
                }
            }
            return ye
        }
        function fe(he, ue) {
            if (ue + 1 >= he.length)
                return;
            const de = he[ue]
              , $e = he[ue + 1];
            if (de !== $e)
                return he.slice(0, ue) + $e + de + he.slice(ue + 2)
        }
    }),
    define(ge[131], be([1, 0, 31]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$zj = e.$xj = void 0,
        e.$tj = n,
        e.$uj = C,
        e.$vj = I,
        e.$wj = y,
        e.$yj = c,
        t = xe(t);
        function n(a) {
            return C(a, 0)
        }
        function C(a, d) {
            switch (typeof a) {
            case "object":
                return a === null ? I(349, d) : Array.isArray(a) ? E(a, d) : $(a, d);
            case "string":
                return y(a, d);
            case "boolean":
                return L(a, d);
            case "number":
                return I(a, d);
            case "undefined":
                return I(937, d);
            default:
                return I(617, d)
            }
        }
        function I(a, d) {
            return (d << 5) - d + a | 0
        }
        function L(a, d) {
            return I(a ? 433 : 863, d)
        }
        function y(a, d) {
            d = I(149417, d);
            for (let u = 0, s = a.length; u < s; u++)
                d = I(a.charCodeAt(u), d);
            return d
        }
        function E(a, d) {
            return d = I(104579, d),
            a.reduce((u,s)=>C(s, u), d)
        }
        function $(a, d) {
            return d = I(181387, d),
            Object.keys(a).sort().reduce((u,s)=>(u = y(s, u),
            C(a[s], u)), d)
        }
        class v {
            constructor() {
                this.g = 0
            }
            get value() {
                return this.g
            }
            hash(d) {
                return this.g = C(d, this.g),
                this.g
            }
        }
        e.$xj = v;
        var f;
        (function(a) {
            a[a.BLOCK_SIZE = 64] = "BLOCK_SIZE",
            a[a.UNICODE_REPLACEMENT = 65533] = "UNICODE_REPLACEMENT"
        }
        )(f || (f = {}));
        function g(a, d, u=32) {
            const s = u - d
              , r = ~((1 << s) - 1);
            return (a << d | (r & a) >>> s) >>> 0
        }
        function p(a, d=0, u=a.byteLength, s=0) {
            for (let r = 0; r < u; r++)
                a[d + r] = s
        }
        function i(a, d, u="0") {
            for (; a.length < d; )
                a = u + a;
            return a
        }
        function c(a, d=32) {
            return a instanceof ArrayBuffer ? Array.from(new Uint8Array(a)).map(u=>u.toString(16).padStart(2, "0")).join("") : i((a >>> 0).toString(16), d / 4)
        }
        class h {
            static{this.g = new DataView(new ArrayBuffer(320))
            }constructor() {
                this.h = 1732584193,
                this.l = 4023233417,
                this.m = 2562383102,
                this.n = 271733878,
                this.o = 3285377520,
                this.p = new Uint8Array(f.BLOCK_SIZE + 3),
                this.q = new DataView(this.p.buffer),
                this.r = 0,
                this.t = 0,
                this.u = 0,
                this.v = !1
            }
            update(d) {
                const u = d.length;
                if (u === 0)
                    return;
                const s = this.p;
                let r = this.r, l = this.u, o, b;
                for (l !== 0 ? (o = l,
                b = -1,
                l = 0) : (o = d.charCodeAt(0),
                b = 0); ; ) {
                    let m = o;
                    if (t.$Jf(o))
                        if (b + 1 < u) {
                            const w = d.charCodeAt(b + 1);
                            t.$Kf(w) ? (b++,
                            m = t.$Lf(o, w)) : m = f.UNICODE_REPLACEMENT
                        } else {
                            l = o;
                            break
                        }
                    else
                        t.$Kf(o) && (m = f.UNICODE_REPLACEMENT);
                    if (r = this.w(s, r, m),
                    b++,
                    b < u)
                        o = d.charCodeAt(b);
                    else
                        break
                }
                this.r = r,
                this.u = l
            }
            w(d, u, s) {
                return s < 128 ? d[u++] = s : s < 2048 ? (d[u++] = 192 | (s & 1984) >>> 6,
                d[u++] = 128 | (s & 63) >>> 0) : s < 65536 ? (d[u++] = 224 | (s & 61440) >>> 12,
                d[u++] = 128 | (s & 4032) >>> 6,
                d[u++] = 128 | (s & 63) >>> 0) : (d[u++] = 240 | (s & 1835008) >>> 18,
                d[u++] = 128 | (s & 258048) >>> 12,
                d[u++] = 128 | (s & 4032) >>> 6,
                d[u++] = 128 | (s & 63) >>> 0),
                u >= f.BLOCK_SIZE && (this.y(),
                u -= f.BLOCK_SIZE,
                this.t += f.BLOCK_SIZE,
                d[0] = d[f.BLOCK_SIZE + 0],
                d[1] = d[f.BLOCK_SIZE + 1],
                d[2] = d[f.BLOCK_SIZE + 2]),
                u
            }
            digest() {
                return this.v || (this.v = !0,
                this.u && (this.u = 0,
                this.r = this.w(this.p, this.r, f.UNICODE_REPLACEMENT)),
                this.t += this.r,
                this.x()),
                c(this.h) + c(this.l) + c(this.m) + c(this.n) + c(this.o)
            }
            x() {
                this.p[this.r++] = 128,
                p(this.p, this.r),
                this.r > 56 && (this.y(),
                p(this.p));
                const d = 8 * this.t;
                this.q.setUint32(56, Math.floor(d / 4294967296), !1),
                this.q.setUint32(60, d % 4294967296, !1),
                this.y()
            }
            y() {
                const d = h.g
                  , u = this.q;
                for (let T = 0; T < 64; T += 4)
                    d.setUint32(T, u.getUint32(T, !1), !1);
                for (let T = 64; T < 320; T += 4)
                    d.setUint32(T, g(d.getUint32(T - 12, !1) ^ d.getUint32(T - 32, !1) ^ d.getUint32(T - 56, !1) ^ d.getUint32(T - 64, !1), 1), !1);
                let s = this.h, r = this.l, l = this.m, o = this.n, b = this.o, m, w, S;
                for (let T = 0; T < 80; T++)
                    T < 20 ? (m = r & l | ~r & o,
                    w = 1518500249) : T < 40 ? (m = r ^ l ^ o,
                    w = 1859775393) : T < 60 ? (m = r & l | r & o | l & o,
                    w = 2400959708) : (m = r ^ l ^ o,
                    w = 3395469782),
                    S = g(s, 5) + m + b + w + d.getUint32(T * 4, !1) & 4294967295,
                    b = o,
                    o = l,
                    l = g(r, 30),
                    r = s,
                    s = S;
                this.h = this.h + s & 4294967295,
                this.l = this.l + r & 4294967295,
                this.m = this.m + l & 4294967295,
                this.n = this.n + o & 4294967295,
                this.o = this.o + b & 4294967295
            }
        }
        e.$zj = h
    }),
    define(ge[741], be([1, 0, 70, 131]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$WV = C;
        async function C(I) {
            if (globalThis?.crypto?.subtle) {
                const L = t.$Ne.fromString(I, {
                    dontUseNodeBuffer: !0
                }).buffer
                  , y = await globalThis.crypto.subtle.digest({
                    name: "sha-1"
                }, L);
                return (0,
                n.$yj)(y)
            } else {
                const L = new n.$zj;
                return L.update(I),
                L.digest()
            }
        }
    }),
    define(ge[518], be([1, 0, 1327, 131, 168]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Ut = e.$St = void 0,
        e.$Tt = L;
        class I {
            constructor(p) {
                this.a = p
            }
            getElements() {
                const p = this.a
                  , i = new Int32Array(p.length);
                for (let c = 0, h = p.length; c < h; c++)
                    i[c] = p.charCodeAt(c);
                return i
            }
        }
        e.$St = I;
        function L(g, p, i) {
            return new f(new I(g),new I(p)).ComputeDiff(i).changes
        }
        class y {
            static Assert(p, i) {
                if (!p)
                    throw new Error(i)
            }
        }
        class E {
            static Copy(p, i, c, h, a) {
                for (let d = 0; d < a; d++)
                    c[h + d] = p[i + d]
            }
            static Copy2(p, i, c, h, a) {
                for (let d = 0; d < a; d++)
                    c[h + d] = p[i + d]
            }
        }
        var $;
        (function(g) {
            g[g.MaxDifferencesHistory = 1447] = "MaxDifferencesHistory"
        }
        )($ || ($ = {}));
        class v {
            constructor() {
                this.a = [],
                this.b = C.Constants.MAX_SAFE_SMALL_INTEGER,
                this.c = C.Constants.MAX_SAFE_SMALL_INTEGER,
                this.d = 0,
                this.e = 0
            }
            MarkNextChange() {
                (this.d > 0 || this.e > 0) && this.a.push(new t.$Rt(this.b,this.d,this.c,this.e)),
                this.d = 0,
                this.e = 0,
                this.b = C.Constants.MAX_SAFE_SMALL_INTEGER,
                this.c = C.Constants.MAX_SAFE_SMALL_INTEGER
            }
            AddOriginalElement(p, i) {
                this.b = Math.min(this.b, p),
                this.c = Math.min(this.c, i),
                this.d++
            }
            AddModifiedElement(p, i) {
                this.b = Math.min(this.b, p),
                this.c = Math.min(this.c, i),
                this.e++
            }
            getChanges() {
                return (this.d > 0 || this.e > 0) && this.MarkNextChange(),
                this.a
            }
            getReverseChanges() {
                return (this.d > 0 || this.e > 0) && this.MarkNextChange(),
                this.a.reverse(),
                this.a
            }
        }
        class f {
            constructor(p, i, c=null) {
                this.a = c,
                this.b = p,
                this.c = i;
                const [h,a,d] = f.o(p)
                  , [u,s,r] = f.o(i);
                this.d = d && r,
                this.e = h,
                this.f = a,
                this.g = u,
                this.h = s,
                this.k = [],
                this.m = []
            }
            static n(p) {
                return p.length > 0 && typeof p[0] == "string"
            }
            static o(p) {
                const i = p.getElements();
                if (f.n(i)) {
                    const c = new Int32Array(i.length);
                    for (let h = 0, a = i.length; h < a; h++)
                        c[h] = (0,
                        n.$wj)(i[h], 0);
                    return [i, c, !0]
                }
                return i instanceof Int32Array ? [[], i, !1] : [[], new Int32Array(i), !1]
            }
            p(p, i) {
                return this.f[p] !== this.h[i] ? !1 : this.d ? this.e[p] === this.g[i] : !0
            }
            q(p, i) {
                if (!this.p(p, i))
                    return !1;
                const c = f.r(this.b, p)
                  , h = f.r(this.c, i);
                return c === h
            }
            static r(p, i) {
                return typeof p.getStrictElement == "function" ? p.getStrictElement(i) : null
            }
            s(p, i) {
                return this.f[p] !== this.f[i] ? !1 : this.d ? this.e[p] === this.e[i] : !0
            }
            u(p, i) {
                return this.h[p] !== this.h[i] ? !1 : this.d ? this.g[p] === this.g[i] : !0
            }
            ComputeDiff(p) {
                return this.v(0, this.f.length - 1, 0, this.h.length - 1, p)
            }
            v(p, i, c, h, a) {
                const d = [!1];
                let u = this.w(p, i, c, h, d);
                return a && (u = this.z(u)),
                {
                    quitEarly: d[0],
                    changes: u
                }
            }
            w(p, i, c, h, a) {
                for (a[0] = !1; p <= i && c <= h && this.p(p, c); )
                    p++,
                    c++;
                for (; i >= p && h >= c && this.p(i, h); )
                    i--,
                    h--;
                if (p > i || c > h) {
                    let o;
                    return c <= h ? (y.Assert(p === i + 1, "originalStart should only be one more than originalEnd"),
                    o = [new t.$Rt(p,0,c,h - c + 1)]) : p <= i ? (y.Assert(c === h + 1, "modifiedStart should only be one more than modifiedEnd"),
                    o = [new t.$Rt(p,i - p + 1,c,0)]) : (y.Assert(p === i + 1, "originalStart should only be one more than originalEnd"),
                    y.Assert(c === h + 1, "modifiedStart should only be one more than modifiedEnd"),
                    o = []),
                    o
                }
                const d = [0]
                  , u = [0]
                  , s = this.y(p, i, c, h, d, u, a)
                  , r = d[0]
                  , l = u[0];
                if (s !== null)
                    return s;
                if (!a[0]) {
                    const o = this.w(p, r, c, l, a);
                    let b = [];
                    return a[0] ? b = [new t.$Rt(r + 1,i - (r + 1) + 1,l + 1,h - (l + 1) + 1)] : b = this.w(r + 1, i, l + 1, h, a),
                    this.H(o, b)
                }
                return [new t.$Rt(p,i - p + 1,c,h - c + 1)]
            }
            x(p, i, c, h, a, d, u, s, r, l, o, b, m, w, S, T, D, k) {
                let P = null
                  , A = null
                  , M = new v
                  , O = i
                  , R = c
                  , N = m[0] - T[0] - h
                  , z = C.Constants.MIN_SAFE_SMALL_INTEGER
                  , V = this.k.length - 1;
                do {
                    const B = N + p;
                    B === O || B < R && r[B - 1] < r[B + 1] ? (o = r[B + 1],
                    w = o - N - h,
                    o < z && M.MarkNextChange(),
                    z = o,
                    M.AddModifiedElement(o + 1, w),
                    N = B + 1 - p) : (o = r[B - 1] + 1,
                    w = o - N - h,
                    o < z && M.MarkNextChange(),
                    z = o - 1,
                    M.AddOriginalElement(o, w + 1),
                    N = B - 1 - p),
                    V >= 0 && (r = this.k[V],
                    p = r[0],
                    O = 1,
                    R = r.length - 1)
                } while (--V >= -1);
                if (P = M.getReverseChanges(),
                k[0]) {
                    let B = m[0] + 1
                      , j = T[0] + 1;
                    if (P !== null && P.length > 0) {
                        const W = P[P.length - 1];
                        B = Math.max(B, W.getOriginalEnd()),
                        j = Math.max(j, W.getModifiedEnd())
                    }
                    A = [new t.$Rt(B,b - B + 1,j,S - j + 1)]
                } else {
                    M = new v,
                    O = d,
                    R = u,
                    N = m[0] - T[0] - s,
                    z = C.Constants.MAX_SAFE_SMALL_INTEGER,
                    V = D ? this.m.length - 1 : this.m.length - 2;
                    do {
                        const B = N + a;
                        B === O || B < R && l[B - 1] >= l[B + 1] ? (o = l[B + 1] - 1,
                        w = o - N - s,
                        o > z && M.MarkNextChange(),
                        z = o + 1,
                        M.AddOriginalElement(o + 1, w + 1),
                        N = B + 1 - a) : (o = l[B - 1],
                        w = o - N - s,
                        o > z && M.MarkNextChange(),
                        z = o,
                        M.AddModifiedElement(o + 1, w + 1),
                        N = B - 1 - a),
                        V >= 0 && (l = this.m[V],
                        a = l[0],
                        O = 1,
                        R = l.length - 1)
                    } while (--V >= -1);
                    A = M.getChanges()
                }
                return this.H(P, A)
            }
            y(p, i, c, h, a, d, u) {
                let s = 0
                  , r = 0
                  , l = 0
                  , o = 0
                  , b = 0
                  , m = 0;
                p--,
                c--,
                a[0] = 0,
                d[0] = 0,
                this.k = [],
                this.m = [];
                const w = i - p + (h - c)
                  , S = w + 1
                  , T = new Int32Array(S)
                  , D = new Int32Array(S)
                  , k = h - c
                  , P = i - p
                  , A = p - c
                  , M = i - h
                  , R = (P - k) % 2 === 0;
                T[k] = p,
                D[P] = i,
                u[0] = !1;
                for (let N = 1; N <= w / 2 + 1; N++) {
                    let z = 0
                      , V = 0;
                    l = this.J(k - N, N, k, S),
                    o = this.J(k + N, N, k, S);
                    for (let j = l; j <= o; j += 2) {
                        j === l || j < o && T[j - 1] < T[j + 1] ? s = T[j + 1] : s = T[j - 1] + 1,
                        r = s - (j - k) - A;
                        const W = s;
                        for (; s < i && r < h && this.p(s + 1, r + 1); )
                            s++,
                            r++;
                        if (T[j] = s,
                        s + r > z + V && (z = s,
                        V = r),
                        !R && Math.abs(j - P) <= N - 1 && s >= D[j])
                            return a[0] = s,
                            d[0] = r,
                            W <= D[j] && $.MaxDifferencesHistory > 0 && N <= $.MaxDifferencesHistory + 1 ? this.x(k, l, o, A, P, b, m, M, T, D, s, i, a, r, h, d, R, u) : null
                    }
                    const B = (z - p + (V - c) - N) / 2;
                    if (this.a !== null && !this.a(z, B))
                        return u[0] = !0,
                        a[0] = z,
                        d[0] = V,
                        B > 0 && $.MaxDifferencesHistory > 0 && N <= $.MaxDifferencesHistory + 1 ? this.x(k, l, o, A, P, b, m, M, T, D, s, i, a, r, h, d, R, u) : (p++,
                        c++,
                        [new t.$Rt(p,i - p + 1,c,h - c + 1)]);
                    b = this.J(P - N, N, P, S),
                    m = this.J(P + N, N, P, S);
                    for (let j = b; j <= m; j += 2) {
                        j === b || j < m && D[j - 1] >= D[j + 1] ? s = D[j + 1] - 1 : s = D[j - 1],
                        r = s - (j - P) - M;
                        const W = s;
                        for (; s > p && r > c && this.p(s, r); )
                            s--,
                            r--;
                        if (D[j] = s,
                        R && Math.abs(j - k) <= N && s <= T[j])
                            return a[0] = s,
                            d[0] = r,
                            W >= T[j] && $.MaxDifferencesHistory > 0 && N <= $.MaxDifferencesHistory + 1 ? this.x(k, l, o, A, P, b, m, M, T, D, s, i, a, r, h, d, R, u) : null
                    }
                    if (N <= $.MaxDifferencesHistory) {
                        let j = new Int32Array(o - l + 2);
                        j[0] = k - l + 1,
                        E.Copy2(T, l, j, 1, o - l + 1),
                        this.k.push(j),
                        j = new Int32Array(m - b + 2),
                        j[0] = P - b + 1,
                        E.Copy2(D, b, j, 1, m - b + 1),
                        this.m.push(j)
                    }
                }
                return this.x(k, l, o, A, P, b, m, M, T, D, s, i, a, r, h, d, R, u)
            }
            z(p) {
                for (let i = 0; i < p.length; i++) {
                    const c = p[i]
                      , h = i < p.length - 1 ? p[i + 1].originalStart : this.f.length
                      , a = i < p.length - 1 ? p[i + 1].modifiedStart : this.h.length
                      , d = c.originalLength > 0
                      , u = c.modifiedLength > 0;
                    for (; c.originalStart + c.originalLength < h && c.modifiedStart + c.modifiedLength < a && (!d || this.s(c.originalStart, c.originalStart + c.originalLength)) && (!u || this.u(c.modifiedStart, c.modifiedStart + c.modifiedLength)); ) {
                        const r = this.q(c.originalStart, c.modifiedStart);
                        if (this.q(c.originalStart + c.originalLength, c.modifiedStart + c.modifiedLength) && !r)
                            break;
                        c.originalStart++,
                        c.modifiedStart++
                    }
                    const s = [null];
                    if (i < p.length - 1 && this.I(p[i], p[i + 1], s)) {
                        p[i] = s[0],
                        p.splice(i + 1, 1),
                        i--;
                        continue
                    }
                }
                for (let i = p.length - 1; i >= 0; i--) {
                    const c = p[i];
                    let h = 0
                      , a = 0;
                    if (i > 0) {
                        const o = p[i - 1];
                        h = o.originalStart + o.originalLength,
                        a = o.modifiedStart + o.modifiedLength
                    }
                    const d = c.originalLength > 0
                      , u = c.modifiedLength > 0;
                    let s = 0
                      , r = this.G(c.originalStart, c.originalLength, c.modifiedStart, c.modifiedLength);
                    for (let o = 1; ; o++) {
                        const b = c.originalStart - o
                          , m = c.modifiedStart - o;
                        if (b < h || m < a || d && !this.s(b, b + c.originalLength) || u && !this.u(m, m + c.modifiedLength))
                            break;
                        const S = (b === h && m === a ? 5 : 0) + this.G(b, c.originalLength, m, c.modifiedLength);
                        S > r && (r = S,
                        s = o)
                    }
                    c.originalStart -= s,
                    c.modifiedStart -= s;
                    const l = [null];
                    if (i > 0 && this.I(p[i - 1], p[i], l)) {
                        p[i - 1] = l[0],
                        p.splice(i, 1),
                        i++;
                        continue
                    }
                }
                if (this.d)
                    for (let i = 1, c = p.length; i < c; i++) {
                        const h = p[i - 1]
                          , a = p[i]
                          , d = a.originalStart - h.originalStart - h.originalLength
                          , u = h.originalStart
                          , s = a.originalStart + a.originalLength
                          , r = s - u
                          , l = h.modifiedStart
                          , o = a.modifiedStart + a.modifiedLength
                          , b = o - l;
                        if (d < 5 && r < 20 && b < 20) {
                            const m = this.A(u, r, l, b, d);
                            if (m) {
                                const [w,S] = m;
                                (w !== h.originalStart + h.originalLength || S !== h.modifiedStart + h.modifiedLength) && (h.originalLength = w - h.originalStart,
                                h.modifiedLength = S - h.modifiedStart,
                                a.originalStart = w + d,
                                a.modifiedStart = S + d,
                                a.originalLength = s - a.originalStart,
                                a.modifiedLength = o - a.modifiedStart)
                            }
                        }
                    }
                return p
            }
            A(p, i, c, h, a) {
                if (i < a || h < a)
                    return null;
                const d = p + i - a + 1
                  , u = c + h - a + 1;
                let s = 0
                  , r = 0
                  , l = 0;
                for (let o = p; o < d; o++)
                    for (let b = c; b < u; b++) {
                        const m = this.B(o, b, a);
                        m > 0 && m > s && (s = m,
                        r = o,
                        l = b)
                    }
                return s > 0 ? [r, l] : null
            }
            B(p, i, c) {
                let h = 0;
                for (let a = 0; a < c; a++) {
                    if (!this.p(p + a, i + a))
                        return 0;
                    h += this.e[p + a].length
                }
                return h
            }
            C(p) {
                return p <= 0 || p >= this.f.length - 1 ? !0 : this.d && /^\s*$/.test(this.e[p])
            }
            D(p, i) {
                if (this.C(p) || this.C(p - 1))
                    return !0;
                if (i > 0) {
                    const c = p + i;
                    if (this.C(c - 1) || this.C(c))
                        return !0
                }
                return !1
            }
            E(p) {
                return p <= 0 || p >= this.h.length - 1 ? !0 : this.d && /^\s*$/.test(this.g[p])
            }
            F(p, i) {
                if (this.E(p) || this.E(p - 1))
                    return !0;
                if (i > 0) {
                    const c = p + i;
                    if (this.E(c - 1) || this.E(c))
                        return !0
                }
                return !1
            }
            G(p, i, c, h) {
                const a = this.D(p, i) ? 1 : 0
                  , d = this.F(c, h) ? 1 : 0;
                return a + d
            }
            H(p, i) {
                const c = [];
                if (p.length === 0 || i.length === 0)
                    return i.length > 0 ? i : p;
                if (this.I(p[p.length - 1], i[0], c)) {
                    const h = new Array(p.length + i.length - 1);
                    return E.Copy(p, 0, h, 0, p.length - 1),
                    h[p.length - 1] = c[0],
                    E.Copy(i, 1, h, p.length, i.length - 1),
                    h
                } else {
                    const h = new Array(p.length + i.length);
                    return E.Copy(p, 0, h, 0, p.length),
                    E.Copy(i, 0, h, p.length, i.length),
                    h
                }
            }
            I(p, i, c) {
                if (y.Assert(p.originalStart <= i.originalStart, "Left change is not less than or equal to right change"),
                y.Assert(p.modifiedStart <= i.modifiedStart, "Left change is not less than or equal to right change"),
                p.originalStart + p.originalLength >= i.originalStart || p.modifiedStart + p.modifiedLength >= i.modifiedStart) {
                    const h = p.originalStart;
                    let a = p.originalLength;
                    const d = p.modifiedStart;
                    let u = p.modifiedLength;
                    return p.originalStart + p.originalLength >= i.originalStart && (a = i.originalStart + i.originalLength - p.originalStart),
                    p.modifiedStart + p.modifiedLength >= i.modifiedStart && (u = i.modifiedStart + i.modifiedLength - p.modifiedStart),
                    c[0] = new t.$Rt(h,a,d,u),
                    !0
                } else
                    return c[0] = null,
                    !1
            }
            J(p, i, c, h) {
                if (p >= 0 && p < h)
                    return p;
                const a = c
                  , d = h - c - 1
                  , u = i % 2 === 0;
                if (p < 0) {
                    const s = a % 2 === 0;
                    return u === s ? 0 : 1
                } else {
                    const s = d % 2 === 0;
                    return u === s ? h - 1 : h - 2
                }
            }
        }
        e.$Ut = f
    }),
    define(ge[519], be([1, 0, 105, 392, 115, 131, 67, 12, 31]), function(ce, e, t, n, C, I, L, y, E) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Nr = f,
        e.$Or = a,
        e.$Pr = m,
        e.$Qr = A,
        e.$Rr = V,
        e.$Sr = j;
        const $ = 0
          , v = [$, []];
        function f(W, q, H, U) {
            if (!W || !q)
                return v;
            const K = W.length
              , G = q.length;
            if (K < G)
                return v;
            const Z = W.toLowerCase();
            return g(q, H, G, W, Z, K, U)
        }
        function g(W, q, H, U, K, G, Z) {
            const x = []
              , X = [];
            for (let ae = 0; ae < H; ae++) {
                const re = ae * G
                  , se = re - G
                  , ee = ae > 0
                  , J = W[ae]
                  , te = q[ae];
                for (let ne = 0; ne < G; ne++) {
                    const le = ne > 0
                      , ie = re + ne
                      , oe = ie - 1
                      , fe = se + ne - 1
                      , he = le ? x[oe] : 0
                      , ue = ee && le ? x[fe] : 0
                      , de = ee && le ? X[fe] : 0;
                    let $e;
                    !ue && ee ? $e = 0 : $e = p(J, te, U, K, ne, de),
                    $e && ue + $e >= he && (Z || ee || K.startsWith(q, ne)) ? (X[ie] = de + 1,
                    x[ie] = ue + $e) : (X[ie] = $,
                    x[ie] = he)
                }
            }
            const Y = [];
            let Q = H - 1
              , _ = G - 1;
            for (; Q >= 0 && _ >= 0; ) {
                const ae = Q * G + _;
                X[ae] === $ || (Y.push(_),
                Q--),
                _--
            }
            return [x[H * G - 1], Y.reverse()]
        }
        function p(W, q, H, U, K, G) {
            let Z = 0;
            if (!i(q, U[K]))
                return Z;
            if (Z += 1,
            G > 0 && (Z += G * 5),
            W === H[K] && (Z += 1),
            K === 0)
                Z += 8;
            else {
                const x = c(H.charCodeAt(K - 1));
                x ? Z += x : (0,
                C.$Lk)(H.charCodeAt(K)) && G === 0 && (Z += 2)
            }
            return Z
        }
        function i(W, q) {
            return W === q ? !0 : W === "/" || W === "\\" ? q === "/" || q === "\\" : !1
        }
        function c(W) {
            switch (W) {
            case t.CharCode.Slash:
            case t.CharCode.Backslash:
                return 5;
            case t.CharCode.Underline:
            case t.CharCode.Dash:
            case t.CharCode.Period:
            case t.CharCode.Space:
            case t.CharCode.SingleQuote:
            case t.CharCode.DoubleQuote:
            case t.CharCode.Colon:
                return 4;
            default:
                return 0
            }
        }
        const h = [void 0, []];
        function a(W, q, H=0, U=0) {
            const K = q;
            return K.values && K.values.length > 1 ? d(W, K.values, H, U) : u(W, q, H, U)
        }
        function d(W, q, H, U) {
            let K = 0;
            const G = [];
            for (const Z of q) {
                const [x,X] = u(W, Z, H, U);
                if (typeof x != "number")
                    return h;
                K += x,
                G.push(...X)
            }
            return [K, k(G)]
        }
        function u(W, q, H, U) {
            const K = (0,
            C.$Uk)(q.original, q.originalLowercase, H, W, W.toLowerCase(), U, {
                firstMatchCanBeWeak: !0,
                boostFullMatch: !0
            });
            return K ? [K[0], (0,
            C.$Rk)(K)] : h
        }
        const s = Object.freeze({
            score: 0
        })
          , r = 1 << 18
          , l = 1 << 17
          , o = 65536;
        function b(W, q, H, U) {
            const K = U.values ? U.values : [U];
            return (0,
            I.$tj)({
                [U.normalized]: {
                    values: K.map(Z=>({
                        value: Z.normalized,
                        expectContiguousMatch: Z.expectContiguousMatch
                    })),
                    label: W,
                    description: q,
                    allowNonContiguousMatches: H
                }
            })
        }
        function m(W, q, H, U, K) {
            if (!W || !q.normalized)
                return s;
            const G = U.getItemLabel(W);
            if (!G)
                return s;
            const Z = U.getItemDescription(W)
              , x = b(G, Z, H, q)
              , X = K[x];
            if (X)
                return X;
            const Y = w(G, Z, U.getItemPath(W), q, H);
            return K[x] = Y,
            Y
        }
        function w(W, q, H, U, K) {
            const G = !H || !U.containsPathSeparator;
            return H && (y.$l ? U.pathNormalized === H : (0,
            E.$Ff)(U.pathNormalized, H)) ? {
                score: r,
                labelMatch: [{
                    start: 0,
                    end: W.length
                }],
                descriptionMatch: q ? [{
                    start: 0,
                    end: q.length
                }] : void 0
            } : U.values && U.values.length > 1 ? S(W, q, H, U.values, G, K) : T(W, q, H, U, G, K)
        }
        function S(W, q, H, U, K, G) {
            let Z = 0;
            const x = []
              , X = [];
            for (const Y of U) {
                const {score: Q, labelMatch: _, descriptionMatch: ae} = T(W, q, H, Y, K, G);
                if (Q === $)
                    return s;
                Z += Q,
                _ && x.push(..._),
                ae && X.push(...ae)
            }
            return {
                score: Z,
                labelMatch: k(x),
                descriptionMatch: k(X)
            }
        }
        function T(W, q, H, U, K, G) {
            if (K || !q) {
                const [Z,x] = f(W, U.normalized, U.normalizedLowercase, G && !U.expectContiguousMatch);
                if (Z) {
                    const X = (0,
                    C.$Ik)(U.normalized, W);
                    let Y;
                    if (X) {
                        Y = l;
                        const Q = Math.round(U.normalized.length / W.length * 100);
                        Y += Q
                    } else
                        Y = o;
                    return {
                        score: Y + Z,
                        labelMatch: X || D(x)
                    }
                }
            }
            if (q) {
                let Z = q;
                H && (Z = `${q}${L.sep}`);
                const x = Z.length
                  , X = `${Z}${W}`
                  , [Y,Q] = f(X, U.normalized, U.normalizedLowercase, G && !U.expectContiguousMatch);
                if (Y) {
                    const _ = D(Q)
                      , ae = []
                      , re = [];
                    return _.forEach(se=>{
                        se.start < x && se.end > x ? (ae.push({
                            start: 0,
                            end: se.end - x
                        }),
                        re.push({
                            start: se.start,
                            end: x
                        })) : se.start >= x ? ae.push({
                            start: se.start - x,
                            end: se.end - x
                        }) : re.push(se)
                    }
                    ),
                    {
                        score: Y,
                        labelMatch: ae,
                        descriptionMatch: re
                    }
                }
            }
            return s
        }
        function D(W) {
            const q = [];
            if (!W)
                return q;
            let H;
            for (const U of W)
                H && H.end === U ? H.end += 1 : (H = {
                    start: U,
                    end: U + 1
                },
                q.push(H));
            return q
        }
        function k(W) {
            const q = W.sort((K,G)=>K.start - G.start)
              , H = [];
            let U;
            for (const K of q)
                !U || !P(U, K) ? (U = K,
                H.push(K)) : (U.start = Math.min(U.start, K.start),
                U.end = Math.max(U.end, K.end));
            return H
        }
        function P(W, q) {
            return !(W.end < q.start || q.end < W.start)
        }
        function A(W, q, H, U, K, G) {
            const Z = m(W, H, U, K, G)
              , x = m(q, H, U, K, G)
              , X = Z.score
              , Y = x.score;
            if ((X === r || Y === r) && X !== Y)
                return X === r ? -1 : 1;
            if (X > o || Y > o) {
                if (X !== Y)
                    return X > Y ? -1 : 1;
                if (X < l && Y < l) {
                    const J = O(Z.labelMatch, x.labelMatch);
                    if (J !== 0)
                        return J
                }
                const se = K.getItemLabel(W) || ""
                  , ee = K.getItemLabel(q) || "";
                if (se.length !== ee.length)
                    return se.length - ee.length
            }
            if (X !== Y)
                return X > Y ? -1 : 1;
            const Q = Array.isArray(Z.labelMatch) && Z.labelMatch.length > 0
              , _ = Array.isArray(x.labelMatch) && x.labelMatch.length > 0;
            if (Q && !_)
                return -1;
            if (_ && !Q)
                return 1;
            const ae = M(W, Z, K)
              , re = M(q, x, K);
            return ae && re && ae !== re ? re > ae ? -1 : 1 : R(W, q, H, K)
        }
        function M(W, q, H) {
            let U = -1
              , K = -1;
            if (q.descriptionMatch && q.descriptionMatch.length ? U = q.descriptionMatch[0].start : q.labelMatch && q.labelMatch.length && (U = q.labelMatch[0].start),
            q.labelMatch && q.labelMatch.length) {
                if (K = q.labelMatch[q.labelMatch.length - 1].end,
                q.descriptionMatch && q.descriptionMatch.length) {
                    const G = H.getItemDescription(W);
                    G && (K += G.length)
                }
            } else
                q.descriptionMatch && q.descriptionMatch.length && (K = q.descriptionMatch[q.descriptionMatch.length - 1].end);
            return K - U
        }
        function O(W, q) {
            if (!W && !q || (!W || !W.length) && (!q || !q.length))
                return 0;
            if (!q || !q.length)
                return -1;
            if (!W || !W.length)
                return 1;
            const H = W[0].start
              , K = W[W.length - 1].end - H
              , G = q[0].start
              , x = q[q.length - 1].end - G;
            return K === x ? 0 : x < K ? 1 : -1
        }
        function R(W, q, H, U) {
            const K = U.getItemLabel(W) || ""
              , G = U.getItemLabel(q) || ""
              , Z = U.getItemDescription(W)
              , x = U.getItemDescription(q)
              , X = K.length + (Z ? Z.length : 0)
              , Y = G.length + (x ? x.length : 0);
            if (X !== Y)
                return X - Y;
            const Q = U.getItemPath(W)
              , _ = U.getItemPath(q);
            return Q && _ && Q.length !== _.length ? Q.length - _.length : K !== G ? (0,
            n.$Lr)(K, G, H.normalized) : Z && x && Z !== x ? (0,
            n.$Lr)(Z, x, H.normalized) : Q && _ && Q !== _ ? (0,
            n.$Lr)(Q, _, H.normalized) : 0
        }
        function N(W) {
            return W.startsWith('"') && W.endsWith('"')
        }
        const z = " ";
        function V(W) {
            typeof W != "string" && (W = "");
            const q = W.toLowerCase()
              , {pathNormalized: H, normalized: U, normalizedLowercase: K} = B(W)
              , G = H.indexOf(L.sep) >= 0
              , Z = N(W);
            let x;
            const X = W.split(z);
            if (X.length > 1)
                for (const Y of X) {
                    const Q = N(Y)
                      , {pathNormalized: _, normalized: ae, normalizedLowercase: re} = B(Y);
                    ae && (x || (x = []),
                    x.push({
                        original: Y,
                        originalLowercase: Y.toLowerCase(),
                        pathNormalized: _,
                        normalized: ae,
                        normalizedLowercase: re,
                        expectContiguousMatch: Q
                    }))
                }
            return {
                original: W,
                originalLowercase: q,
                pathNormalized: H,
                normalized: U,
                normalizedLowercase: K,
                values: x,
                containsPathSeparator: G,
                expectContiguousMatch: Z
            }
        }
        function B(W) {
            let q;
            y.$j ? q = W.replace(/\//g, L.sep) : q = W.replace(/\\/g, L.sep);
            const H = (0,
            E.$pf)(q).replace(/\s|"/g, "");
            return {
                pathNormalized: q,
                normalized: H,
                normalizedLowercase: H.toLowerCase()
            }
        }
        function j(W) {
            return Array.isArray(W) ? V(W.map(q=>q.original).join(z)) : V(W.original)
        }
    }),
    define(ge[225], be([1, 0, 115, 31, 32]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Xk = E,
        e.$Yk = v,
        e.$Zk = g,
        e.$1k = p,
        e.$2k = c,
        e.$3k = h;
        const I = "$("
          , L = new RegExp(`\\$\\(${C.ThemeIcon.iconNameExpression}(?:${C.ThemeIcon.iconModifierExpression})?\\)`,"g")
          , y = new RegExp(`(\\\\)?${L.source}`,"g");
        function E(a) {
            return a.replace(y, (d,u)=>u ? d : `\\${d}`)
        }
        const $ = new RegExp(`\\\\${L.source}`,"g");
        function v(a) {
            return a.replace($, d=>`\\${d}`)
        }
        const f = new RegExp(`(\\s)?(\\\\)?${L.source}(\\s)?`,"g");
        function g(a) {
            return a.indexOf(I) === -1 ? a : a.replace(f, (d,u,s,r)=>s ? d : u || r || "")
        }
        function p(a) {
            return a ? a.replace(/\$\((.*?)\)/g, (d,u)=>` ${u} `).trim() : ""
        }
        const i = new RegExp(`\\$\\(${C.ThemeIcon.iconNameCharacter}+\\)`,"g");
        function c(a) {
            i.lastIndex = 0;
            let d = "";
            const u = [];
            let s = 0;
            for (; ; ) {
                const r = i.lastIndex
                  , l = i.exec(a)
                  , o = a.substring(r, l?.index);
                if (o.length > 0) {
                    d += o;
                    for (let b = 0; b < o.length; b++)
                        u.push(s)
                }
                if (!l)
                    break;
                s += l[0].length
            }
            return {
                text: d,
                iconOffsets: u
            }
        }
        function h(a, d, u=!1) {
            const {text: s, iconOffsets: r} = d;
            if (!r || r.length === 0)
                return (0,
                t.$Ok)(a, s, u);
            const l = (0,
            n.$mf)(s, " ")
              , o = s.length - l.length
              , b = (0,
            t.$Ok)(a, l, u);
            if (b)
                for (const m of b) {
                    const w = r[m.start + o] + o;
                    m.start += w,
                    m.end += w
                }
            return b
        }
    }),
    define(ge[939], be([1, 0, 31]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$GX = n,
        t = xe(t);
        function n(L, y) {
            if (L && L[0] !== "") {
                const E = C(L, y, "-")
                  , $ = C(L, y, "_");
                return E && !$ ? I(L, y, "-") : !E && $ ? I(L, y, "_") : L[0].toUpperCase() === L[0] ? y.toUpperCase() : L[0].toLowerCase() === L[0] ? y.toLowerCase() : t.$8f(L[0][0]) && y.length > 0 ? y[0].toUpperCase() + y.substr(1) : L[0][0].toUpperCase() !== L[0][0] && y.length > 0 ? y[0].toLowerCase() + y.substr(1) : y
            } else
                return y
        }
        function C(L, y, E) {
            return L[0].indexOf(E) !== -1 && y.indexOf(E) !== -1 && L[0].split(E).length === y.split(E).length
        }
        function I(L, y, E) {
            const $ = y.split(E)
              , v = L[0].split(E);
            let f = "";
            return $.forEach((g,p)=>{
                f += n([v[p]], g) + E
            }
            ),
            f.slice(0, -1)
        }
    }),
    define(ge[96], be([1, 0, 31]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        t = xe(t);
        var n;
        (function(C) {
            C[C.Ignore = 0] = "Ignore",
            C[C.Info = 1] = "Info",
            C[C.Warning = 2] = "Warning",
            C[C.Error = 3] = "Error"
        }
        )(n || (n = {})),
        function(C) {
            const I = "error"
              , L = "warning"
              , y = "warn"
              , E = "info"
              , $ = "ignore";
            function v(g) {
                return g ? t.$Ff(I, g) ? C.Error : t.$Ff(L, g) || t.$Ff(y, g) ? C.Warning : t.$Ff(E, g) ? C.Info : C.Ignore : C.Ignore
            }
            C.fromValue = v;
            function f(g) {
                switch (g) {
                case C.Error:
                    return I;
                case C.Warning:
                    return L;
                case C.Info:
                    return E;
                default:
                    return $
                }
            }
            C.toString = f
        }(n || (n = {})),
        e.default = n
    }),
    define(ge[289], be([1, 0, 13, 105, 31]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Li = e.$Ki = e.$Ji = e.$Ii = e.$Hi = void 0;
        class I {
            constructor() {
                this.b = "",
                this.c = 0
            }
            reset(i) {
                return this.b = i,
                this.c = 0,
                this
            }
            next() {
                return this.c += 1,
                this
            }
            hasNext() {
                return this.c < this.b.length - 1
            }
            cmp(i) {
                const c = i.charCodeAt(0)
                  , h = this.b.charCodeAt(this.c);
                return c - h
            }
            value() {
                return this.b[this.c]
            }
        }
        e.$Hi = I;
        class L {
            constructor(i=!0) {
                this.e = i
            }
            reset(i) {
                return this.b = i,
                this.c = 0,
                this.d = 0,
                this.next()
            }
            hasNext() {
                return this.d < this.b.length
            }
            next() {
                this.c = this.d;
                let i = !0;
                for (; this.d < this.b.length; this.d++)
                    if (this.b.charCodeAt(this.d) === n.CharCode.Period)
                        if (i)
                            this.c++;
                        else
                            break;
                    else
                        i = !1;
                return this
            }
            cmp(i) {
                return this.e ? (0,
                C.$zf)(i, this.b, 0, i.length, this.c, this.d) : (0,
                C.$Bf)(i, this.b, 0, i.length, this.c, this.d)
            }
            value() {
                return this.b.substring(this.c, this.d)
            }
        }
        e.$Ii = L;
        class y {
            constructor(i=!0, c=!0) {
                this.f = i,
                this.g = c
            }
            reset(i) {
                this.d = 0,
                this.e = 0,
                this.b = i,
                this.c = i.length;
                for (let c = i.length - 1; c >= 0; c--,
                this.c--) {
                    const h = this.b.charCodeAt(c);
                    if (!(h === n.CharCode.Slash || this.f && h === n.CharCode.Backslash))
                        break
                }
                return this.next()
            }
            hasNext() {
                return this.e < this.c
            }
            next() {
                this.d = this.e;
                let i = !0;
                for (; this.e < this.c; this.e++) {
                    const c = this.b.charCodeAt(this.e);
                    if (c === n.CharCode.Slash || this.f && c === n.CharCode.Backslash)
                        if (i)
                            this.d++;
                        else
                            break;
                    else
                        i = !1
                }
                return this
            }
            cmp(i) {
                return this.g ? (0,
                C.$zf)(i, this.b, 0, i.length, this.d, this.e) : (0,
                C.$Bf)(i, this.b, 0, i.length, this.d, this.e)
            }
            value() {
                return this.b.substring(this.d, this.e)
            }
        }
        e.$Ji = y;
        var E;
        (function(p) {
            p[p.Scheme = 1] = "Scheme",
            p[p.Authority = 2] = "Authority",
            p[p.Path = 3] = "Path",
            p[p.Query = 4] = "Query",
            p[p.Fragment = 5] = "Fragment"
        }
        )(E || (E = {}));
        class $ {
            constructor(i, c) {
                this.f = i,
                this.g = c,
                this.d = [],
                this.e = 0
            }
            reset(i) {
                return this.c = i,
                this.d = [],
                this.c.scheme && this.d.push(E.Scheme),
                this.c.authority && this.d.push(E.Authority),
                this.c.path && (this.b = new y(!1,!this.f(i)),
                this.b.reset(i.path),
                this.b.value() && this.d.push(E.Path)),
                this.g(i) || (this.c.query && this.d.push(E.Query),
                this.c.fragment && this.d.push(E.Fragment)),
                this.e = 0,
                this
            }
            next() {
                return this.d[this.e] === E.Path && this.b.hasNext() ? this.b.next() : this.e += 1,
                this
            }
            hasNext() {
                return this.d[this.e] === E.Path && this.b.hasNext() || this.e < this.d.length - 1
            }
            cmp(i) {
                if (this.d[this.e] === E.Scheme)
                    return (0,
                    C.$Af)(i, this.c.scheme);
                if (this.d[this.e] === E.Authority)
                    return (0,
                    C.$Af)(i, this.c.authority);
                if (this.d[this.e] === E.Path)
                    return this.b.cmp(i);
                if (this.d[this.e] === E.Query)
                    return (0,
                    C.$yf)(i, this.c.query);
                if (this.d[this.e] === E.Fragment)
                    return (0,
                    C.$yf)(i, this.c.fragment);
                throw new Error
            }
            value() {
                if (this.d[this.e] === E.Scheme)
                    return this.c.scheme;
                if (this.d[this.e] === E.Authority)
                    return this.c.authority;
                if (this.d[this.e] === E.Path)
                    return this.b.value();
                if (this.d[this.e] === E.Query)
                    return this.c.query;
                if (this.d[this.e] === E.Fragment)
                    return this.c.fragment;
                throw new Error
            }
        }
        e.$Ki = $;
        class v {
            constructor() {
                this.height = 1
            }
            isEmpty() {
                return !this.left && !this.mid && !this.right && !this.value
            }
            rotateLeft() {
                const i = this.right;
                return this.right = i.left,
                i.left = this,
                this.updateHeight(),
                i.updateHeight(),
                i
            }
            rotateRight() {
                const i = this.left;
                return this.left = i.right,
                i.right = this,
                this.updateHeight(),
                i.updateHeight(),
                i
            }
            updateHeight() {
                this.height = 1 + Math.max(this.heightLeft, this.heightRight)
            }
            balanceFactor() {
                return this.heightRight - this.heightLeft
            }
            get heightLeft() {
                return this.left?.height ?? 0
            }
            get heightRight() {
                return this.right?.height ?? 0
            }
        }
        var f;
        (function(p) {
            p[p.Left = -1] = "Left",
            p[p.Mid = 0] = "Mid",
            p[p.Right = 1] = "Right"
        }
        )(f || (f = {}));
        class g {
            static forUris(i=()=>!1, c=()=>!1) {
                return new g(new $(i,c))
            }
            static forPaths(i=!1) {
                return new g(new y(void 0,!i))
            }
            static forStrings() {
                return new g(new I)
            }
            static forConfigKeys() {
                return new g(new L)
            }
            constructor(i) {
                this.b = i
            }
            clear() {
                this.c = void 0
            }
            fill(i, c) {
                if (c) {
                    const h = c.slice(0);
                    (0,
                    t.$Vb)(h);
                    for (const a of h)
                        this.set(a, i)
                } else {
                    const h = i.slice(0);
                    (0,
                    t.$Vb)(h);
                    for (const a of h)
                        this.set(a[0], a[1])
                }
            }
            set(i, c) {
                const h = this.b.reset(i);
                let a;
                this.c || (this.c = new v,
                this.c.segment = h.value());
                const d = [];
                for (a = this.c; ; ) {
                    const s = h.cmp(a.segment);
                    if (s > 0)
                        a.left || (a.left = new v,
                        a.left.segment = h.value()),
                        d.push([f.Left, a]),
                        a = a.left;
                    else if (s < 0)
                        a.right || (a.right = new v,
                        a.right.segment = h.value()),
                        d.push([f.Right, a]),
                        a = a.right;
                    else if (h.hasNext())
                        h.next(),
                        a.mid || (a.mid = new v,
                        a.mid.segment = h.value()),
                        d.push([f.Mid, a]),
                        a = a.mid;
                    else
                        break
                }
                const u = a.value;
                a.value = c,
                a.key = i;
                for (let s = d.length - 1; s >= 0; s--) {
                    const r = d[s][1];
                    r.updateHeight();
                    const l = r.balanceFactor();
                    if (l < -1 || l > 1) {
                        const o = d[s][0]
                          , b = d[s + 1][0];
                        if (o === f.Right && b === f.Right)
                            d[s][1] = r.rotateLeft();
                        else if (o === f.Left && b === f.Left)
                            d[s][1] = r.rotateRight();
                        else if (o === f.Right && b === f.Left)
                            r.right = d[s + 1][1] = d[s + 1][1].rotateRight(),
                            d[s][1] = r.rotateLeft();
                        else if (o === f.Left && b === f.Right)
                            r.left = d[s + 1][1] = d[s + 1][1].rotateLeft(),
                            d[s][1] = r.rotateRight();
                        else
                            throw new Error;
                        if (s > 0)
                            switch (d[s - 1][0]) {
                            case f.Left:
                                d[s - 1][1].left = d[s][1];
                                break;
                            case f.Right:
                                d[s - 1][1].right = d[s][1];
                                break;
                            case f.Mid:
                                d[s - 1][1].mid = d[s][1];
                                break
                            }
                        else
                            this.c = d[0][1]
                    }
                }
                return u
            }
            get(i) {
                return this.d(i)?.value
            }
            d(i) {
                const c = this.b.reset(i);
                let h = this.c;
                for (; h; ) {
                    const a = c.cmp(h.segment);
                    if (a > 0)
                        h = h.left;
                    else if (a < 0)
                        h = h.right;
                    else if (c.hasNext())
                        c.next(),
                        h = h.mid;
                    else
                        break
                }
                return h
            }
            has(i) {
                const c = this.d(i);
                return !(c?.value === void 0 && c?.mid === void 0)
            }
            delete(i) {
                return this.e(i, !1)
            }
            deleteSuperstr(i) {
                return this.e(i, !0)
            }
            e(i, c) {
                const h = this.b.reset(i)
                  , a = [];
                let d = this.c;
                for (; d; ) {
                    const u = h.cmp(d.segment);
                    if (u > 0)
                        a.push([f.Left, d]),
                        d = d.left;
                    else if (u < 0)
                        a.push([f.Right, d]),
                        d = d.right;
                    else if (h.hasNext())
                        h.next(),
                        a.push([f.Mid, d]),
                        d = d.mid;
                    else
                        break
                }
                if (d) {
                    if (c ? (d.left = void 0,
                    d.mid = void 0,
                    d.right = void 0,
                    d.height = 1) : (d.key = void 0,
                    d.value = void 0),
                    !d.mid && !d.value)
                        if (d.left && d.right) {
                            const u = this.f(d.right);
                            if (u.key) {
                                const {key: s, value: r, segment: l} = u;
                                this.e(u.key, !1),
                                d.key = s,
                                d.value = r,
                                d.segment = l
                            }
                        } else {
                            const u = d.left ?? d.right;
                            if (a.length > 0) {
                                const [s,r] = a[a.length - 1];
                                switch (s) {
                                case f.Left:
                                    r.left = u;
                                    break;
                                case f.Mid:
                                    r.mid = u;
                                    break;
                                case f.Right:
                                    r.right = u;
                                    break
                                }
                            } else
                                this.c = u
                        }
                    for (let u = a.length - 1; u >= 0; u--) {
                        const s = a[u][1];
                        s.updateHeight();
                        const r = s.balanceFactor();
                        if (r > 1 ? (s.right.balanceFactor() >= 0 || (s.right = s.right.rotateRight()),
                        a[u][1] = s.rotateLeft()) : r < -1 && (s.left.balanceFactor() <= 0 || (s.left = s.left.rotateLeft()),
                        a[u][1] = s.rotateRight()),
                        u > 0)
                            switch (a[u - 1][0]) {
                            case f.Left:
                                a[u - 1][1].left = a[u][1];
                                break;
                            case f.Right:
                                a[u - 1][1].right = a[u][1];
                                break;
                            case f.Mid:
                                a[u - 1][1].mid = a[u][1];
                                break
                            }
                        else
                            this.c = a[0][1]
                    }
                }
            }
            f(i) {
                for (; i.left; )
                    i = i.left;
                return i
            }
            findSubstr(i) {
                const c = this.b.reset(i);
                let h = this.c, a;
                for (; h; ) {
                    const d = c.cmp(h.segment);
                    if (d > 0)
                        h = h.left;
                    else if (d < 0)
                        h = h.right;
                    else if (c.hasNext())
                        c.next(),
                        a = h.value || a,
                        h = h.mid;
                    else
                        break
                }
                return h && h.value || a
            }
            findSuperstr(i) {
                return this.g(i, !1)
            }
            g(i, c) {
                const h = this.b.reset(i);
                let a = this.c;
                for (; a; ) {
                    const d = h.cmp(a.segment);
                    if (d > 0)
                        a = a.left;
                    else if (d < 0)
                        a = a.right;
                    else if (h.hasNext())
                        h.next(),
                        a = a.mid;
                    else
                        return a.mid ? this.h(a.mid) : c ? a.value : void 0
                }
            }
            hasElementOrSubtree(i) {
                return this.g(i, !0) !== void 0
            }
            forEach(i) {
                for (const [c,h] of this)
                    i(h, c)
            }
            *[Symbol.iterator]() {
                yield*this.h(this.c)
            }
            h(i) {
                const c = [];
                return this.j(i, c),
                c[Symbol.iterator]()
            }
            j(i, c) {
                i && (i.left && this.j(i.left, c),
                i.value && c.push([i.key, i.value]),
                i.mid && this.j(i.mid, c),
                i.right && this.j(i.right, c))
            }
            _isBalanced() {
                const i = c=>{
                    if (!c)
                        return !0;
                    const h = c.balanceFactor();
                    return h < -1 || h > 1 ? !1 : i(c.left) && i(c.right)
                }
                ;
                return i(this.c)
            }
        }
        e.$Li = g
    }),
    define(ge[9], be([1, 0, 105, 174, 67, 12]), function(ce, e, t, n, C, I) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.URI = void 0,
        e.$vc = h,
        e.$wc = l,
        C = xe(C);
        const L = /^\w[\w\d+.-]*$/
          , y = /^\//
          , E = /^\/\//;
        function $(S, T) {
            if (!S.scheme && T)
                throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${S.authority}", path: "${S.path}", query: "${S.query}", fragment: "${S.fragment}"}`);
            if (S.scheme && !L.test(S.scheme))
                throw new Error("[UriError]: Scheme contains illegal characters.");
            if (S.path) {
                if (S.authority) {
                    if (!y.test(S.path))
                        throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')
                } else if (E.test(S.path))
                    throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')
            }
        }
        function v(S, T) {
            return !S && !T ? "file" : S
        }
        function f(S, T) {
            switch (S) {
            case "https":
            case "http":
            case "file":
                T ? T[0] !== p && (T = p + T) : T = p;
                break
            }
            return T
        }
        const g = ""
          , p = "/"
          , i = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
        class c {
            static isUri(T) {
                return T instanceof c ? !0 : T ? typeof T.authority == "string" && typeof T.fragment == "string" && typeof T.path == "string" && typeof T.query == "string" && typeof T.scheme == "string" && typeof T.fsPath == "string" && typeof T.with == "function" && typeof T.toString == "function" : !1
            }
            constructor(T, D, k, P, A, M=!1) {
                typeof T == "object" ? (this.scheme = T.scheme || g,
                this.authority = T.authority || g,
                this.path = T.path || g,
                this.query = T.query || g,
                this.fragment = T.fragment || g) : (this.scheme = v(T, M),
                this.authority = D || g,
                this.path = f(this.scheme, k || g),
                this.query = P || g,
                this.fragment = A || g,
                $(this, M))
            }
            get fsPath() {
                return l(this, !1)
            }
            with(T) {
                if (!T)
                    return this;
                let {scheme: D, authority: k, path: P, query: A, fragment: M} = T;
                return D === void 0 ? D = this.scheme : D === null && (D = g),
                k === void 0 ? k = this.authority : k === null && (k = g),
                P === void 0 ? P = this.path : P === null && (P = g),
                A === void 0 ? A = this.query : A === null && (A = g),
                M === void 0 ? M = this.fragment : M === null && (M = g),
                D === this.scheme && k === this.authority && P === this.path && A === this.query && M === this.fragment ? this : new d(D,k,P,A,M)
            }
            static parse(T, D=!1) {
                const k = i.exec(T);
                return k ? new d(k[2] || g,w(k[4] || g),w(k[5] || g),w(k[7] || g),w(k[9] || g),D) : new d(g,g,g,g,g)
            }
            static file(T) {
                let D = g;
                if (I.$j && (T = T.replace(/\\/g, p)),
                T[0] === p && T[1] === p) {
                    const k = T.indexOf(p, 2);
                    k === -1 ? (D = T.substring(2),
                    T = p) : (D = T.substring(2, k),
                    T = T.substring(k) || p)
                }
                return new d("file",D,T,g,g)
            }
            static from(T, D) {
                return new d(T.scheme,T.authority,T.path,T.query,T.fragment,D)
            }
            static joinPath(T, ...D) {
                if (!T.path)
                    throw new Error("[UriError]: cannot call joinPath on URI without path");
                let k;
                return I.$j && T.scheme === "file" ? k = c.file(C.$fc.join(l(T, !0), ...D)).path : k = C.$gc.join(T.path, ...D),
                T.with({
                    path: k
                })
            }
            toString(T=!1) {
                return o(this, T)
            }
            toJSON() {
                return this
            }
            static revive(T) {
                if (T) {
                    if (T instanceof c)
                        return T;
                    {
                        const D = new d(T);
                        return D._formatted = T.external ?? null,
                        D._fsPath = T._sep === a ? T.fsPath ?? null : null,
                        D
                    }
                } else
                    return T
            }
            [Symbol.for("debug.description")]() {
                return `URI(${this.toString()})`
            }
        }
        e.URI = c;
        function h(S) {
            return !S || typeof S != "object" ? !1 : typeof S.scheme == "string" && (typeof S.authority == "string" || typeof S.authority > "u") && (typeof S.path == "string" || typeof S.path > "u") && (typeof S.query == "string" || typeof S.query > "u") && (typeof S.fragment == "string" || typeof S.fragment > "u")
        }
        const a = I.$j ? 1 : void 0;
        class d extends c {
            constructor() {
                super(...arguments),
                this._formatted = null,
                this._fsPath = null
            }
            get fsPath() {
                return this._fsPath || (this._fsPath = l(this, !1)),
                this._fsPath
            }
            toString(T=!1) {
                return T ? o(this, !0) : (this._formatted || (this._formatted = o(this, !1)),
                this._formatted)
            }
            toJSON() {
                const T = {
                    $mid: n.MarshalledId.Uri
                };
                return this._fsPath && (T.fsPath = this._fsPath,
                T._sep = a),
                this._formatted && (T.external = this._formatted),
                this.path && (T.path = this.path),
                this.scheme && (T.scheme = this.scheme),
                this.authority && (T.authority = this.authority),
                this.query && (T.query = this.query),
                this.fragment && (T.fragment = this.fragment),
                T
            }
        }
        const u = {
            [t.CharCode.Colon]: "%3A",
            [t.CharCode.Slash]: "%2F",
            [t.CharCode.QuestionMark]: "%3F",
            [t.CharCode.Hash]: "%23",
            [t.CharCode.OpenSquareBracket]: "%5B",
            [t.CharCode.CloseSquareBracket]: "%5D",
            [t.CharCode.AtSign]: "%40",
            [t.CharCode.ExclamationMark]: "%21",
            [t.CharCode.DollarSign]: "%24",
            [t.CharCode.Ampersand]: "%26",
            [t.CharCode.SingleQuote]: "%27",
            [t.CharCode.OpenParen]: "%28",
            [t.CharCode.CloseParen]: "%29",
            [t.CharCode.Asterisk]: "%2A",
            [t.CharCode.Plus]: "%2B",
            [t.CharCode.Comma]: "%2C",
            [t.CharCode.Semicolon]: "%3B",
            [t.CharCode.Equals]: "%3D",
            [t.CharCode.Space]: "%20"
        };
        function s(S, T, D) {
            let k, P = -1;
            for (let A = 0; A < S.length; A++) {
                const M = S.charCodeAt(A);
                if (M >= t.CharCode.a && M <= t.CharCode.z || M >= t.CharCode.A && M <= t.CharCode.Z || M >= t.CharCode.Digit0 && M <= t.CharCode.Digit9 || M === t.CharCode.Dash || M === t.CharCode.Period || M === t.CharCode.Underline || M === t.CharCode.Tilde || T && M === t.CharCode.Slash || D && M === t.CharCode.OpenSquareBracket || D && M === t.CharCode.CloseSquareBracket || D && M === t.CharCode.Colon)
                    P !== -1 && (k += encodeURIComponent(S.substring(P, A)),
                    P = -1),
                    k !== void 0 && (k += S.charAt(A));
                else {
                    k === void 0 && (k = S.substr(0, A));
                    const O = u[M];
                    O !== void 0 ? (P !== -1 && (k += encodeURIComponent(S.substring(P, A)),
                    P = -1),
                    k += O) : P === -1 && (P = A)
                }
            }
            return P !== -1 && (k += encodeURIComponent(S.substring(P))),
            k !== void 0 ? k : S
        }
        function r(S) {
            let T;
            for (let D = 0; D < S.length; D++) {
                const k = S.charCodeAt(D);
                k === t.CharCode.Hash || k === t.CharCode.QuestionMark ? (T === void 0 && (T = S.substr(0, D)),
                T += u[k]) : T !== void 0 && (T += S[D])
            }
            return T !== void 0 ? T : S
        }
        function l(S, T) {
            let D;
            return S.authority && S.path.length > 1 && S.scheme === "file" ? D = `//${S.authority}${S.path}` : S.path.charCodeAt(0) === t.CharCode.Slash && (S.path.charCodeAt(1) >= t.CharCode.A && S.path.charCodeAt(1) <= t.CharCode.Z || S.path.charCodeAt(1) >= t.CharCode.a && S.path.charCodeAt(1) <= t.CharCode.z) && S.path.charCodeAt(2) === t.CharCode.Colon ? T ? D = S.path.substr(1) : D = S.path[1].toLowerCase() + S.path.substr(2) : D = S.path,
            I.$j && (D = D.replace(/\//g, "\\")),
            D
        }
        function o(S, T) {
            const D = T ? r : s;
            let k = ""
              , {scheme: P, authority: A, path: M, query: O, fragment: R} = S;
            if (P && (k += P,
            k += ":"),
            (A || P === "file") && (k += p,
            k += p),
            A) {
                let N = A.indexOf("@");
                if (N !== -1) {
                    const z = A.substr(0, N);
                    A = A.substr(N + 1),
                    N = z.lastIndexOf(":"),
                    N === -1 ? k += D(z, !1, !1) : (k += D(z.substr(0, N), !1, !1),
                    k += ":",
                    k += D(z.substr(N + 1), !1, !0)),
                    k += "@"
                }
                A = A.toLowerCase(),
                N = A.lastIndexOf(":"),
                N === -1 ? k += D(A, !1, !0) : (k += D(A.substr(0, N), !1, !0),
                k += A.substr(N))
            }
            if (M) {
                if (M.length >= 3 && M.charCodeAt(0) === t.CharCode.Slash && M.charCodeAt(2) === t.CharCode.Colon) {
                    const N = M.charCodeAt(1);
                    N >= t.CharCode.A && N <= t.CharCode.Z && (M = `/${String.fromCharCode(N + 32)}:${M.substr(3)}`)
                } else if (M.length >= 2 && M.charCodeAt(1) === t.CharCode.Colon) {
                    const N = M.charCodeAt(0);
                    N >= t.CharCode.A && N <= t.CharCode.Z && (M = `${String.fromCharCode(N + 32)}:${M.substr(2)}`)
                }
                k += D(M, !0, !1)
            }
            return O && (k += "?",
            k += D(O, !1, !1)),
            R && (k += "#",
            k += T ? R : s(R, !1, !1)),
            k
        }
        function b(S) {
            try {
                return decodeURIComponent(S)
            } catch {
                return S.length > 3 ? S.substr(0, 3) + b(S.substr(3)) : S
            }
        }
        const m = /(%[0-9A-Za-z][0-9A-Za-z])+/g;
        function w(S) {
            return S.match(m) ? S.replace(m, T=>b(T)) : S
        }
    }),
    define(ge[940], be([1, 0, 9]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$dr = n,
        e.$er = C,
        e.$fr = I,
        e.log = y;
        function n($) {
            const v = $;
            return v && typeof v.type == "string" && typeof v.severity == "string"
        }
        function C($) {
            const v = [];
            let f;
            try {
                const g = JSON.parse($.arguments)
                  , p = g[g.length - 1];
                p && p.__$stack && (g.pop(),
                f = p.__$stack),
                v.push(...g)
            } catch {
                v.push("Unable to log remote console arguments", $.arguments)
            }
            return {
                args: v,
                stack: f
            }
        }
        function I($) {
            if (typeof $ != "string")
                return I(C($).stack);
            const v = $;
            if (v) {
                const f = L(v)
                  , g = /at [^\/]*((?:(?:[a-zA-Z]+:)|(?:[\/])|(?:\\\\))(?:.+)):(\d+):(\d+)/.exec(f || "");
                if (g && g.length === 4)
                    return {
                        uri: t.URI.file(g[1]),
                        line: Number(g[2]),
                        column: Number(g[3])
                    }
            }
        }
        function L($) {
            if (!$)
                return $;
            const v = $.indexOf(`
`);
            return v === -1 ? $ : $.substring(0, v)
        }
        function y($, v) {
            const {args: f, stack: g} = C($)
              , p = typeof f[0] == "string" && f.length === 1;
            let i = L(g);
            i && (i = `(${i.trim()})`);
            let c = [];
            if (typeof f[0] == "string" ? i && p ? c = [`%c[${v}] %c${f[0]} %c${i}`, E("blue"), E(""), E("grey")] : c = [`%c[${v}] %c${f[0]}`, E("blue"), E(""), ...f.slice(1)] : c = [`%c[${v}]%`, E("blue"), ...f],
            i && !p && c.push(i),
            typeof console[$.severity] != "function")
                throw new Error("Unknown console method");
            console[$.severity].apply(console, c)
        }
        function E($) {
            return `color: ${$}`
        }
    }),
    define(ge[156], be([1, 0, 70, 9, 174]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ai = I,
        e.$bi = L,
        e.$ci = E;
        function I($) {
            return JSON.stringify($, y)
        }
        function L($) {
            let v = JSON.parse($);
            return v = E(v),
            v
        }
        function y($, v) {
            return v instanceof RegExp ? {
                $mid: C.MarshalledId.Regexp,
                source: v.source,
                flags: v.flags
            } : v
        }
        function E($, v=0) {
            if (!$ || v > 200)
                return $;
            if (typeof $ == "object") {
                switch ($.$mid) {
                case C.MarshalledId.Uri:
                    return n.URI.revive($);
                case C.MarshalledId.Regexp:
                    return new RegExp($.source,$.flags);
                case C.MarshalledId.Date:
                    return new Date($.source)
                }
                if ($ instanceof t.$Ne || $ instanceof Uint8Array)
                    return $;
                if (Array.isArray($))
                    for (let f = 0; f < $.length; ++f)
                        $[f] = E($[f], v + 1);
                else
                    for (const f in $)
                        Object.hasOwnProperty.call($, f) && ($[f] = E($[f], v + 1))
            }
            return $
        }
    }),
    define(ge[19], be([1, 0, 14, 12, 31, 9, 67]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.COI = e.$Zg = e.$Yg = e.$Xg = e.$Wg = e.$Vg = e.$Ug = e.$Sg = e.$Rg = e.$Qg = e.Schemas = void 0,
        e.$Og = E,
        e.$Pg = $,
        e.$Tg = f,
        t = xe(t),
        n = xe(n),
        L = xe(L);
        var y;
        (function(i) {
            i.inMemory = "inmemory",
            i.vscode = "vscode",
            i.internal = "private",
            i.walkThrough = "walkThrough",
            i.walkThroughSnippet = "walkThroughSnippet",
            i.http = "http",
            i.https = "https",
            i.file = "file",
            i.mailto = "mailto",
            i.untitled = "untitled",
            i.data = "data",
            i.command = "command",
            i.vscodeRemote = "vscode-remote",
            i.vscodeRemoteResource = "vscode-remote-resource",
            i.vscodeManagedRemoteResource = "vscode-managed-remote-resource",
            i.vscodeUserData = "vscode-userdata",
            i.vscodeCustomEditor = "vscode-custom-editor",
            i.vscodeNotebookCell = "vscode-notebook-cell",
            i.vscodeNotebookCellMetadata = "vscode-notebook-cell-metadata",
            i.vscodeNotebookCellOutput = "vscode-notebook-cell-output",
            i.vscodeInteractiveInput = "vscode-interactive-input",
            i.vscodeSettings = "vscode-settings",
            i.vscodeWorkspaceTrust = "vscode-workspace-trust",
            i.vscodeTerminal = "vscode-terminal",
            i.vscodeChatCodeBlock = "vscode-chat-code-block",
            i.vscodeCopilotBackingChatCodeBlock = "vscode-copilot-chat-code-block",
            i.vscodeChatCodeCompareBlock = "vscode-chat-code-compare-block",
            i.vscodeChatSesssion = "vscode-chat-editor",
            i.webviewPanel = "webview-panel",
            i.vscodeWebview = "vscode-webview",
            i.extension = "extension",
            i.vscodeFileResource = "vscode-file",
            i.tmp = "tmp",
            i.vsls = "vsls",
            i.vscodeSourceControl = "vscode-scm",
            i.commentsInput = "comment",
            i.codeSetting = "code-setting"
        }
        )(y || (e.Schemas = y = {}));
        function E(i, c) {
            return I.URI.isUri(i) ? (0,
            C.$Ff)(i.scheme, c) : (0,
            C.$Gf)(i, c + ":")
        }
        function $(i, ...c) {
            return c.some(h=>E(i, h))
        }
        e.$Qg = "vscode-tkn",
        e.$Rg = "tkn";
        class v {
            constructor() {
                this.a = Object.create(null),
                this.b = Object.create(null),
                this.c = Object.create(null),
                this.d = "http",
                this.e = null,
                this.f = "/"
            }
            setPreferredWebSchema(c) {
                this.d = c
            }
            setDelegate(c) {
                this.e = c
            }
            setServerRootPath(c, h) {
                this.f = f(c, h)
            }
            getServerRootPath() {
                return this.f
            }
            get g() {
                return L.$gc.join(this.f, y.vscodeRemoteResource)
            }
            set(c, h, a) {
                this.a[c] = h,
                this.b[c] = a
            }
            setConnectionToken(c, h) {
                this.c[c] = h
            }
            getPreferredWebSchema() {
                return this.d
            }
            rewrite(c) {
                if (this.e)
                    try {
                        return this.e(c)
                    } catch (r) {
                        return t.$Y(r),
                        c
                    }
                const h = c.authority;
                let a = this.a[h];
                a && a.indexOf(":") !== -1 && a.indexOf("[") === -1 && (a = `[${a}]`);
                const d = this.b[h]
                  , u = this.c[h];
                let s = `path=${encodeURIComponent(c.path)}`;
                return typeof u == "string" && (s += `&${e.$Rg}=${encodeURIComponent(u)}`),
                I.URI.from({
                    scheme: n.$p ? this.d : y.vscodeRemoteResource,
                    authority: `${a}:${d}`,
                    path: this.g,
                    query: s
                })
            }
        }
        e.$Sg = new v;
        function f(i, c) {
            return L.$gc.join(c ?? "/", `${i.quality ?? "oss"}-${i.commit ?? "dev"}`)
        }
        e.$Ug = "vs/../../extensions",
        e.$Vg = "vs/../../node_modules",
        e.$Wg = "vs/../../node_modules.asar",
        e.$Xg = "vs/../../node_modules.asar.unpacked",
        e.$Yg = "vscode-app";
        class g {
            static{this.a = e.$Yg
            }asBrowserUri(c) {
                const h = this.b(c, ce);
                return this.uriToBrowserUri(h)
            }
            uriToBrowserUri(c) {
                return c.scheme === y.vscodeRemote ? e.$Sg.rewrite(c) : c.scheme === y.file && (n.$n || n.$r === `${y.vscodeFileResource}://${g.a}`) ? c.with({
                    scheme: y.vscodeFileResource,
                    authority: c.authority || g.a,
                    query: null,
                    fragment: null
                }) : c
            }
            asFileUri(c) {
                const h = this.b(c, ce);
                return this.uriToFileUri(h)
            }
            uriToFileUri(c) {
                return c.scheme === y.vscodeFileResource ? c.with({
                    scheme: y.file,
                    authority: c.authority !== g.a ? c.authority : null,
                    query: null,
                    fragment: null
                }) : c
            }
            b(c, h) {
                return I.URI.isUri(c) ? c : I.URI.parse(h.toUrl(c))
            }
        }
        e.$Zg = new g;
        var p;
        (function(i) {
            const c = new Map([["1", {
                "Cross-Origin-Opener-Policy": "same-origin"
            }], ["2", {
                "Cross-Origin-Embedder-Policy": "require-corp"
            }], ["3", {
                "Cross-Origin-Opener-Policy": "same-origin",
                "Cross-Origin-Embedder-Policy": "require-corp"
            }]]);
            i.CoopAndCoep = Object.freeze(c.get("3"));
            const h = "vscode-coi";
            function a(u) {
                let s;
                typeof u == "string" ? s = new URL(u).searchParams : u instanceof URL ? s = u.searchParams : I.URI.isUri(u) && (s = new URL(u.toString(!0)).searchParams);
                const r = s?.get(h);
                if (r)
                    return c.get(r)
            }
            i.getHeadersFromQuery = a;
            function d(u, s, r) {
                if (!globalThis.crossOriginIsolated)
                    return;
                const l = s && r ? "3" : r ? "2" : "1";
                u instanceof URLSearchParams ? u.set(h, l) : u[h] = l
            }
            i.addSearchParam = d
        }
        )(p || (e.COI = p = {}))
    }),
    define(ge[423], be([1, 0, 931, 19, 12, 18, 9]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$CE = f,
        e.$DE = g,
        C = xe(C);
        class y {
            constructor(i, c, h) {
                this.id = i,
                this.dependencies = c,
                this.callback = h
            }
        }
        class E {
            static{this.INSTANCE = new E
            }constructor() {
                this.a = typeof self == "object" && self.constructor && self.constructor.name === "DedicatedWorkerGlobalScope",
                this.b = typeof document == "object",
                this.c = [],
                this.d = !1
            }
            g() {
                this.d || (this.d = !0,
                globalThis.define = (i,c,h)=>{
                    typeof i != "string" && (h = c,
                    c = i,
                    i = null),
                    (typeof c != "object" || !Array.isArray(c)) && (h = c,
                    c = null),
                    this.c.push(new y(i,c,h))
                }
                ,
                globalThis.define.amd = !0,
                this.b ? this.f = window.trustedTypes?.createPolicy("amdLoader", {
                    createScriptURL(i) {
                        if (i.startsWith(window.location.origin) || i.startsWith("vscode-file://vscode-app"))
                            return i;
                        throw new Error(`[trusted_script_src] Invalid script url: ${i}`)
                    }
                }) : this.a && (this.f = globalThis.trustedTypes?.createPolicy("amdLoader", {
                    createScriptURL(i) {
                        return i
                    }
                })))
            }
            async load(i) {
                this.g();
                const c = await (this.a ? this.i(i) : this.b ? this.h(i) : this.j(i));
                if (!c)
                    throw new Error(`Did not receive a define call from script ${i}`);
                if (Array.isArray(c.dependencies) && c.dependencies.length > 0)
                    throw new Error(`Cannot resolve dependencies for script ${i}. The dependencies are: ${c.dependencies.join(", ")}`);
                return typeof c.callback == "function" ? c.callback([]) : c.callback
            }
            h(i) {
                return new Promise((c,h)=>{
                    const a = document.createElement("script");
                    a.setAttribute("async", "async"),
                    a.setAttribute("type", "text/javascript");
                    const d = ()=>{
                        a.removeEventListener("load", u),
                        a.removeEventListener("error", s)
                    }
                      , u = r=>{
                        d(),
                        c(this.c.pop())
                    }
                      , s = r=>{
                        d(),
                        h(r)
                    }
                    ;
                    a.addEventListener("load", u),
                    a.addEventListener("error", s),
                    this.f && (i = this.f.createScriptURL(i)),
                    a.setAttribute("src", i),
                    window.document.getElementsByTagName("head")[0].appendChild(a)
                }
                )
            }
            i(i) {
                return new Promise((c,h)=>{
                    try {
                        this.f && (i = this.f.createScriptURL(i)),
                        importScripts(i),
                        c(this.c.pop())
                    } catch (a) {
                        h(a)
                    }
                }
                )
            }
            async j(i) {
                try {
                    const c = globalThis._VSCODE_NODE_MODULES.fs
                      , h = globalThis._VSCODE_NODE_MODULES.vm
                      , a = globalThis._VSCODE_NODE_MODULES.module
                      , d = L.URI.parse(i).fsPath
                      , u = c.readFileSync(d).toString()
                      , s = a.wrap(u.replace(/^#!.*/, ""));
                    return new h.Script(s).runInThisContext().apply(),
                    this.c.pop()
                } catch (c) {
                    throw c
                }
            }
        }
        const $ = new Map;
        let v = {};
        typeof globalThis.require == "object" && (v = globalThis.require.paths ?? {});
        async function f(p, i, c) {
            if (t.$R) {
                c === void 0 && (c = !!(globalThis._VSCODE_PRODUCT_JSON ?? globalThis.vscode?.context?.configuration()?.product)?.commit),
                v[p] && (p = v[p]);
                const h = i ? `${p}/${i}` : p;
                if ($.has(h))
                    return $.get(h);
                let a;
                if (/^\w[\w\d+.-]*:\/\//.test(h))
                    a = h;
                else {
                    const r = `${c && !C.$p ? n.$Wg : n.$Vg}/${h}`;
                    a = n.$Zg.asBrowserUri(r).toString(!0)
                }
                const d = E.INSTANCE.load(a);
                return $.set(h, d),
                d
            } else
                return await new Promise((h,a)=>{
                    ce([p], h, a)
                }
                ).then(xe)
        }
        function g(p, i) {
            (0,
            I.$og)(t.$R);
            const a = !!(globalThis._VSCODE_PRODUCT_JSON ?? globalThis.vscode?.context?.configuration()?.product)?.commit && !C.$p
              , d = `${p}/${i}`
              , s = `${a ? n.$Wg : n.$Vg}/${d}`;
            return n.$Zg.asBrowserUri(s).toString(!0)
        }
    }),
    define(ge[23], be([1, 0, 105, 208, 19, 67, 12, 31, 9]), function(ce, e, t, n, C, I, L, y, E) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.DataUri = e.$oh = e.$nh = e.$mh = e.$lh = e.$kh = e.$jh = e.$ih = e.$hh = e.$gh = e.$fh = e.$eh = e.$dh = e.$ch = e.$bh = e.$ah = e.$_g = e.$$g = e.$0g = e.$9g = e.$8g = void 0,
        e.$7g = $,
        e.$ph = f,
        e.$qh = p,
        n = xe(n),
        I = xe(I);
        function $(i) {
            return (0,
            E.$wc)(i, !0)
        }
        class v {
            constructor(c) {
                this.a = c
            }
            compare(c, h, a=!1) {
                return c === h ? 0 : (0,
                y.$yf)(this.getComparisonKey(c, a), this.getComparisonKey(h, a))
            }
            isEqual(c, h, a=!1) {
                return c === h ? !0 : !c || !h ? !1 : this.getComparisonKey(c, a) === this.getComparisonKey(h, a)
            }
            getComparisonKey(c, h=!1) {
                return c.with({
                    path: this.a(c) ? c.path.toLowerCase() : void 0,
                    fragment: h ? null : void 0
                }).toString()
            }
            ignorePathCasing(c) {
                return this.a(c)
            }
            isEqualOrParent(c, h, a=!1) {
                if (c.scheme === h.scheme) {
                    if (c.scheme === C.Schemas.file)
                        return n.$Eg($(c), $(h), this.a(c)) && c.query === h.query && (a || c.fragment === h.fragment);
                    if ((0,
                    e.$lh)(c.authority, h.authority))
                        return n.$Eg(c.path, h.path, this.a(c), "/") && c.query === h.query && (a || c.fragment === h.fragment)
                }
                return !1
            }
            joinPath(c, ...h) {
                return E.URI.joinPath(c, ...h)
            }
            basenameOrAuthority(c) {
                return (0,
                e.$dh)(c) || c.authority
            }
            basename(c) {
                return I.$gc.basename(c.path)
            }
            extname(c) {
                return I.$gc.extname(c.path)
            }
            dirname(c) {
                if (c.path.length === 0)
                    return c;
                let h;
                return c.scheme === C.Schemas.file ? h = E.URI.file(I.$mc($(c))).path : (h = I.$gc.dirname(c.path),
                c.authority && h.length && h.charCodeAt(0) !== t.CharCode.Slash && (console.error(`dirname("${c.toString})) resulted in a relative path`),
                h = "/")),
                c.with({
                    path: h
                })
            }
            normalizePath(c) {
                if (!c.path.length)
                    return c;
                let h;
                return c.scheme === C.Schemas.file ? h = E.URI.file(I.$hc($(c))).path : h = I.$gc.normalize(c.path),
                c.with({
                    path: h
                })
            }
            relativePath(c, h) {
                if (c.scheme !== h.scheme || !(0,
                e.$lh)(c.authority, h.authority))
                    return;
                if (c.scheme === C.Schemas.file) {
                    const u = I.$lc($(c), $(h));
                    return L.$j ? n.$yg(u) : u
                }
                let a = c.path || "/";
                const d = h.path || "/";
                if (this.a(c)) {
                    let u = 0;
                    for (const s = Math.min(a.length, d.length); u < s && !(a.charCodeAt(u) !== d.charCodeAt(u) && a.charAt(u).toLowerCase() !== d.charAt(u).toLowerCase()); u++)
                        ;
                    a = d.substr(0, u) + a.substr(u)
                }
                return I.$gc.relative(a, d)
            }
            resolvePath(c, h) {
                if (c.scheme === C.Schemas.file) {
                    const a = E.URI.file(I.$kc($(c), h));
                    return c.with({
                        authority: a.authority,
                        path: a.path
                    })
                }
                return h = n.$zg(h),
                c.with({
                    path: I.$gc.resolve(c.path, h)
                })
            }
            isAbsolutePath(c) {
                return !!c.path && c.path[0] === "/"
            }
            isEqualAuthority(c, h) {
                return c === h || c !== void 0 && h !== void 0 && (0,
                y.$Ff)(c, h)
            }
            hasTrailingPathSeparator(c, h=I.sep) {
                if (c.scheme === C.Schemas.file) {
                    const a = $(c);
                    return a.length > n.$Ag(a).length && a[a.length - 1] === h
                } else {
                    const a = c.path;
                    return a.length > 1 && a.charCodeAt(a.length - 1) === t.CharCode.Slash && !/^[a-zA-Z]:(\/$|\\$)/.test(c.fsPath)
                }
            }
            removeTrailingPathSeparator(c, h=I.sep) {
                return (0,
                e.$mh)(c, h) ? c.with({
                    path: c.path.substr(0, c.path.length - 1)
                }) : c
            }
            addTrailingPathSeparator(c, h=I.sep) {
                let a = !1;
                if (c.scheme === C.Schemas.file) {
                    const d = $(c);
                    a = d !== void 0 && d.length === n.$Ag(d).length && d[d.length - 1] === h
                } else {
                    h = "/";
                    const d = c.path;
                    a = d.length === 1 && d.charCodeAt(d.length - 1) === t.CharCode.Slash
                }
                return !a && !(0,
                e.$mh)(c, h) ? c.with({
                    path: c.path + "/"
                }) : c
            }
        }
        e.$8g = v,
        e.$9g = new v(()=>!1),
        e.$0g = new v(i=>i.scheme === C.Schemas.file ? !L.$l : !0),
        e.$$g = new v(i=>!0),
        e.$_g = e.$9g.isEqual.bind(e.$9g),
        e.$ah = e.$9g.isEqualOrParent.bind(e.$9g),
        e.$bh = e.$9g.getComparisonKey.bind(e.$9g),
        e.$ch = e.$9g.basenameOrAuthority.bind(e.$9g),
        e.$dh = e.$9g.basename.bind(e.$9g),
        e.$eh = e.$9g.extname.bind(e.$9g),
        e.$fh = e.$9g.dirname.bind(e.$9g),
        e.$gh = e.$9g.joinPath.bind(e.$9g),
        e.$hh = e.$9g.normalizePath.bind(e.$9g),
        e.$ih = e.$9g.relativePath.bind(e.$9g),
        e.$jh = e.$9g.resolvePath.bind(e.$9g),
        e.$kh = e.$9g.isAbsolutePath.bind(e.$9g),
        e.$lh = e.$9g.isEqualAuthority.bind(e.$9g),
        e.$mh = e.$9g.hasTrailingPathSeparator.bind(e.$9g),
        e.$nh = e.$9g.removeTrailingPathSeparator.bind(e.$9g),
        e.$oh = e.$9g.addTrailingPathSeparator.bind(e.$9g);
        function f(i, c) {
            const h = [];
            for (let a = 0; a < i.length; a++) {
                const d = c(i[a]);
                i.some((u,s)=>s === a ? !1 : (0,
                e.$ah)(d, c(u))) || h.push(i[a])
            }
            return h
        }
        var g;
        (function(i) {
            i.META_DATA_LABEL = "label",
            i.META_DATA_DESCRIPTION = "description",
            i.META_DATA_SIZE = "size",
            i.META_DATA_MIME = "mime";
            function c(h) {
                const a = new Map;
                h.path.substring(h.path.indexOf(";") + 1, h.path.lastIndexOf(";")).split(";").forEach(s=>{
                    const [r,l] = s.split(":");
                    r && l && a.set(r, l)
                }
                );
                const u = h.path.substring(0, h.path.indexOf(";"));
                return u && a.set(i.META_DATA_MIME, u),
                a
            }
            i.parseMetaData = c
        }
        )(g || (e.DataUri = g = {}));
        function p(i, c, h) {
            if (c) {
                let a = i.path;
                return a && a[0] !== I.$gc.sep && (a = I.$gc.sep + a),
                i.with({
                    scheme: h,
                    authority: c,
                    path: a
                })
            }
            return i.with({
                scheme: h
            })
        }
    }),
    define(ge[11], be([1, 0, 29, 14, 5, 2, 23, 12, 461, 147]), function(ce, e, t, n, C, I, L, y, E, $) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$9h = e.$7h = e.$6h = e.$5h = e.$4h = e.Promises = e.$3h = e.$2h = e.$1h = e.$Yh = e.$Xh = e.$Wh = e.$Vh = e.$Uh = e.$Th = e.$Sh = e.$Rh = e.$Qh = e.$Ph = e.$Oh = e.$Nh = e.$Mh = e.$Lh = e.$Fh = e.$Eh = e.$Dh = e.$Ch = e.$Bh = e.$Ah = e.$zh = void 0,
        e.$rh = v,
        e.$sh = f,
        e.$th = g,
        e.$uh = p,
        e.$vh = i,
        e.$wh = c,
        e.$xh = h,
        e.$yh = a,
        e.$Gh = S,
        e.$Hh = T,
        e.$Ih = D,
        e.$Jh = k,
        e.$Kh = P,
        e.$Zh = U,
        e.$8h = se;
        function v(J) {
            return !!J && typeof J.then == "function"
        }
        function f(J) {
            const te = new t.$we
              , ne = J(te.token)
              , le = new Promise((ie,oe)=>{
                const fe = te.token.onCancellationRequested(()=>{
                    fe.dispose(),
                    oe(new n.$4)
                }
                );
                Promise.resolve(ne).then(he=>{
                    fe.dispose(),
                    te.dispose(),
                    ie(he)
                }
                , he=>{
                    fe.dispose(),
                    te.dispose(),
                    oe(he)
                }
                )
            }
            );
            return new class {
                cancel() {
                    te.cancel(),
                    te.dispose()
                }
                then(ie, oe) {
                    return le.then(ie, oe)
                }
                catch(ie) {
                    return this.then(void 0, ie)
                }
                finally(ie) {
                    return le.finally(ie)
                }
            }
        }
        function g(J, te, ne) {
            return new Promise((le,ie)=>{
                const oe = te.onCancellationRequested(()=>{
                    oe.dispose(),
                    le(ne)
                }
                );
                J.then(le, ie).finally(()=>oe.dispose())
            }
            )
        }
        function p(J, te) {
            return new Promise((ne,le)=>{
                const ie = te.onCancellationRequested(()=>{
                    ie.dispose(),
                    le(new n.$4)
                }
                );
                J.then(ne, le).finally(()=>ie.dispose())
            }
            )
        }
        async function i(J) {
            let te = -1;
            const ne = J.map((le,ie)=>le.then(oe=>(te = ie,
            oe)));
            try {
                return await Promise.race(ne)
            } finally {
                J.forEach((le,ie)=>{
                    ie !== te && le.cancel()
                }
                )
            }
        }
        function c(J, te, ne) {
            let le;
            const ie = setTimeout(()=>{
                le?.(void 0),
                ne?.()
            }
            , te);
            return Promise.race([J.finally(()=>clearTimeout(ie)), new Promise(oe=>le = oe)])
        }
        function h(J) {
            return new Promise((te,ne)=>{
                const le = J();
                v(le) ? le.then(te, ne) : te(le)
            }
            )
        }
        function a() {
            let J, te;
            return {
                promise: new Promise((le,ie)=>{
                    J = le,
                    te = ie
                }
                ),
                resolve: J,
                reject: te
            }
        }
        class d {
            constructor() {
                this.f = !1,
                this.a = null,
                this.b = null,
                this.d = null
            }
            queue(te) {
                if (this.f)
                    return Promise.reject(new Error("Throttler is disposed"));
                if (this.a) {
                    if (this.d = te,
                    !this.b) {
                        const ne = ()=>{
                            if (this.b = null,
                            this.f)
                                return;
                            const le = this.queue(this.d);
                            return this.d = null,
                            le
                        }
                        ;
                        this.b = new Promise(le=>{
                            this.a.then(ne, ne).then(le)
                        }
                        )
                    }
                    return new Promise((ne,le)=>{
                        this.b.then(ne, le)
                    }
                    )
                }
                return this.a = te(),
                new Promise((ne,le)=>{
                    this.a.then(ie=>{
                        this.a = null,
                        ne(ie)
                    }
                    , ie=>{
                        this.a = null,
                        le(ie)
                    }
                    )
                }
                )
            }
            dispose() {
                this.f = !0
            }
        }
        e.$zh = d;
        class u {
            constructor() {
                this.a = Promise.resolve(null)
            }
            queue(te) {
                return this.a = this.a.then(()=>te(), ()=>te())
            }
        }
        e.$Ah = u;
        class s {
            constructor() {
                this.a = new Map
            }
            queue(te, ne) {
                const ie = (this.a.get(te) ?? Promise.resolve()).catch(()=>{}
                ).then(ne).finally(()=>{
                    this.a.get(te) === ie && this.a.delete(te)
                }
                );
                return this.a.set(te, ie),
                ie
            }
        }
        e.$Bh = s;
        const r = (J,te)=>{
            let ne = !0;
            const le = setTimeout(()=>{
                ne = !1,
                te()
            }
            , J);
            return {
                isTriggered: ()=>ne,
                dispose: ()=>{
                    clearTimeout(le),
                    ne = !1
                }
            }
        }
          , l = J=>{
            let te = !0;
            return queueMicrotask(()=>{
                te && (te = !1,
                J())
            }
            ),
            {
                isTriggered: ()=>te,
                dispose: ()=>{
                    te = !1
                }
            }
        }
        ;
        class o {
            constructor(te) {
                this.defaultDelay = te,
                this.a = null,
                this.b = null,
                this.d = null,
                this.f = null,
                this.g = null
            }
            trigger(te, ne=this.defaultDelay) {
                this.g = te,
                this.h(),
                this.b || (this.b = new Promise((ie,oe)=>{
                    this.d = ie,
                    this.f = oe
                }
                ).then(()=>{
                    if (this.b = null,
                    this.d = null,
                    this.g) {
                        const ie = this.g;
                        return this.g = null,
                        ie()
                    }
                }
                ));
                const le = ()=>{
                    this.a = null,
                    this.d?.(null)
                }
                ;
                return this.a = ne === E.$ge ? l(le) : r(ne, le),
                this.b
            }
            isTriggered() {
                return !!this.a?.isTriggered()
            }
            cancel() {
                this.h(),
                this.b && (this.f?.(new n.$4),
                this.b = null)
            }
            h() {
                this.a?.dispose(),
                this.a = null
            }
            dispose() {
                this.cancel()
            }
        }
        e.$Ch = o;
        class b {
            constructor(te) {
                this.a = new o(te),
                this.b = new d
            }
            trigger(te, ne) {
                return this.a.trigger(()=>this.b.queue(te), ne)
            }
            isTriggered() {
                return this.a.isTriggered()
            }
            cancel() {
                this.a.cancel()
            }
            dispose() {
                this.a.dispose(),
                this.b.dispose()
            }
        }
        e.$Dh = b;
        class m {
            constructor() {
                this.a = !1,
                this.b = new Promise((te,ne)=>{
                    this.d = te
                }
                )
            }
            isOpen() {
                return this.a
            }
            open() {
                this.a = !0,
                this.d(!0)
            }
            wait() {
                return this.b
            }
        }
        e.$Eh = m;
        class w extends m {
            constructor(te) {
                super(),
                this.f = setTimeout(()=>this.open(), te)
            }
            open() {
                clearTimeout(this.f),
                super.open()
            }
        }
        e.$Fh = w;
        function S(J, te) {
            return te ? new Promise((ne,le)=>{
                const ie = setTimeout(()=>{
                    oe.dispose(),
                    ne()
                }
                , J)
                  , oe = te.onCancellationRequested(()=>{
                    clearTimeout(ie),
                    oe.dispose(),
                    le(new n.$4)
                }
                )
            }
            ) : f(ne=>S(J, ne))
        }
        function T(J, te=0, ne) {
            const le = setTimeout(()=>{
                J(),
                ne && ie.dispose()
            }
            , te)
              , ie = (0,
            I.$Sc)(()=>{
                clearTimeout(le),
                ne?.deleteAndLeak(ie)
            }
            );
            return ne?.add(ie),
            ie
        }
        function D(J) {
            const te = [];
            let ne = 0;
            const le = J.length;
            function ie() {
                return ne < le ? J[ne++]() : null
            }
            function oe(fe) {
                fe != null && te.push(fe);
                const he = ie();
                return he ? he.then(oe) : Promise.resolve(te)
            }
            return Promise.resolve(null).then(oe)
        }
        function k(J, te=le=>!!le, ne=null) {
            let le = 0;
            const ie = J.length
              , oe = ()=>{
                if (le >= ie)
                    return Promise.resolve(ne);
                const fe = J[le++];
                return Promise.resolve(fe()).then(ue=>te(ue) ? Promise.resolve(ue) : oe())
            }
            ;
            return oe()
        }
        function P(J, te=le=>!!le, ne=null) {
            if (J.length === 0)
                return Promise.resolve(ne);
            let le = J.length;
            const ie = ()=>{
                le = -1;
                for (const oe of J)
                    oe.cancel?.()
            }
            ;
            return new Promise((oe,fe)=>{
                for (const he of J)
                    he.then(ue=>{
                        --le >= 0 && te(ue) ? (ie(),
                        oe(ue)) : le === 0 && oe(ne)
                    }
                    ).catch(ue=>{
                        --le >= 0 && (ie(),
                        fe(ue))
                    }
                    )
            }
            )
        }
        class A {
            constructor(te) {
                this.a = 0,
                this.b = !1,
                this.f = te,
                this.g = [],
                this.d = 0,
                this.h = new C.$le
            }
            whenIdle() {
                return this.size > 0 ? C.Event.toPromise(this.onDrained) : Promise.resolve()
            }
            get onDrained() {
                return this.h.event
            }
            get size() {
                return this.a
            }
            queue(te) {
                if (this.b)
                    throw new Error("Object has been disposed");
                return this.a++,
                new Promise((ne,le)=>{
                    this.g.push({
                        factory: te,
                        c: ne,
                        e: le
                    }),
                    this.j()
                }
                )
            }
            j() {
                for (; this.g.length && this.d < this.f; ) {
                    const te = this.g.shift();
                    this.d++;
                    const ne = te.factory();
                    ne.then(te.c, te.e),
                    ne.then(()=>this.k(), ()=>this.k())
                }
            }
            k() {
                this.b || (this.d--,
                --this.a === 0 && this.h.fire(),
                this.g.length > 0 && this.j())
            }
            clear() {
                if (this.b)
                    throw new Error("Object has been disposed");
                this.g.length = 0,
                this.a = this.d
            }
            dispose() {
                this.b = !0,
                this.g.length = 0,
                this.a = 0,
                this.h.dispose()
            }
        }
        e.$Lh = A;
        class M extends A {
            constructor() {
                super(1)
            }
        }
        e.$Mh = M;
        class O {
            constructor() {
                this.a = new K,
                this.b = 0
            }
            queue(te) {
                return this.a.isRunning() ? this.a.queue(()=>this.a.run(this.b++, te())) : this.a.run(this.b++, te())
            }
        }
        e.$Nh = O;
        class R {
            constructor() {
                this.a = new Map,
                this.b = new Set,
                this.d = void 0,
                this.f = 0
            }
            async whenDrained() {
                if (this.g())
                    return;
                const te = new x;
                return this.b.add(te),
                te.p
            }
            g() {
                for (const [,te] of this.a)
                    if (te.size > 0)
                        return !1;
                return !0
            }
            queueSize(te, ne=L.$9g) {
                const le = ne.getComparisonKey(te);
                return this.a.get(le)?.size ?? 0
            }
            queueFor(te, ne, le=L.$9g) {
                const ie = le.getComparisonKey(te);
                let oe = this.a.get(ie);
                if (!oe) {
                    oe = new M;
                    const fe = this.f++
                      , he = C.Event.once(oe.onDrained)(()=>{
                        oe?.dispose(),
                        this.a.delete(ie),
                        this.h(),
                        this.d?.deleteAndDispose(fe),
                        this.d?.size === 0 && (this.d.dispose(),
                        this.d = void 0)
                    }
                    );
                    this.d || (this.d = new I.$4c),
                    this.d.set(fe, he),
                    this.a.set(ie, oe)
                }
                return oe.queue(ne)
            }
            h() {
                this.g() && this.j()
            }
            j() {
                for (const te of this.b)
                    te.complete();
                this.b.clear()
            }
            dispose() {
                for (const [,te] of this.a)
                    te.dispose();
                this.a.clear(),
                this.j(),
                this.d?.dispose()
            }
        }
        e.$Oh = R;
        class N {
            constructor(te, ne) {
                this.b = !1,
                this.a = -1,
                typeof te == "function" && typeof ne == "number" && this.setIfNotSet(te, ne)
            }
            dispose() {
                this.cancel(),
                this.b = !0
            }
            cancel() {
                this.a !== -1 && (clearTimeout(this.a),
                this.a = -1)
            }
            cancelAndSet(te, ne) {
                if (this.b)
                    throw new n.$bb("Calling 'cancelAndSet' on a disposed TimeoutTimer");
                this.cancel(),
                this.a = setTimeout(()=>{
                    this.a = -1,
                    te()
                }
                , ne)
            }
            setIfNotSet(te, ne) {
                if (this.b)
                    throw new n.$bb("Calling 'setIfNotSet' on a disposed TimeoutTimer");
                this.a === -1 && (this.a = setTimeout(()=>{
                    this.a = -1,
                    te()
                }
                , ne))
            }
        }
        e.$Ph = N;
        class z {
            constructor() {
                this.d = void 0,
                this.f = !1
            }
            cancel() {
                this.d?.dispose(),
                this.d = void 0
            }
            cancelAndSet(te, ne, le=globalThis) {
                if (this.f)
                    throw new n.$bb("Calling 'cancelAndSet' on a disposed IntervalTimer");
                this.cancel();
                const ie = le.setInterval(()=>{
                    te()
                }
                , ne);
                this.d = (0,
                I.$Sc)(()=>{
                    le.clearInterval(ie),
                    this.d = void 0
                }
                )
            }
            dispose() {
                this.cancel(),
                this.f = !0
            }
        }
        e.$Qh = z;
        class V {
            constructor(te, ne) {
                this.b = -1,
                this.a = te,
                this.d = ne,
                this.f = this.g.bind(this)
            }
            dispose() {
                this.cancel(),
                this.a = null
            }
            cancel() {
                this.isScheduled() && (clearTimeout(this.b),
                this.b = -1)
            }
            schedule(te=this.d) {
                this.cancel(),
                this.b = setTimeout(this.f, te)
            }
            get delay() {
                return this.d
            }
            set delay(te) {
                this.d = te
            }
            isScheduled() {
                return this.b !== -1
            }
            flush() {
                this.isScheduled() && (this.cancel(),
                this.h())
            }
            g() {
                this.b = -1,
                this.a && this.h()
            }
            h() {
                this.a?.()
            }
        }
        e.$Rh = V;
        class B {
            constructor(te, ne) {
                ne % 1e3 !== 0 && console.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${ne}ms is not a multiple of 1000ms.`),
                this.a = te,
                this.b = ne,
                this.d = 0,
                this.f = -1,
                this.g = this.h.bind(this)
            }
            dispose() {
                this.cancel(),
                this.a = null
            }
            cancel() {
                this.isScheduled() && (clearInterval(this.f),
                this.f = -1)
            }
            schedule(te=this.b) {
                te % 1e3 !== 0 && console.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${te}ms is not a multiple of 1000ms.`),
                this.cancel(),
                this.d = Math.ceil(te / 1e3),
                this.f = setInterval(this.g, 1e3)
            }
            isScheduled() {
                return this.f !== -1
            }
            h() {
                this.d--,
                !(this.d > 0) && (clearInterval(this.f),
                this.f = -1,
                this.a?.())
            }
        }
        e.$Sh = B;
        class j extends V {
            constructor(te, ne) {
                super(te, ne),
                this.j = []
            }
            work(te) {
                this.j.push(te),
                this.isScheduled() || this.schedule()
            }
            h() {
                const te = this.j;
                this.j = [],
                this.a?.(te)
            }
            dispose() {
                this.j = [],
                super.dispose()
            }
        }
        e.$Th = j;
        class W extends I.$Uc {
            constructor(te, ne) {
                super(),
                this.g = te,
                this.h = ne,
                this.a = [],
                this.b = this.B(new I.$Vc),
                this.f = !1
            }
            get pending() {
                return this.a.length
            }
            work(te) {
                if (this.f)
                    return !1;
                if (typeof this.g.maxBufferedWork == "number") {
                    if (this.b.value) {
                        if (this.pending + te.length > this.g.maxBufferedWork)
                            return !1
                    } else if (this.pending + te.length - this.g.maxWorkChunkSize > this.g.maxBufferedWork)
                        return !1
                }
                for (const ne of te)
                    this.a.push(ne);
                return this.b.value || this.j(),
                !0
            }
            j() {
                this.h(this.a.splice(0, this.g.maxWorkChunkSize)),
                this.a.length > 0 && (this.b.value = new V(()=>{
                    this.b.clear(),
                    this.j()
                }
                ,this.g.throttleDelay),
                this.b.value.schedule())
            }
            dispose() {
                super.dispose(),
                this.f = !0
            }
        }
        e.$Uh = W,
        function() {
            typeof globalThis.requestIdleCallback != "function" || typeof globalThis.cancelIdleCallback != "function" ? e.$Wh = (J,te)=>{
                (0,
                y.$C)(()=>{
                    if (ne)
                        return;
                    const le = Date.now() + 15;
                    te(Object.freeze({
                        didTimeout: !0,
                        timeRemaining() {
                            return Math.max(0, le - Date.now())
                        }
                    }))
                }
                );
                let ne = !1;
                return {
                    dispose() {
                        ne || (ne = !0)
                    }
                }
            }
            : e.$Wh = (J,te,ne)=>{
                const le = J.requestIdleCallback(te, typeof ne == "number" ? {
                    timeout: ne
                } : void 0);
                let ie = !1;
                return {
                    dispose() {
                        ie || (ie = !0,
                        J.cancelIdleCallback(le))
                    }
                }
            }
            ,
            e.$Vh = J=>(0,
            e.$Wh)(globalThis, J)
        }();
        class q {
            constructor(te, ne) {
                this.g = !1,
                this.d = ()=>{
                    try {
                        this.j = ne()
                    } catch (le) {
                        this.l = le
                    } finally {
                        this.g = !0
                    }
                }
                ,
                this.f = (0,
                e.$Wh)(te, ()=>this.d())
            }
            dispose() {
                this.f.dispose()
            }
            get value() {
                if (this.g || (this.f.dispose(),
                this.d()),
                this.l)
                    throw this.l;
                return this.j
            }
            get isInitialized() {
                return this.g
            }
        }
        e.$Xh = q;
        class H extends q {
            constructor(te) {
                super(globalThis, te)
            }
        }
        e.$Yh = H;
        async function U(J, te, ne) {
            let le;
            for (let ie = 0; ie < ne; ie++)
                try {
                    return await J()
                } catch (oe) {
                    le = oe,
                    await S(te)
                }
            throw le
        }
        class K {
            isRunning(te) {
                return typeof te == "number" ? this.a?.taskId === te : !!this.a
            }
            get running() {
                return this.a?.promise
            }
            cancelRunning() {
                this.a?.cancel()
            }
            run(te, ne, le) {
                return this.a = {
                    taskId: te,
                    cancel: ()=>le?.(),
                    promise: ne
                },
                ne.then(()=>this.d(te), ()=>this.d(te)),
                ne
            }
            d(te) {
                this.a && te === this.a.taskId && (this.a = void 0,
                this.f())
            }
            f() {
                if (this.b) {
                    const te = this.b;
                    this.b = void 0,
                    te.run().then(te.promiseResolve, te.promiseReject)
                }
            }
            queue(te) {
                if (this.b)
                    this.b.run = te;
                else {
                    const {promise: ne, resolve: le, reject: ie} = a();
                    this.b = {
                        run: te,
                        promise: ne,
                        promiseResolve: le,
                        promiseReject: ie
                    }
                }
                return this.b.promise
            }
            hasQueued() {
                return !!this.b
            }
            async join() {
                return this.b?.promise ?? this.a?.promise
            }
        }
        e.$1h = K;
        class G {
            constructor(te, ne=()=>Date.now()) {
                this.d = te,
                this.f = ne,
                this.a = 0,
                this.b = 0
            }
            increment() {
                const te = this.f();
                return te - this.a > this.d && (this.a = te,
                this.b = 0),
                this.b++,
                this.b
            }
        }
        e.$2h = G;
        var Z;
        (function(J) {
            J[J.Resolved = 0] = "Resolved",
            J[J.Rejected = 1] = "Rejected"
        }
        )(Z || (Z = {}));
        class x {
            get isRejected() {
                return this.d?.outcome === Z.Rejected
            }
            get isResolved() {
                return this.d?.outcome === Z.Resolved
            }
            get isSettled() {
                return !!this.d
            }
            get value() {
                return this.d?.outcome === Z.Resolved ? this.d?.value : void 0
            }
            constructor() {
                this.p = new Promise((te,ne)=>{
                    this.a = te,
                    this.b = ne
                }
                )
            }
            complete(te) {
                return new Promise(ne=>{
                    this.a(te),
                    this.d = {
                        outcome: Z.Resolved,
                        value: te
                    },
                    ne()
                }
                )
            }
            error(te) {
                return new Promise(ne=>{
                    this.b(te),
                    this.d = {
                        outcome: Z.Rejected,
                        value: te
                    },
                    ne()
                }
                )
            }
            cancel() {
                return this.error(new n.$4)
            }
        }
        e.$3h = x;
        var X;
        (function(J) {
            async function te(le) {
                let ie;
                const oe = await Promise.all(le.map(fe=>fe.then(he=>he, he=>{
                    ie || (ie = he)
                }
                )));
                if (typeof ie < "u")
                    throw ie;
                return oe
            }
            J.settled = te;
            function ne(le) {
                return new Promise(async(ie,oe)=>{
                    try {
                        await le(ie, oe)
                    } catch (fe) {
                        oe(fe)
                    }
                }
                )
            }
            J.withAsyncBody = ne
        }
        )(X || (e.Promises = X = {}));
        class Y {
            get value() {
                return this.a
            }
            get error() {
                return this.b
            }
            get isResolved() {
                return this.d
            }
            constructor(te) {
                this.a = void 0,
                this.b = void 0,
                this.d = !1,
                this.promise = te.then(ne=>(this.a = ne,
                this.d = !0,
                ne), ne=>{
                    throw this.b = ne,
                    this.d = !0,
                    ne
                }
                )
            }
            requireValue() {
                if (!this.d)
                    throw new n.$bb("Promise is not resolved yet");
                if (this.b)
                    throw this.b;
                return this.a
            }
        }
        e.$4h = Y;
        class Q {
            constructor(te) {
                this.b = te,
                this.a = new $.$T(()=>new Y(this.b()))
            }
            requireValue() {
                return this.a.value.requireValue()
            }
            getPromise() {
                return this.a.value.promise
            }
            get currentValue() {
                return this.a.rawValue?.value
            }
        }
        e.$5h = Q;
        var _;
        (function(J) {
            J[J.Initial = 0] = "Initial",
            J[J.DoneOK = 1] = "DoneOK",
            J[J.DoneError = 2] = "DoneError"
        }
        )(_ || (_ = {}));
        class ae {
            static fromArray(te) {
                return new ae(ne=>{
                    ne.emitMany(te)
                }
                )
            }
            static fromPromise(te) {
                return new ae(async ne=>{
                    ne.emitMany(await te)
                }
                )
            }
            static fromPromises(te) {
                return new ae(async ne=>{
                    await Promise.all(te.map(async le=>ne.emitOne(await le)))
                }
                )
            }
            static merge(te) {
                return new ae(async ne=>{
                    await Promise.all(te.map(async le=>{
                        for await(const ie of le)
                            ne.emitOne(ie)
                    }
                    ))
                }
                )
            }
            static{this.EMPTY = ae.fromArray([])
            }constructor(te, ne) {
                this.a = _.Initial,
                this.b = [],
                this.d = null,
                this.f = ne,
                this.g = new C.$le,
                queueMicrotask(async()=>{
                    const le = {
                        emitOne: ie=>this.h(ie),
                        emitMany: ie=>this.j(ie),
                        reject: ie=>this.l(ie)
                    };
                    try {
                        await Promise.resolve(te(le)),
                        this.k()
                    } catch (ie) {
                        this.l(ie)
                    } finally {
                        le.emitOne = void 0,
                        le.emitMany = void 0,
                        le.reject = void 0
                    }
                }
                )
            }
            [Symbol.asyncIterator]() {
                let te = 0;
                return {
                    next: async()=>{
                        do {
                            if (this.a === _.DoneError)
                                throw this.d;
                            if (te < this.b.length)
                                return {
                                    done: !1,
                                    value: this.b[te++]
                                };
                            if (this.a === _.DoneOK)
                                return {
                                    done: !0,
                                    value: void 0
                                };
                            await C.Event.toPromise(this.g.event)
                        } while (!0)
                    }
                    ,
                    return: async()=>(this.f?.(),
                    {
                        done: !0,
                        value: void 0
                    })
                }
            }
            static map(te, ne) {
                return new ae(async le=>{
                    for await(const ie of te)
                        le.emitOne(ne(ie))
                }
                )
            }
            map(te) {
                return ae.map(this, te)
            }
            static filter(te, ne) {
                return new ae(async le=>{
                    for await(const ie of te)
                        ne(ie) && le.emitOne(ie)
                }
                )
            }
            filter(te) {
                return ae.filter(this, te)
            }
            static coalesce(te) {
                return ae.filter(te, ne=>!!ne)
            }
            coalesce() {
                return ae.coalesce(this)
            }
            static async toPromise(te) {
                const ne = [];
                for await(const le of te)
                    ne.push(le);
                return ne
            }
            toPromise() {
                return ae.toPromise(this)
            }
            h(te) {
                this.a === _.Initial && (this.b.push(te),
                this.g.fire())
            }
            j(te) {
                this.a === _.Initial && (this.b = this.b.concat(te),
                this.g.fire())
            }
            k() {
                this.a === _.Initial && (this.a = _.DoneOK,
                this.g.fire())
            }
            l(te) {
                this.a === _.Initial && (this.a = _.DoneError,
                this.d = te,
                this.g.fire())
            }
        }
        e.$6h = ae;
        class re extends ae {
            constructor(te, ne) {
                super(ne),
                this.m = te
            }
            cancel() {
                this.m.cancel()
            }
        }
        e.$7h = re;
        function se(J) {
            const te = new t.$we
              , ne = J(te.token);
            return new re(te,async le=>{
                const ie = te.token.onCancellationRequested(()=>{
                    ie.dispose(),
                    te.dispose(),
                    le.reject(new n.$4)
                }
                );
                try {
                    for await(const oe of ne) {
                        if (te.token.isCancellationRequested)
                            return;
                        le.emitOne(oe)
                    }
                    ie.dispose(),
                    te.dispose()
                } catch (oe) {
                    ie.dispose(),
                    te.dispose(),
                    le.reject(oe)
                }
            }
            )
        }
        class ee {
            constructor(te) {
                this.a = new x,
                this.b = new ae(ie=>{
                    if (ne) {
                        ie.reject(ne);
                        return
                    }
                    return le && ie.emitMany(le),
                    this.d = oe=>ie.reject(oe),
                    this.f = oe=>ie.emitOne(oe),
                    this.a.p
                }
                ,te);
                let ne, le;
                this.f = ie=>{
                    le || (le = []),
                    le.push(ie)
                }
                ,
                this.d = ie=>{
                    ne || (ne = ie)
                }
            }
            get asyncIterable() {
                return this.b
            }
            resolve() {
                this.a.complete()
            }
            reject(te) {
                this.d(te),
                this.a.complete()
            }
            emitOne(te) {
                this.f(te)
            }
        }
        e.$9h = ee
    }),
    define(ge[7], be([1, 0, 120, 301, 100, 134, 11, 14, 5, 742, 17, 2, 19, 12, 9, 131, 78, 167]), function(ce, e, t, n, C, I, L, y, E, $, v, f, g, p, i, c, h, a) {
        "use strict";
        var d;
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$jU = e.$eU = e.$cU = e.$_T = e.DetectedFullscreenMode = e.Namespace = e.$JT = e.$HT = e.$qT = e.$YS = e.$SS = e.$QS = e.$PS = e.$OS = e.$JS = e.$IS = e.$HS = e.onDidUnregisterWindow = e.onWillUnregisterWindow = e.onDidRegisterWindow = e.hasWindow = e.getWindowById = e.getWindowId = e.getWindowsCount = e.getWindows = e.getDocument = e.getWindow = e.registerWindow = void 0,
        e.$FS = u,
        e.$GS = r,
        e.$KS = S,
        e.$LS = T,
        e.$MS = D,
        e.$NS = k,
        e.$RS = A,
        e.$TS = R,
        e.$US = N,
        e.$VS = j,
        e.$WS = W,
        e.$XS = q,
        e.$ZS = K,
        e.$1S = G,
        e.$2S = Z,
        e.$3S = x,
        e.$4S = X,
        e.$5S = Y,
        e.$6S = Q,
        e.$7S = _,
        e.$8S = ae,
        e.$9S = re,
        e.$0S = ee,
        e.$$S = J,
        e.$_S = ne,
        e.$aT = ie,
        e.$bT = oe,
        e.$cT = fe,
        e.$dT = he,
        e.$eT = ue,
        e.$fT = de,
        e.$gT = $e,
        e.$hT = pe,
        e.$iT = ve,
        e.$jT = me,
        e.$kT = we,
        e.$lT = ye,
        e.$mT = De,
        e.$nT = Pe,
        e.$oT = Be,
        e.$pT = Me,
        e.$rT = Se,
        e.$sT = Ce,
        e.$tT = Ne,
        e.$uT = Oe,
        e.$vT = Re,
        e.$wT = We,
        e.$xT = Ue,
        e.$yT = He,
        e.$zT = Ge,
        e.$AT = et,
        e.$BT = Qe,
        e.$CT = tt,
        e.$DT = ut,
        e.$ET = _e,
        e.$FT = Ve,
        e.$GT = Ze,
        e.$IT = st,
        e.$KT = ft,
        e.$LT = lt,
        e.$MT = St,
        e.$NT = kt,
        e.$OT = Rt,
        e.$PT = Nt,
        e.$QT = Vt,
        e.$ = Qt,
        e.$ST = Gt,
        e.$TT = oi,
        e.$UT = qt,
        e.$VT = hi,
        e.$WT = ii,
        e.$XT = ni,
        e.$YT = ui,
        e.$ZT = bi,
        e.$1T = wi,
        e.$2T = Li,
        e.$3T = Di,
        e.$4T = Ii,
        e.$5T = yi,
        e.$6T = Ti,
        e.$7T = Ft,
        e.$8T = Ot,
        e.$9T = Wt,
        e.$0T = Jt,
        e.$$T = Yt,
        e.$aU = fi,
        e.$bU = gi,
        e.$dU = ki,
        e.h = $t,
        e.$gU = Et,
        e.$hU = bt,
        e.$iU = Ye,
        t = xe(t),
        E = xe(E),
        $ = xe($),
        p = xe(p),
        d = function() {
            const it = new Map;
            (0,
            h.$$R)(h.$_R, 1);
            const nt = {
                window: h.$_R,
                disposables: new f.$Tc
            };
            it.set(h.$_R.vscodeWindowId, nt);
            const Je = new E.$le
              , at = new E.$le
              , mt = new E.$le;
            function yt(ht, vt) {
                return (typeof ht == "number" ? it.get(ht) : void 0) ?? (vt ? nt : void 0)
            }
            return {
                onDidRegisterWindow: Je.event,
                onWillUnregisterWindow: mt.event,
                onDidUnregisterWindow: at.event,
                registerWindow(ht) {
                    if (it.has(ht.vscodeWindowId))
                        return f.$Uc.None;
                    const vt = new f.$Tc
                      , It = {
                        window: ht,
                        disposables: vt.add(new f.$Tc)
                    };
                    return it.set(ht.vscodeWindowId, It),
                    vt.add((0,
                    f.$Sc)(()=>{
                        it.delete(ht.vscodeWindowId),
                        at.fire(ht)
                    }
                    )),
                    vt.add(r(ht, e.$HT.BEFORE_UNLOAD, ()=>{
                        mt.fire(ht)
                    }
                    )),
                    Je.fire(It),
                    vt
                },
                getWindows() {
                    return it.values()
                },
                getWindowsCount() {
                    return it.size
                },
                getWindowId(ht) {
                    return ht.vscodeWindowId
                },
                hasWindow(ht) {
                    return it.has(ht)
                },
                getWindowById: yt,
                getWindow(ht) {
                    const vt = ht;
                    if (vt?.ownerDocument?.defaultView)
                        return vt.ownerDocument.defaultView.window;
                    const It = ht;
                    return It?.view ? It.view.window : h.$_R
                },
                getDocument(ht) {
                    const vt = ht;
                    return (0,
                    e.getWindow)(vt).document
                }
            }
        }(),
        e.registerWindow = d.registerWindow,
        e.getWindow = d.getWindow,
        e.getDocument = d.getDocument,
        e.getWindows = d.getWindows,
        e.getWindowsCount = d.getWindowsCount,
        e.getWindowId = d.getWindowId,
        e.getWindowById = d.getWindowById,
        e.hasWindow = d.hasWindow,
        e.onDidRegisterWindow = d.onDidRegisterWindow,
        e.onWillUnregisterWindow = d.onWillUnregisterWindow,
        e.onDidUnregisterWindow = d.onDidUnregisterWindow;
        function u(it) {
            for (; it.firstChild; )
                it.firstChild.remove()
        }
        class s {
            constructor(nt, Je, at, mt) {
                this.f = nt,
                this.g = Je,
                this.d = at,
                this.j = mt || !1,
                this.f.addEventListener(this.g, this.d, this.j)
            }
            dispose() {
                this.d && (this.f.removeEventListener(this.g, this.d, this.j),
                this.f = null,
                this.d = null)
            }
        }
        function r(it, nt, Je, at) {
            return new s(it,nt,Je,at)
        }
        function l(it, nt) {
            return function(Je) {
                return nt(new I.$yS(it,Je))
            }
        }
        function o(it) {
            return function(nt) {
                return it(new C.$DS(nt))
            }
        }
        const b = function(nt, Je, at, mt) {
            let yt = at;
            return Je === "click" || Je === "mousedown" || Je === "contextmenu" ? yt = l((0,
            e.getWindow)(nt), at) : (Je === "keydown" || Je === "keypress" || Je === "keyup") && (yt = o(at)),
            r(nt, Je, yt, mt)
        };
        e.$HS = b;
        const m = function(nt, Je, at) {
            const mt = l((0,
            e.getWindow)(nt), Je);
            return S(nt, mt, at)
        };
        e.$IS = m;
        const w = function(nt, Je, at) {
            const mt = l((0,
            e.getWindow)(nt), Je);
            return D(nt, mt, at)
        };
        e.$JS = w;
        function S(it, nt, Je) {
            return r(it, p.$s && n.$vS.pointerEvents ? e.$HT.POINTER_DOWN : e.$HT.MOUSE_DOWN, nt, Je)
        }
        function T(it, nt, Je) {
            return r(it, p.$s && n.$vS.pointerEvents ? e.$HT.POINTER_MOVE : e.$HT.MOUSE_MOVE, nt, Je)
        }
        function D(it, nt, Je) {
            return r(it, p.$s && n.$vS.pointerEvents ? e.$HT.POINTER_UP : e.$HT.MOUSE_UP, nt, Je)
        }
        function k(it, nt, Je) {
            return (0,
            L.$Wh)(it, nt, Je)
        }
        class P extends L.$Xh {
            constructor(nt, Je) {
                super(nt, Je)
            }
        }
        e.$OS = P;
        function A(it, nt, Je, at) {
            let mt = 0;
            const yt = it.setInterval(()=>{
                mt++,
                (typeof at == "number" && mt >= at || nt() === !0) && ht.dispose()
            }
            , Je)
              , ht = (0,
            f.$Sc)(()=>{
                it.clearInterval(yt)
            }
            );
            return ht
        }
        class M extends L.$Qh {
            constructor(nt) {
                super(),
                this.g = nt && (0,
                e.getWindow)(nt)
            }
            cancelAndSet(nt, Je, at) {
                return super.cancelAndSet(nt, Je, at ?? this.g)
            }
        }
        e.$SS = M;
        class O {
            constructor(nt, Je=0) {
                this.d = nt,
                this.priority = Je,
                this.f = !1
            }
            dispose() {
                this.f = !0
            }
            execute() {
                if (!this.f)
                    try {
                        this.d()
                    } catch (nt) {
                        (0,
                        y.$Y)(nt)
                    }
            }
            static sort(nt, Je) {
                return Je.priority - nt.priority
            }
        }
        (function() {
            const it = new Map
              , nt = new Map
              , Je = new Map
              , at = new Map
              , mt = yt=>{
                Je.set(yt, !1);
                const ht = it.get(yt) ?? [];
                for (nt.set(yt, ht),
                it.set(yt, []),
                at.set(yt, !0); ht.length > 0; )
                    ht.sort(O.sort),
                    ht.shift().execute();
                at.set(yt, !1)
            }
            ;
            e.$QS = (yt,ht,vt=0)=>{
                const It = (0,
                e.getWindowId)(yt)
                  , Pt = new O(ht,vt);
                let _t = it.get(It);
                return _t || (_t = [],
                it.set(It, _t)),
                _t.push(Pt),
                Je.get(It) || (Je.set(It, !0),
                yt.requestAnimationFrame(()=>mt(It))),
                Pt
            }
            ,
            e.$PS = (yt,ht,vt)=>{
                const It = (0,
                e.getWindowId)(yt);
                if (at.get(It)) {
                    const Pt = new O(ht,vt);
                    let _t = nt.get(It);
                    return _t || (_t = [],
                    nt.set(It, _t)),
                    _t.push(Pt),
                    Pt
                } else
                    return (0,
                    e.$QS)(yt, ht, vt)
            }
        }
        )();
        function R(it, nt) {
            return (0,
            e.$QS)(it, nt, 1e4)
        }
        function N(it, nt) {
            return (0,
            e.$QS)(it, nt, -1e4)
        }
        const z = 8
          , V = function(it, nt) {
            return nt
        };
        class B extends f.$Uc {
            constructor(nt, Je, at, mt=V, yt=z) {
                super();
                let ht = null
                  , vt = 0;
                const It = this.B(new L.$Ph)
                  , Pt = ()=>{
                    vt = new Date().getTime(),
                    at(ht),
                    ht = null
                }
                ;
                this.B(r(nt, Je, _t=>{
                    ht = mt(ht, _t);
                    const Mt = new Date().getTime() - vt;
                    Mt >= yt ? (It.cancel(),
                    Pt()) : It.setIfNotSet(Pt, yt - Mt)
                }
                ))
            }
        }
        function j(it, nt, Je, at, mt) {
            return new B(it,nt,Je,at,mt)
        }
        function W(it) {
            return (0,
            e.getWindow)(it).getComputedStyle(it, null)
        }
        function q(it, nt) {
            const Je = (0,
            e.getWindow)(it)
              , at = Je.document;
            if (it !== at.body)
                return new U(it.clientWidth,it.clientHeight);
            if (p.$s && Je?.visualViewport)
                return new U(Je.visualViewport.width,Je.visualViewport.height);
            if (Je?.innerWidth && Je.innerHeight)
                return new U(Je.innerWidth,Je.innerHeight);
            if (at.body && at.body.clientWidth && at.body.clientHeight)
                return new U(at.body.clientWidth,at.body.clientHeight);
            if (at.documentElement && at.documentElement.clientWidth && at.documentElement.clientHeight)
                return new U(at.documentElement.clientWidth,at.documentElement.clientHeight);
            if (nt)
                return q(nt);
            throw new Error("Unable to figure out browser width and height")
        }
        class H {
            static d(nt, Je) {
                return parseFloat(Je) || 0
            }
            static f(nt, Je, at) {
                const mt = W(nt)
                  , yt = mt ? mt.getPropertyValue(Je) : "0";
                return H.d(nt, yt)
            }
            static getBorderLeftWidth(nt) {
                return H.f(nt, "border-left-width", "borderLeftWidth")
            }
            static getBorderRightWidth(nt) {
                return H.f(nt, "border-right-width", "borderRightWidth")
            }
            static getBorderTopWidth(nt) {
                return H.f(nt, "border-top-width", "borderTopWidth")
            }
            static getBorderBottomWidth(nt) {
                return H.f(nt, "border-bottom-width", "borderBottomWidth")
            }
            static getPaddingLeft(nt) {
                return H.f(nt, "padding-left", "paddingLeft")
            }
            static getPaddingRight(nt) {
                return H.f(nt, "padding-right", "paddingRight")
            }
            static getPaddingTop(nt) {
                return H.f(nt, "padding-top", "paddingTop")
            }
            static getPaddingBottom(nt) {
                return H.f(nt, "padding-bottom", "paddingBottom")
            }
            static getMarginLeft(nt) {
                return H.f(nt, "margin-left", "marginLeft")
            }
            static getMarginTop(nt) {
                return H.f(nt, "margin-top", "marginTop")
            }
            static getMarginRight(nt) {
                return H.f(nt, "margin-right", "marginRight")
            }
            static getMarginBottom(nt) {
                return H.f(nt, "margin-bottom", "marginBottom")
            }
        }
        class U {
            static{this.None = new U(0,0)
            }constructor(nt, Je) {
                this.width = nt,
                this.height = Je
            }
            with(nt=this.width, Je=this.height) {
                return nt !== this.width || Je !== this.height ? new U(nt,Je) : this
            }
            static is(nt) {
                return typeof nt == "object" && typeof nt.height == "number" && typeof nt.width == "number"
            }
            static lift(nt) {
                return nt instanceof U ? nt : new U(nt.width,nt.height)
            }
            static equals(nt, Je) {
                return nt === Je ? !0 : !nt || !Je ? !1 : nt.width === Je.width && nt.height === Je.height
            }
        }
        e.$YS = U;
        function K(it) {
            let nt = it.offsetParent
              , Je = it.offsetTop
              , at = it.offsetLeft;
            for (; (it = it.parentNode) !== null && it !== it.ownerDocument.body && it !== it.ownerDocument.documentElement; ) {
                Je -= it.scrollTop;
                const mt = he(it) ? null : W(it);
                mt && (at -= mt.direction !== "rtl" ? it.scrollLeft : -it.scrollLeft),
                it === nt && (at += H.getBorderLeftWidth(it),
                Je += H.getBorderTopWidth(it),
                Je += it.offsetTop,
                at += it.offsetLeft,
                nt = it.offsetParent)
            }
            return {
                left: at,
                top: Je
            }
        }
        function G(it, nt, Je) {
            typeof nt == "number" && (it.style.width = `${nt}px`),
            typeof Je == "number" && (it.style.height = `${Je}px`)
        }
        function Z(it, nt, Je, at, mt, yt="absolute") {
            typeof nt == "number" && (it.style.top = `${nt}px`),
            typeof Je == "number" && (it.style.right = `${Je}px`),
            typeof at == "number" && (it.style.bottom = `${at}px`),
            typeof mt == "number" && (it.style.left = `${mt}px`),
            it.style.position = yt
        }
        function x(it) {
            const nt = it.getBoundingClientRect()
              , Je = (0,
            e.getWindow)(it);
            return {
                left: nt.left + Je.scrollX,
                top: nt.top + Je.scrollY,
                width: nt.width,
                height: nt.height
            }
        }
        function X(it) {
            let nt = it
              , Je = 1;
            do {
                const at = W(nt).zoom;
                at != null && at !== "1" && (Je *= at),
                nt = nt.parentElement
            } while (nt !== null && nt !== nt.ownerDocument.documentElement);
            return Je
        }
        function Y(it) {
            const nt = H.getMarginLeft(it) + H.getMarginRight(it);
            return it.offsetWidth + nt
        }
        function Q(it) {
            const nt = H.getBorderLeftWidth(it) + H.getBorderRightWidth(it)
              , Je = H.getPaddingLeft(it) + H.getPaddingRight(it);
            return it.offsetWidth - nt - Je
        }
        function _(it) {
            const nt = H.getMarginLeft(it) + H.getMarginRight(it);
            return it.scrollWidth + nt
        }
        function ae(it) {
            const nt = H.getBorderTopWidth(it) + H.getBorderBottomWidth(it)
              , Je = H.getPaddingTop(it) + H.getPaddingBottom(it);
            return it.offsetHeight - nt - Je
        }
        function re(it) {
            const nt = H.getMarginTop(it) + H.getMarginBottom(it);
            return it.offsetHeight + nt
        }
        function se(it, nt) {
            if (it === null)
                return 0;
            const Je = K(it)
              , at = K(nt);
            return Je.left - at.left
        }
        function ee(it, nt) {
            const Je = nt.map(mt=>Math.max(_(mt), Y(mt)) + se(mt, it) || 0);
            return Math.max(...Je)
        }
        function J(it, nt) {
            return !!nt?.contains(it)
        }
        const te = "parentFlowToElementId";
        function ne(it, nt) {
            it.dataset[te] = nt.id
        }
        function le(it) {
            const nt = it.dataset[te];
            return typeof nt == "string" ? it.ownerDocument.getElementById(nt) : null
        }
        function ie(it, nt) {
            let Je = it;
            for (; Je; ) {
                if (Je === nt)
                    return !0;
                if (Re(Je)) {
                    const at = le(Je);
                    if (at) {
                        Je = at;
                        continue
                    }
                }
                Je = Je.parentNode
            }
            return !1
        }
        function oe(it, nt, Je) {
            for (; it && it.nodeType === it.ELEMENT_NODE; ) {
                if (it.classList.contains(nt))
                    return it;
                if (Je) {
                    if (typeof Je == "string") {
                        if (it.classList.contains(Je))
                            return null
                    } else if (it === Je)
                        return null
                }
                it = it.parentNode
            }
            return null
        }
        function fe(it, nt, Je) {
            return !!oe(it, nt, Je)
        }
        function he(it) {
            return it && !!it.host && !!it.mode
        }
        function ue(it) {
            return !!de(it)
        }
        function de(it) {
            for (; it.parentNode; ) {
                if (it === it.ownerDocument?.body)
                    return null;
                it = it.parentNode
            }
            return he(it) ? it : null
        }
        function $e() {
            let it = we().activeElement;
            for (; it?.shadowRoot; )
                it = it.shadowRoot.activeElement;
            return it
        }
        function pe(it) {
            return $e() === it
        }
        function ve(it) {
            return J($e(), it)
        }
        function me(it) {
            return it.ownerDocument === we()
        }
        function we() {
            return (0,
            e.getWindowsCount)() <= 1 ? h.$_R.document : Array.from((0,
            e.getWindows)()).map(({window: nt})=>nt.document).find(nt=>nt.hasFocus()) ?? h.$_R.document
        }
        function ye() {
            return we().defaultView?.window ?? h.$_R
        }
        const Le = new Map;
        function De(it) {
            return Le.has(it)
        }
        function Pe() {
            return new ze
        }
        class ze {
            constructor() {
                this.d = "",
                this.f = void 0
            }
            setStyle(nt) {
                nt !== this.d && (this.d = nt,
                this.f ? this.f.innerText = nt : this.f = Be(h.$_R.document.head, Je=>Je.innerText = nt))
            }
            dispose() {
                this.f && (this.f.remove(),
                this.f = void 0)
            }
        }
        function Be(it=h.$_R.document.head, nt, Je) {
            const at = document.createElement("style");
            if (at.type = "text/css",
            at.media = "screen",
            nt?.(at),
            it.appendChild(at),
            Je && Je.add((0,
            f.$Sc)(()=>at.remove())),
            it === h.$_R.document.head) {
                const mt = new Set;
                Le.set(at, mt);
                for (const {window: yt, disposables: ht} of (0,
                e.getWindows)()) {
                    if (yt === h.$_R)
                        continue;
                    const vt = ht.add(Ae(at, mt, yt));
                    Je?.add(vt)
                }
            }
            return at
        }
        function Me(it) {
            const nt = new f.$Tc;
            for (const [Je,at] of Le)
                nt.add(Ae(Je, at, it));
            return nt
        }
        function Ae(it, nt, Je) {
            const at = new f.$Tc
              , mt = it.cloneNode(!0);
            Je.document.head.appendChild(mt),
            at.add((0,
            f.$Sc)(()=>mt.remove()));
            for (const yt of Te(it))
                mt.sheet?.insertRule(yt.cssText, mt.sheet?.cssRules.length);
            return at.add(e.$qT.observe(it, at, {
                childList: !0
            })(()=>{
                mt.textContent = it.textContent
            }
            )),
            nt.add(mt),
            at.add((0,
            f.$Sc)(()=>nt.delete(mt))),
            at
        }
        e.$qT = new class {
            constructor() {
                this.mutationObservers = new Map
            }
            observe(it, nt, Je) {
                let at = this.mutationObservers.get(it);
                at || (at = new Map,
                this.mutationObservers.set(it, at));
                const mt = (0,
                c.$tj)(Je);
                let yt = at.get(mt);
                if (yt)
                    yt.users += 1;
                else {
                    const ht = new E.$le
                      , vt = new MutationObserver(Pt=>ht.fire(Pt));
                    vt.observe(it, Je);
                    const It = yt = {
                        users: 1,
                        observer: vt,
                        onDidMutate: ht.event
                    };
                    nt.add((0,
                    f.$Sc)(()=>{
                        It.users -= 1,
                        It.users === 0 && (ht.dispose(),
                        vt.disconnect(),
                        at?.delete(mt),
                        at?.size === 0 && this.mutationObservers.delete(it))
                    }
                    )),
                    at.set(mt, yt)
                }
                return yt.onDidMutate
            }
        }
        ;
        function Se(it=h.$_R.document.head) {
            return ke("meta", it)
        }
        function Ce(it=h.$_R.document.head) {
            return ke("link", it)
        }
        function ke(it, nt=h.$_R.document.head) {
            const Je = document.createElement(it);
            return nt.appendChild(Je),
            Je
        }
        let je = null;
        function Ie() {
            return je || (je = Be()),
            je
        }
        function Te(it) {
            return it?.sheet?.rules ? it.sheet.rules : it?.sheet?.cssRules ? it.sheet.cssRules : []
        }
        function Ne(it, nt, Je=Ie()) {
            if (!(!Je || !nt)) {
                Je.sheet?.insertRule(`${it} {${nt}}`, 0);
                for (const at of Le.get(Je) ?? [])
                    Ne(it, nt, at)
            }
        }
        function Oe(it, nt=Ie()) {
            if (!nt)
                return;
            const Je = Te(nt)
              , at = [];
            for (let mt = 0; mt < Je.length; mt++) {
                const yt = Je[mt];
                Fe(yt) && yt.selectorText.indexOf(it) !== -1 && at.push(mt)
            }
            for (let mt = at.length - 1; mt >= 0; mt--)
                nt.sheet?.deleteRule(at[mt]);
            for (const mt of Le.get(nt) ?? [])
                Oe(it, mt)
        }
        function Fe(it) {
            return typeof it.selectorText == "string"
        }
        function Re(it) {
            return it instanceof HTMLElement || it instanceof (0,
            e.getWindow)(it).HTMLElement
        }
        function We(it) {
            return it instanceof HTMLAnchorElement || it instanceof (0,
            e.getWindow)(it).HTMLAnchorElement
        }
        function Ue(it) {
            return it instanceof HTMLSpanElement || it instanceof (0,
            e.getWindow)(it).HTMLSpanElement
        }
        function He(it) {
            return it instanceof HTMLTextAreaElement || it instanceof (0,
            e.getWindow)(it).HTMLTextAreaElement
        }
        function Ge(it) {
            return it instanceof HTMLInputElement || it instanceof (0,
            e.getWindow)(it).HTMLInputElement
        }
        function et(it) {
            return it instanceof HTMLButtonElement || it instanceof (0,
            e.getWindow)(it).HTMLButtonElement
        }
        function Qe(it) {
            return it instanceof HTMLDivElement || it instanceof (0,
            e.getWindow)(it).HTMLDivElement
        }
        function tt(it) {
            return it instanceof SVGElement || it instanceof (0,
            e.getWindow)(it).SVGElement
        }
        function ut(it) {
            return it instanceof MouseEvent || it instanceof (0,
            e.getWindow)(it).MouseEvent
        }
        function _e(it) {
            return it instanceof KeyboardEvent || it instanceof (0,
            e.getWindow)(it).KeyboardEvent
        }
        function Ve(it) {
            return it instanceof PointerEvent || it instanceof (0,
            e.getWindow)(it).PointerEvent
        }
        function Ze(it) {
            return it instanceof DragEvent || it instanceof (0,
            e.getWindow)(it).DragEvent
        }
        e.$HT = {
            CLICK: "click",
            AUXCLICK: "auxclick",
            DBLCLICK: "dblclick",
            MOUSE_UP: "mouseup",
            MOUSE_DOWN: "mousedown",
            MOUSE_OVER: "mouseover",
            MOUSE_MOVE: "mousemove",
            MOUSE_OUT: "mouseout",
            MOUSE_ENTER: "mouseenter",
            MOUSE_LEAVE: "mouseleave",
            MOUSE_WHEEL: "wheel",
            POINTER_UP: "pointerup",
            POINTER_DOWN: "pointerdown",
            POINTER_MOVE: "pointermove",
            POINTER_LEAVE: "pointerleave",
            CONTEXT_MENU: "contextmenu",
            WHEEL: "wheel",
            KEY_DOWN: "keydown",
            KEY_PRESS: "keypress",
            KEY_UP: "keyup",
            LOAD: "load",
            BEFORE_UNLOAD: "beforeunload",
            UNLOAD: "unload",
            PAGE_SHOW: "pageshow",
            PAGE_HIDE: "pagehide",
            PASTE: "paste",
            ABORT: "abort",
            ERROR: "error",
            RESIZE: "resize",
            SCROLL: "scroll",
            FULLSCREEN_CHANGE: "fullscreenchange",
            WK_FULLSCREEN_CHANGE: "webkitfullscreenchange",
            SELECT: "select",
            CHANGE: "change",
            SUBMIT: "submit",
            RESET: "reset",
            FOCUS: "focus",
            FOCUS_IN: "focusin",
            FOCUS_OUT: "focusout",
            BLUR: "blur",
            INPUT: "input",
            STORAGE: "storage",
            DRAG_START: "dragstart",
            DRAG: "drag",
            DRAG_ENTER: "dragenter",
            DRAG_LEAVE: "dragleave",
            DRAG_OVER: "dragover",
            DROP: "drop",
            DRAG_END: "dragend",
            ANIMATION_START: t.$mS ? "webkitAnimationStart" : "animationstart",
            ANIMATION_END: t.$mS ? "webkitAnimationEnd" : "animationend",
            ANIMATION_ITERATION: t.$mS ? "webkitAnimationIteration" : "animationiteration"
        };
        function st(it) {
            const nt = it;
            return !!(nt && typeof nt.preventDefault == "function" && typeof nt.stopPropagation == "function")
        }
        e.$JT = {
            stop: (it,nt)=>(it.preventDefault(),
            nt && it.stopPropagation(),
            it)
        };
        function ft(it) {
            const nt = [];
            for (let Je = 0; it && it.nodeType === it.ELEMENT_NODE; Je++)
                nt[Je] = it.scrollTop,
                it = it.parentNode;
            return nt
        }
        function lt(it, nt) {
            for (let Je = 0; it && it.nodeType === it.ELEMENT_NODE; Je++)
                it.scrollTop !== nt[Je] && (it.scrollTop = nt[Je]),
                it = it.parentNode
        }
        class Tt extends f.$Uc {
            static m(nt) {
                if (Re(nt)) {
                    const Je = de(nt)
                      , at = Je ? Je.activeElement : nt.ownerDocument.activeElement;
                    return J(at, nt)
                } else {
                    const Je = nt;
                    return J(Je.document.activeElement, Je.document)
                }
            }
            constructor(nt) {
                super(),
                this.f = this.B(new E.$le),
                this.onDidFocus = this.f.event,
                this.g = this.B(new E.$le),
                this.onDidBlur = this.g.event;
                let Je = Tt.m(nt)
                  , at = !1;
                const mt = ()=>{
                    at = !1,
                    Je || (Je = !0,
                    this.f.fire())
                }
                  , yt = ()=>{
                    Je && (at = !0,
                    (Re(nt) ? (0,
                    e.getWindow)(nt) : nt).setTimeout(()=>{
                        at && (at = !1,
                        Je = !1,
                        this.g.fire())
                    }
                    , 0))
                }
                ;
                this.j = ()=>{
                    Tt.m(nt) !== Je && (Je ? yt() : mt())
                }
                ,
                this.B(r(nt, e.$HT.FOCUS, mt, !0)),
                this.B(r(nt, e.$HT.BLUR, yt, !0)),
                Re(nt) && (this.B(r(nt, e.$HT.FOCUS_IN, ()=>this.j())),
                this.B(r(nt, e.$HT.FOCUS_OUT, ()=>this.j())))
            }
            refreshState() {
                this.j()
            }
        }
        function St(it) {
            return new Tt(it)
        }
        function kt(it, nt) {
            return it.after(nt),
            nt
        }
        function Rt(it, ...nt) {
            if (it.append(...nt),
            nt.length === 1 && typeof nt[0] != "string")
                return nt[0]
        }
        function Nt(it, nt) {
            return it.insertBefore(nt, it.firstChild),
            nt
        }
        function Vt(it, ...nt) {
            it.innerText = "",
            Rt(it, ...nt)
        }
        const Xt = /([\w\-]+)?(#([\w\-]+))?((\.([\w\-]+))*)/;
        var xt;
        (function(it) {
            it.HTML = "http://www.w3.org/1999/xhtml",
            it.SVG = "http://www.w3.org/2000/svg"
        }
        )(xt || (e.Namespace = xt = {}));
        function ei(it, nt, Je, ...at) {
            const mt = Xt.exec(nt);
            if (!mt)
                throw new Error("Bad use of emmet");
            const yt = mt[1] || "div";
            let ht;
            return it !== xt.HTML ? ht = document.createElementNS(it, yt) : ht = document.createElement(yt),
            mt[3] && (ht.id = mt[3]),
            mt[4] && (ht.className = mt[4].replace(/\./g, " ").trim()),
            Je && Object.entries(Je).forEach(([vt,It])=>{
                typeof It > "u" || (/^on\w+$/.test(vt) ? ht[vt] = It : vt === "selected" ? It && ht.setAttribute(vt, "true") : ht.setAttribute(vt, It))
            }
            ),
            ht.append(...at),
            ht
        }
        function Qt(it, nt, ...Je) {
            return ei(xt.HTML, it, nt, ...Je)
        }
        Qt.SVG = function(it, nt, ...Je) {
            return ei(xt.SVG, it, nt, ...Je)
        }
        ;
        function Gt(it, nt) {
            const Je = [];
            return it.forEach((at,mt)=>{
                mt > 0 && (nt instanceof Node ? Je.push(nt.cloneNode()) : Je.push(document.createTextNode(nt))),
                Je.push(at)
            }
            ),
            Je
        }
        function oi(it, ...nt) {
            it ? qt(...nt) : hi(...nt)
        }
        function qt(...it) {
            for (const nt of it)
                nt.style.display = "",
                nt.removeAttribute("aria-hidden")
        }
        function hi(...it) {
            for (const nt of it)
                nt.style.display = "none",
                nt.setAttribute("aria-hidden", "true")
        }
        function Ht(it, nt) {
            for (; it && it.nodeType === it.ELEMENT_NODE; ) {
                if (Re(it) && it.hasAttribute(nt))
                    return it;
                it = it.parentNode
            }
            return null
        }
        function ii(it) {
            !it || !it.hasAttribute("tabIndex") || (it.ownerDocument.activeElement === it && Ht(it.parentElement, "tabIndex")?.focus(),
            it.removeAttribute("tabindex"))
        }
        function ni(it) {
            return nt=>{
                nt.preventDefault(),
                nt.stopPropagation(),
                it(nt)
            }
        }
        function ui(it) {
            return new Promise(nt=>{
                if (it.document.readyState === "complete" || it.document && it.document.body !== null)
                    nt(void 0);
                else {
                    const at = ()=>{
                        it.window.removeEventListener("DOMContentLoaded", at, !1),
                        nt()
                    }
                    ;
                    it.window.addEventListener("DOMContentLoaded", at, !1)
                }
            }
            )
        }
        function bi(it, nt) {
            const Je = it.devicePixelRatio * nt;
            return Math.max(1, Math.floor(Je)) / it.devicePixelRatio
        }
        function wi(it) {
            h.$_R.open(it, "_blank", "noopener")
        }
        const di = 780
          , vi = 640;
        function Li(it) {
            const nt = Math.floor(h.$_R.screenLeft + h.$_R.innerWidth / 2 - di / 2)
              , Je = Math.floor(h.$_R.screenTop + h.$_R.innerHeight / 2 - vi / 2);
            h.$_R.open(it, "_blank", `width=${di},height=${vi},top=${Je},left=${nt}`)
        }
        function Di(it, nt=!0) {
            const Je = h.$_R.open();
            return Je ? (nt && (Je.opener = null),
            Je.location.href = it,
            !0) : !1
        }
        function Ii(it, nt) {
            const Je = ()=>{
                nt(),
                at = (0,
                e.$QS)(it, Je)
            }
            ;
            let at = (0,
            e.$QS)(it, Je);
            return (0,
            f.$Sc)(()=>at.dispose())
        }
        g.$Sg.setPreferredWebSchema(/^https:/.test(h.$_R.location.href) ? "https" : "http");
        function yi(it) {
            return it ? `url('${g.$Zg.uriToBrowserUri(it).toString(!0).replace(/'/g, "%27")}')` : "url('')"
        }
        function Ti(it) {
            return `'${it.replace(/'/g, "%27")}'`
        }
        function Ft(it, nt) {
            if (it !== void 0) {
                const Je = it.match(/^\s*var\((.+)\)$/);
                if (Je) {
                    const at = Je[1].split(",", 2);
                    return at.length === 2 && (nt = Ft(at[1].trim(), nt)),
                    `var(${at[0]}, ${nt})`
                }
                return it
            }
            return nt
        }
        function Ot(it, nt) {
            let Je;
            if (i.URI.isUri(it))
                Je = it.toString(!0);
            else {
                const yt = new Blob([it]);
                Je = URL.createObjectURL(yt),
                setTimeout(()=>URL.revokeObjectURL(Je))
            }
            const at = ye()
              , mt = document.createElement("a");
            at.document.body.appendChild(mt),
            mt.download = nt,
            mt.href = Je,
            mt.click(),
            setTimeout(()=>mt.remove())
        }
        function Wt() {
            return new Promise(it=>{
                const nt = ye()
                  , Je = document.createElement("input");
                nt.document.body.appendChild(Je),
                Je.type = "file",
                Je.multiple = !0,
                E.Event.once(E.Event.fromDOMEventEmitter(Je, "input"))(()=>{
                    it(Je.files ?? void 0)
                }
                ),
                Je.click(),
                setTimeout(()=>Je.remove())
            }
            )
        }
        var Ut;
        (function(it) {
            it[it.DOCUMENT = 1] = "DOCUMENT",
            it[it.BROWSER = 2] = "BROWSER"
        }
        )(Ut || (e.DetectedFullscreenMode = Ut = {}));
        function Jt(it) {
            return it.document.fullscreenElement || it.document.webkitFullscreenElement || it.document.webkitIsFullScreen ? {
                mode: Ut.DOCUMENT,
                guess: !1
            } : it.innerHeight === it.screen.height ? {
                mode: Ut.BROWSER,
                guess: !1
            } : (p.$k || p.$l) && it.outerHeight === it.screen.height && it.outerWidth === it.screen.width ? {
                mode: Ut.BROWSER,
                guess: !0
            } : null
        }
        function Yt(it, nt=!1) {
            const Je = document.createElement("a");
            return $.addHook("afterSanitizeAttributes", at=>{
                for (const mt of ["href", "src"])
                    if (at.hasAttribute(mt)) {
                        const yt = at.getAttribute(mt);
                        if (mt === "href" && yt.startsWith("#"))
                            continue;
                        if (Je.href = yt,
                        !it.includes(Je.protocol.replace(/:$/, ""))) {
                            if (nt && mt === "src" && Je.href.startsWith("data:"))
                                continue;
                            at.removeAttribute(mt)
                        }
                    }
            }
            ),
            (0,
            f.$Sc)(()=>{
                $.removeHook("afterSanitizeAttributes")
            }
            )
        }
        const ai = [g.Schemas.http, g.Schemas.https, g.Schemas.command];
        e.$_T = Object.freeze(["a", "abbr", "b", "bdo", "blockquote", "br", "caption", "cite", "code", "col", "colgroup", "dd", "del", "details", "dfn", "div", "dl", "dt", "em", "figcaption", "figure", "h1", "h2", "h3", "h4", "h5", "h6", "hr", "i", "img", "input", "ins", "kbd", "label", "li", "mark", "ol", "p", "pre", "q", "rp", "rt", "ruby", "samp", "small", "small", "source", "span", "strike", "strong", "sub", "summary", "sup", "table", "tbody", "td", "tfoot", "th", "thead", "time", "tr", "tt", "u", "ul", "var", "video", "wbr"]);
        const pi = Object.freeze({
            ALLOWED_TAGS: ["a", "button", "blockquote", "code", "div", "h1", "h2", "h3", "h4", "h5", "h6", "hr", "input", "label", "li", "p", "pre", "select", "small", "span", "strong", "textarea", "ul", "ol"],
            ALLOWED_ATTR: ["href", "data-href", "data-command", "target", "title", "name", "src", "alt", "class", "id", "role", "tabindex", "style", "data-code", "width", "height", "align", "x-dispatch", "required", "checked", "placeholder", "type", "start"],
            RETURN_DOM: !1,
            RETURN_DOM_FRAGMENT: !1,
            RETURN_TRUSTED_TYPE: !0
        });
        function fi(it, nt) {
            const Je = Yt(ai);
            try {
                const at = $.sanitize(nt, pi);
                it.innerHTML = at
            } finally {
                Je.dispose()
            }
        }
        function li(it) {
            const nt = new Uint16Array(it.length);
            for (let mt = 0; mt < nt.length; mt++)
                nt[mt] = it.charCodeAt(mt);
            let Je = "";
            const at = new Uint8Array(nt.buffer);
            for (let mt = 0; mt < at.length; mt++)
                Je += String.fromCharCode(at[mt]);
            return Je
        }
        function gi(it) {
            return btoa(li(it))
        }
        class Ci extends E.$le {
            constructor() {
                super(),
                this.o = new f.$Tc,
                this.D = {
                    altKey: !1,
                    shiftKey: !1,
                    ctrlKey: !1,
                    metaKey: !1
                },
                this.o.add(E.Event.runAndSubscribe(e.onDidRegisterWindow, ({window: nt, disposables: Je})=>this.G(nt, Je), {
                    window: h.$_R,
                    disposables: this.o
                }))
            }
            G(nt, Je) {
                Je.add(r(nt, "keydown", at=>{
                    if (at.defaultPrevented)
                        return;
                    const mt = new C.$DS(at);
                    if (!(mt.keyCode === v.KeyCode.Alt && at.repeat)) {
                        if (at.altKey && !this.D.altKey)
                            this.D.lastKeyPressed = "alt";
                        else if (at.ctrlKey && !this.D.ctrlKey)
                            this.D.lastKeyPressed = "ctrl";
                        else if (at.metaKey && !this.D.metaKey)
                            this.D.lastKeyPressed = "meta";
                        else if (at.shiftKey && !this.D.shiftKey)
                            this.D.lastKeyPressed = "shift";
                        else if (mt.keyCode !== v.KeyCode.Alt)
                            this.D.lastKeyPressed = void 0;
                        else
                            return;
                        this.D.altKey = at.altKey,
                        this.D.ctrlKey = at.ctrlKey,
                        this.D.metaKey = at.metaKey,
                        this.D.shiftKey = at.shiftKey,
                        this.D.lastKeyPressed && (this.D.event = at,
                        this.fire(this.D))
                    }
                }
                , !0)),
                Je.add(r(nt, "keyup", at=>{
                    at.defaultPrevented || (!at.altKey && this.D.altKey ? this.D.lastKeyReleased = "alt" : !at.ctrlKey && this.D.ctrlKey ? this.D.lastKeyReleased = "ctrl" : !at.metaKey && this.D.metaKey ? this.D.lastKeyReleased = "meta" : !at.shiftKey && this.D.shiftKey ? this.D.lastKeyReleased = "shift" : this.D.lastKeyReleased = void 0,
                    this.D.lastKeyPressed !== this.D.lastKeyReleased && (this.D.lastKeyPressed = void 0),
                    this.D.altKey = at.altKey,
                    this.D.ctrlKey = at.ctrlKey,
                    this.D.metaKey = at.metaKey,
                    this.D.shiftKey = at.shiftKey,
                    this.D.lastKeyReleased && (this.D.event = at,
                    this.fire(this.D)))
                }
                , !0)),
                Je.add(r(nt.document.body, "mousedown", ()=>{
                    this.D.lastKeyPressed = void 0
                }
                , !0)),
                Je.add(r(nt.document.body, "mouseup", ()=>{
                    this.D.lastKeyPressed = void 0
                }
                , !0)),
                Je.add(r(nt.document.body, "mousemove", at=>{
                    at.buttons && (this.D.lastKeyPressed = void 0)
                }
                , !0)),
                Je.add(r(nt, "blur", ()=>{
                    this.resetKeyStatus()
                }
                ))
            }
            get keyStatus() {
                return this.D
            }
            get isModifierPressed() {
                return this.D.altKey || this.D.ctrlKey || this.D.metaKey || this.D.shiftKey
            }
            resetKeyStatus() {
                this.H(),
                this.fire(this.D)
            }
            H() {
                this.D = {
                    altKey: !1,
                    shiftKey: !1,
                    ctrlKey: !1,
                    metaKey: !1
                }
            }
            static getInstance() {
                return Ci.F || (Ci.F = new Ci),
                Ci.F
            }
            dispose() {
                super.dispose(),
                this.o.dispose()
            }
        }
        e.$cU = Ci;
        function ki(it) {
            const nt = document.cookie.match("(^|[^;]+)\\s*" + it + "\\s*=\\s*([^;]+)");
            return nt ? nt.pop() : void 0
        }
        class Bt extends f.$Uc {
            constructor(nt, Je) {
                super(),
                this.j = nt,
                this.m = Je,
                this.f = 0,
                this.g = 0,
                this.n()
            }
            n() {
                this.m.onDragStart && this.B(r(this.j, e.$HT.DRAG_START, nt=>{
                    this.m.onDragStart?.(nt)
                }
                )),
                this.m.onDrag && this.B(r(this.j, e.$HT.DRAG, nt=>{
                    this.m.onDrag?.(nt)
                }
                )),
                this.B(r(this.j, e.$HT.DRAG_ENTER, nt=>{
                    this.f++,
                    this.g = nt.timeStamp,
                    this.m.onDragEnter?.(nt)
                }
                )),
                this.B(r(this.j, e.$HT.DRAG_OVER, nt=>{
                    nt.preventDefault(),
                    this.m.onDragOver?.(nt, nt.timeStamp - this.g)
                }
                )),
                this.B(r(this.j, e.$HT.DRAG_LEAVE, nt=>{
                    this.f--,
                    this.f === 0 && (this.g = 0,
                    this.m.onDragLeave?.(nt))
                }
                )),
                this.B(r(this.j, e.$HT.DRAG_END, nt=>{
                    this.f = 0,
                    this.g = 0,
                    this.m.onDragEnd?.(nt)
                }
                )),
                this.B(r(this.j, e.$HT.DROP, nt=>{
                    this.f = 0,
                    this.g = 0,
                    this.m.onDrop?.(nt)
                }
                ))
            }
        }
        e.$eU = Bt;
        const gt = /(?<tag>[\w\-]+)?(?:#(?<id>[\w\-]+))?(?<class>(?:\.(?:[\w\-]+))*)(?:@(?<name>(?:[\w\_])+))?/;
        function $t(it, ...nt) {
            let Je, at;
            Array.isArray(nt[0]) ? (Je = {},
            at = nt[0]) : (Je = nt[0] || {},
            at = nt[1]);
            const mt = gt.exec(it);
            if (!mt || !mt.groups)
                throw new Error("Bad use of h");
            const yt = mt.groups.tag || "div"
              , ht = document.createElement(yt);
            mt.groups.id && (ht.id = mt.groups.id);
            const vt = [];
            if (mt.groups.class)
                for (const Pt of mt.groups.class.split("."))
                    Pt !== "" && vt.push(Pt);
            if (Je.className !== void 0)
                for (const Pt of Je.className.split("."))
                    Pt !== "" && vt.push(Pt);
            vt.length > 0 && (ht.className = vt.join(" "));
            const It = {};
            if (mt.groups.name && (It[mt.groups.name] = ht),
            at)
                for (const Pt of at)
                    Re(Pt) ? ht.appendChild(Pt) : typeof Pt == "string" ? ht.append(Pt) : "root"in Pt && (Object.assign(It, Pt),
                    ht.appendChild(Pt.root));
            for (const [Pt,_t] of Object.entries(Je))
                if (Pt !== "className")
                    if (Pt === "style")
                        for (const [Mt,Xe] of Object.entries(_t))
                            ht.style.setProperty(ot(Mt), typeof Xe == "number" ? Xe + "px" : "" + Xe);
                    else
                        Pt === "tabIndex" ? ht.tabIndex = _t : ht.setAttribute(ot(Pt), _t.toString());
            return It.root = ht,
            It
        }
        function Et(it, ...nt) {
            let Je, at;
            Array.isArray(nt[0]) ? (Je = {},
            at = nt[0]) : (Je = nt[0] || {},
            at = nt[1]);
            const mt = gt.exec(it);
            if (!mt || !mt.groups)
                throw new Error("Bad use of h");
            const yt = mt.groups.tag || "div"
              , ht = document.createElementNS("http://www.w3.org/2000/svg", yt);
            mt.groups.id && (ht.id = mt.groups.id);
            const vt = [];
            if (mt.groups.class)
                for (const Pt of mt.groups.class.split("."))
                    Pt !== "" && vt.push(Pt);
            if (Je.className !== void 0)
                for (const Pt of Je.className.split("."))
                    Pt !== "" && vt.push(Pt);
            vt.length > 0 && (ht.className = vt.join(" "));
            const It = {};
            if (mt.groups.name && (It[mt.groups.name] = ht),
            at)
                for (const Pt of at)
                    Re(Pt) ? ht.appendChild(Pt) : typeof Pt == "string" ? ht.append(Pt) : "root"in Pt && (Object.assign(It, Pt),
                    ht.appendChild(Pt.root));
            for (const [Pt,_t] of Object.entries(Je))
                if (Pt !== "className")
                    if (Pt === "style")
                        for (const [Mt,Xe] of Object.entries(_t))
                            ht.style.setProperty(ot(Mt), typeof Xe == "number" ? Xe + "px" : "" + Xe);
                    else
                        Pt === "tabIndex" ? ht.tabIndex = _t : ht.setAttribute(ot(Pt), _t.toString());
            return It.root = ht,
            It
        }
        function ot(it) {
            return it.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
        }
        function bt(it, nt, Je) {
            for (const {name: at, value: mt} of it.attributes)
                (!Je || Je.includes(at)) && nt.setAttribute(at, mt)
        }
        function rt(it, nt, Je) {
            const at = it.getAttribute(Je);
            at ? nt.setAttribute(Je, at) : nt.removeAttribute(Je)
        }
        function Ye(it, nt, Je) {
            bt(it, nt, Je);
            const at = new f.$Tc;
            return at.add(e.$qT.observe(it, at, {
                attributes: !0,
                attributeFilter: Je
            })(mt=>{
                for (const yt of mt)
                    yt.type === "attributes" && yt.attributeName && rt(it, nt, yt.attributeName)
            }
            )),
            at
        }
        class wt {
            constructor(nt, Je, at) {
                this.f = nt,
                this.g = Je,
                this.d = [];
                const {top: mt, left: yt, right: ht, bottom: vt} = at.getBoundingClientRect()
                  , It = this.d;
                let Pt = 0;
                It[Pt++] = yt,
                It[Pt++] = mt,
                It[Pt++] = ht,
                It[Pt++] = mt,
                It[Pt++] = yt,
                It[Pt++] = mt,
                It[Pt++] = yt,
                It[Pt++] = vt,
                It[Pt++] = ht,
                It[Pt++] = mt,
                It[Pt++] = ht,
                It[Pt++] = vt,
                It[Pt++] = yt,
                It[Pt++] = vt,
                It[Pt++] = ht,
                It[Pt++] = vt
            }
            contains(nt, Je) {
                const {d: at, f: mt, g: yt} = this;
                for (let ht = 0; ht < 4; ht++)
                    if ((0,
                    a.$Qm)(nt, Je, mt, yt, at[2 * ht], at[2 * ht + 1], at[2 * ht + 2], at[2 * ht + 3]))
                        return !0;
                return !1
            }
        }
        e.$jU = wt
    }),
    define(ge[250], be([1, 0, 7, 2, 207]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$lU = e.$kU = void 0,
        e.$mU = L;
        class I extends n.$Uc {
            constructor(E, $) {
                super(),
                this.B((0,
                t.$GS)(E, "dragover", v=>{
                    v.preventDefault(),
                    this.a || (this.a = setTimeout(()=>{
                        $(),
                        this.a = null
                    }
                    , 800))
                }
                )),
                ["dragleave", "drop", "dragend"].forEach(v=>{
                    this.B((0,
                    t.$GS)(E, v, ()=>{
                        this.b()
                    }
                    ))
                }
                )
            }
            b() {
                this.a && (clearTimeout(this.a),
                this.a = null)
            }
            dispose() {
                super.dispose(),
                this.b()
            }
        }
        e.$kU = I,
        e.$lU = {
            RESOURCES: "ResourceURLs",
            DOWNLOAD_URL: "DownloadURL",
            FILES: "Files",
            TEXT: C.$$s.text,
            INTERNAL_URI_LIST: "application/vnd.code.uri-list"
        };
        function L(y, E, $, v, f) {
            const g = document.createElement("div");
            g.className = $,
            g.textContent = E,
            f && (g.style.color = f),
            v && (g.style.background = v),
            y.dataTransfer && ((0,
            t.getWindow)(y).document.body.appendChild(g),
            y.dataTransfer.setDragImage(g, -10, -10),
            setTimeout(()=>g.remove(), 0))
        }
    }),
    define(ge[1337], be([1, 0, 7, 2, 61]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$UV = I;
        function I(L) {
            const y = new n.$Tc
              , E = y.add((0,
            t.$nT)());
            return y.add((0,
            C.autorun)($=>{
                E.setStyle(L.read($))
            }
            )),
            y
        }
    }),
    define(ge[393], be([1, 0, 7]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$RU = n,
        e.$SU = C,
        e.$TU = I,
        t = xe(t);
        function n(g, p={}) {
            const i = I(p);
            return i.textContent = g,
            i
        }
        function C(g, p={}) {
            const i = I(p);
            return E(i, $(g, !!p.renderCodeSegments), p.actionHandler, p.renderCodeSegments),
            i
        }
        function I(g) {
            const p = g.inline ? "span" : "div"
              , i = document.createElement(p);
            return g.className && (i.className = g.className),
            i
        }
        class L {
            constructor(p) {
                this.b = p,
                this.c = 0
            }
            eos() {
                return this.c >= this.b.length
            }
            next() {
                const p = this.peek();
                return this.advance(),
                p
            }
            peek() {
                return this.b[this.c]
            }
            advance() {
                this.c++
            }
        }
        var y;
        (function(g) {
            g[g.Invalid = 0] = "Invalid",
            g[g.Root = 1] = "Root",
            g[g.Text = 2] = "Text",
            g[g.Bold = 3] = "Bold",
            g[g.Italics = 4] = "Italics",
            g[g.Action = 5] = "Action",
            g[g.ActionClose = 6] = "ActionClose",
            g[g.Code = 7] = "Code",
            g[g.NewLine = 8] = "NewLine"
        }
        )(y || (y = {}));
        function E(g, p, i, c) {
            let h;
            if (p.type === y.Text)
                h = document.createTextNode(p.content || "");
            else if (p.type === y.Bold)
                h = document.createElement("b");
            else if (p.type === y.Italics)
                h = document.createElement("i");
            else if (p.type === y.Code && c)
                h = document.createElement("code");
            else if (p.type === y.Action && i) {
                const a = document.createElement("a");
                i.disposables.add(t.$HS(a, "click", d=>{
                    i.callback(String(p.index), d)
                }
                )),
                h = a
            } else
                p.type === y.NewLine ? h = document.createElement("br") : p.type === y.Root && (h = g);
            h && g !== h && g.appendChild(h),
            h && Array.isArray(p.children) && p.children.forEach(a=>{
                E(h, a, i, c)
            }
            )
        }
        function $(g, p) {
            const i = {
                type: y.Root,
                children: []
            };
            let c = 0
              , h = i;
            const a = []
              , d = new L(g);
            for (; !d.eos(); ) {
                let u = d.next();
                const s = u === "\\" && f(d.peek(), p) !== y.Invalid;
                if (s && (u = d.next()),
                !s && v(u, p) && u === d.peek()) {
                    d.advance(),
                    h.type === y.Text && (h = a.pop());
                    const r = f(u, p);
                    if (h.type === r || h.type === y.Action && r === y.ActionClose)
                        h = a.pop();
                    else {
                        const l = {
                            type: r,
                            children: []
                        };
                        r === y.Action && (l.index = c,
                        c++),
                        h.children.push(l),
                        a.push(h),
                        h = l
                    }
                } else if (u === `
`)
                    h.type === y.Text && (h = a.pop()),
                    h.children.push({
                        type: y.NewLine
                    });
                else if (h.type !== y.Text) {
                    const r = {
                        type: y.Text,
                        content: u
                    };
                    h.children.push(r),
                    a.push(h),
                    h = r
                } else
                    h.content += u
            }
            return h.type === y.Text && (h = a.pop()),
            a.length,
            i
        }
        function v(g, p) {
            return f(g, p) !== y.Invalid
        }
        function f(g, p) {
            switch (g) {
            case "*":
                return y.Bold;
            case "_":
                return y.Italics;
            case "[":
                return y.Action;
            case "]":
                return y.ActionClose;
            case "`":
                return p ? y.Code : y.Invalid;
            default:
                return y.Invalid
            }
        }
    }),
    define(ge[520], be([1, 0, 7, 2]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$qU = void 0,
        t = xe(t);
        class C {
            constructor() {
                this.a = new n.$Tc,
                this.b = null,
                this.c = null
            }
            dispose() {
                this.stopMonitoring(!1),
                this.a.dispose()
            }
            stopMonitoring(L, y) {
                if (!this.isMonitoring())
                    return;
                this.a.clear(),
                this.b = null;
                const E = this.c;
                this.c = null,
                L && E && E(y)
            }
            isMonitoring() {
                return !!this.b
            }
            startMonitoring(L, y, E, $, v) {
                this.isMonitoring() && this.stopMonitoring(!1),
                this.b = $,
                this.c = v;
                let f = L;
                try {
                    L.setPointerCapture(y),
                    this.a.add((0,
                    n.$Sc)(()=>{
                        try {
                            L.releasePointerCapture(y)
                        } catch {}
                    }
                    ))
                } catch {
                    f = t.getWindow(L)
                }
                this.a.add(t.$GS(f, t.$HT.POINTER_MOVE, g=>{
                    if (g.buttons !== E) {
                        this.stopMonitoring(!0);
                        return
                    }
                    g.preventDefault(),
                    this.b(g)
                }
                )),
                this.a.add(t.$GS(f, t.$HT.POINTER_UP, g=>this.stopMonitoring(!0)))
            }
        }
        e.$qU = C
    }),
    define(ge[273], be([1, 0, 7, 5, 2]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$ZV = void 0;
        class I extends C.$Uc {
            constructor($) {
                super(),
                this.a = this.B(new n.$le),
                this.onDidChange = this.a.event,
                this.b = ()=>this.f($, !0),
                this.c = null,
                this.f($, !1)
            }
            f($, v) {
                this.c?.removeEventListener("change", this.b),
                this.c = $.matchMedia(`(resolution: ${$.devicePixelRatio}dppx)`),
                this.c.addEventListener("change", this.b),
                v && this.a.fire()
            }
        }
        class L extends C.$Uc {
            get value() {
                return this.b
            }
            constructor($) {
                super(),
                this.a = this.B(new n.$le),
                this.onDidChange = this.a.event,
                this.b = this.c($);
                const v = this.B(new I($));
                this.B(v.onDidChange(()=>{
                    this.b = this.c($),
                    this.a.fire(this.b)
                }
                ))
            }
            c($) {
                const v = document.createElement("canvas").getContext("2d")
                  , f = $.devicePixelRatio || 1
                  , g = v.webkitBackingStorePixelRatio || v.mozBackingStorePixelRatio || v.msBackingStorePixelRatio || v.oBackingStorePixelRatio || v.backingStorePixelRatio || 1;
                return f / g
            }
        }
        class y {
            constructor() {
                this.a = new Map
            }
            b($) {
                const v = (0,
                t.getWindowId)($);
                let f = this.a.get(v);
                return f || (f = (0,
                C.$Nc)(new L($)),
                this.a.set(v, f),
                (0,
                C.$Nc)(n.Event.once(t.onDidUnregisterWindow)(({vscodeWindowId: g})=>{
                    g === v && (f?.dispose(),
                    this.a.delete(v))
                }
                ))),
                f
            }
            getInstance($) {
                return this.b($)
            }
        }
        e.$ZV = new y
    }),
    define(ge[162], be([1, 0, 7, 78, 13, 119, 5, 2, 216]), function(ce, e, t, n, C, I, L, y, E) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$nU = e.EventType = void 0,
        t = xe(t),
        C = xe(C);
        var $;
        (function(f) {
            f.Tap = "-monaco-gesturetap",
            f.Change = "-monaco-gesturechange",
            f.Start = "-monaco-gesturestart",
            f.End = "-monaco-gesturesend",
            f.Contextmenu = "-monaco-gesturecontextmenu"
        }
        )($ || (e.EventType = $ = {}));
        class v extends y.$Uc {
            static{this.c = -.005
            }static{this.g = 700
            }static{this.u = 400
            }constructor() {
                super(),
                this.h = !1,
                this.j = new E.$5c,
                this.m = new E.$5c,
                this.r = {},
                this.n = null,
                this.s = 0,
                this.B(L.Event.runAndSubscribe(t.onDidRegisterWindow, ({window: g, disposables: p})=>{
                    p.add(t.$GS(g.document, "touchstart", i=>this.w(i), {
                        passive: !1
                    })),
                    p.add(t.$GS(g.document, "touchend", i=>this.z(g, i))),
                    p.add(t.$GS(g.document, "touchmove", i=>this.G(i), {
                        passive: !1
                    }))
                }
                , {
                    window: n.$_R,
                    disposables: this.q
                }))
            }
            static addTarget(g) {
                if (!v.isTouchDevice())
                    return y.$Uc.None;
                v.f || (v.f = (0,
                y.$Nc)(new v));
                const p = v.f.j.push(g);
                return (0,
                y.$Sc)(p)
            }
            static ignoreTarget(g) {
                if (!v.isTouchDevice())
                    return y.$Uc.None;
                v.f || (v.f = (0,
                y.$Nc)(new v));
                const p = v.f.m.push(g);
                return (0,
                y.$Sc)(p)
            }
            static isTouchDevice() {
                return "ontouchstart"in n.$_R || navigator.maxTouchPoints > 0
            }
            dispose() {
                this.n && (this.n.dispose(),
                this.n = null),
                super.dispose()
            }
            w(g) {
                const p = Date.now();
                this.n && (this.n.dispose(),
                this.n = null);
                for (let i = 0, c = g.targetTouches.length; i < c; i++) {
                    const h = g.targetTouches.item(i);
                    this.r[h.identifier] = {
                        id: h.identifier,
                        initialTarget: h.target,
                        initialTimeStamp: p,
                        initialPageX: h.pageX,
                        initialPageY: h.pageY,
                        rollingTimestamps: [p],
                        rollingPageX: [h.pageX],
                        rollingPageY: [h.pageY]
                    };
                    const a = this.C($.Start, h.target);
                    a.pageX = h.pageX,
                    a.pageY = h.pageY,
                    this.D(a)
                }
                this.h && (g.preventDefault(),
                g.stopPropagation(),
                this.h = !1)
            }
            z(g, p) {
                const i = Date.now()
                  , c = Object.keys(this.r).length;
                for (let h = 0, a = p.changedTouches.length; h < a; h++) {
                    const d = p.changedTouches.item(h);
                    if (!this.r.hasOwnProperty(String(d.identifier))) {
                        console.warn("move of an UNKNOWN touch", d);
                        continue
                    }
                    const u = this.r[d.identifier]
                      , s = Date.now() - u.initialTimeStamp;
                    if (s < v.g && Math.abs(u.initialPageX - C.$rb(u.rollingPageX)) < 30 && Math.abs(u.initialPageY - C.$rb(u.rollingPageY)) < 30) {
                        const r = this.C($.Tap, u.initialTarget);
                        r.pageX = C.$rb(u.rollingPageX),
                        r.pageY = C.$rb(u.rollingPageY),
                        this.D(r)
                    } else if (s >= v.g && Math.abs(u.initialPageX - C.$rb(u.rollingPageX)) < 30 && Math.abs(u.initialPageY - C.$rb(u.rollingPageY)) < 30) {
                        const r = this.C($.Contextmenu, u.initialTarget);
                        r.pageX = C.$rb(u.rollingPageX),
                        r.pageY = C.$rb(u.rollingPageY),
                        this.D(r)
                    } else if (c === 1) {
                        const r = C.$rb(u.rollingPageX)
                          , l = C.$rb(u.rollingPageY)
                          , o = C.$rb(u.rollingTimestamps) - u.rollingTimestamps[0]
                          , b = r - u.rollingPageX[0]
                          , m = l - u.rollingPageY[0]
                          , w = [...this.j].filter(S=>u.initialTarget instanceof Node && S.contains(u.initialTarget));
                        this.F(g, w, i, Math.abs(b) / o, b > 0 ? 1 : -1, r, Math.abs(m) / o, m > 0 ? 1 : -1, l)
                    }
                    this.D(this.C($.End, u.initialTarget)),
                    delete this.r[d.identifier]
                }
                this.h && (p.preventDefault(),
                p.stopPropagation(),
                this.h = !1)
            }
            C(g, p) {
                const i = document.createEvent("CustomEvent");
                return i.initEvent(g, !1, !0),
                i.initialTarget = p,
                i.tapCount = 0,
                i
            }
            D(g) {
                if (g.type === $.Tap) {
                    const p = new Date().getTime();
                    let i = 0;
                    p - this.s > v.u ? i = 1 : i = 2,
                    this.s = p,
                    g.tapCount = i
                } else
                    (g.type === $.Change || g.type === $.Contextmenu) && (this.s = 0);
                if (g.initialTarget instanceof Node) {
                    for (const i of this.m)
                        if (i.contains(g.initialTarget))
                            return;
                    const p = [];
                    for (const i of this.j)
                        if (i.contains(g.initialTarget)) {
                            let c = 0
                              , h = g.initialTarget;
                            for (; h && h !== i; )
                                c++,
                                h = h.parentElement;
                            p.push([c, i])
                        }
                    p.sort((i,c)=>i[0] - c[0]);
                    for (const [i,c] of p)
                        c.dispatchEvent(g),
                        this.h = !0
                }
            }
            F(g, p, i, c, h, a, d, u, s) {
                this.n = t.$QS(g, ()=>{
                    const r = Date.now()
                      , l = r - i;
                    let o = 0
                      , b = 0
                      , m = !0;
                    c += v.c * l,
                    d += v.c * l,
                    c > 0 && (m = !1,
                    o = h * c * l),
                    d > 0 && (m = !1,
                    b = u * d * l);
                    const w = this.C($.Change);
                    w.translationX = o,
                    w.translationY = b,
                    p.forEach(S=>S.dispatchEvent(w)),
                    m || this.F(g, p, r, c, h, a + o, d, u, s + b)
                }
                )
            }
            G(g) {
                const p = Date.now();
                for (let i = 0, c = g.changedTouches.length; i < c; i++) {
                    const h = g.changedTouches.item(i);
                    if (!this.r.hasOwnProperty(String(h.identifier))) {
                        console.warn("end of an UNKNOWN touch", h);
                        continue
                    }
                    const a = this.r[h.identifier]
                      , d = this.C($.Change, a.initialTarget);
                    d.translationX = h.pageX - C.$rb(a.rollingPageX),
                    d.translationY = h.pageY - C.$rb(a.rollingPageY),
                    d.pageX = h.pageX,
                    d.pageY = h.pageY,
                    this.D(d),
                    a.rollingPageX.length > 3 && (a.rollingPageX.shift(),
                    a.rollingPageY.shift(),
                    a.rollingTimestamps.shift()),
                    a.rollingPageX.push(h.pageX),
                    a.rollingPageY.push(h.pageY),
                    a.rollingTimestamps.push(p)
                }
                this.h && (g.preventDefault(),
                g.stopPropagation(),
                this.h = !1)
            }
        }
        e.$nU = v,
        Ee([I.$0h], v, "isTouchDevice", null)
    }),
    define(ge[148], be([1, 0, 7, 32]), function(ce, e, t, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$oV = I,
        e.$pV = L,
        t = xe(t);
        const C = new RegExp(`(\\\\)?\\$\\((${n.ThemeIcon.iconNameExpression}(?:${n.ThemeIcon.iconModifierExpression})?)\\)`,"g");
        function I(y) {
            const E = new Array;
            let $, v = 0, f = 0;
            for (; ($ = C.exec(y)) !== null; ) {
                f = $.index || 0,
                v < f && E.push(y.substring(v, f)),
                v = ($.index || 0) + $[0].length;
                const [,g,p] = $;
                E.push(g ? `$(${p})` : L({
                    id: p
                }))
            }
            return v < y.length && E.push(y.substring(v)),
            E
        }
        function L(y) {
            const E = t.$("span");
            return E.classList.add(...n.ThemeIcon.asClassNameArray(y)),
            E
        }
    }),
    define(ge[303], be([1, 0, 7, 272, 90, 148, 2, 65]), function(ce, e, t, n, C, I, L, y) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$GW = void 0,
        t = xe(t),
        y = xe(y);
        class E extends L.$Uc {
            constructor(v, f) {
                super(),
                this.m = f,
                this.b = "",
                this.c = "",
                this.f = [],
                this.h = !1,
                this.g = f?.supportIcons ?? !1,
                this.a = t.$OT(v, t.$("span.monaco-highlighted-label"))
            }
            get element() {
                return this.a
            }
            set(v, f=[], g="", p) {
                v || (v = ""),
                p && (v = E.escapeNewLines(v, f)),
                !(this.h && this.b === v && this.c === g && y.$io(this.f, f)) && (this.b = v,
                this.c = g,
                this.f = f,
                this.n())
            }
            n() {
                const v = [];
                let f = 0;
                for (const g of this.f) {
                    if (g.end === g.start)
                        continue;
                    if (f < g.start) {
                        const c = this.b.substring(f, g.start);
                        this.g ? v.push(...(0,
                        I.$oV)(c)) : v.push(c),
                        f = g.start
                    }
                    const p = this.b.substring(f, g.end)
                      , i = t.$("span.highlight", void 0, ...this.g ? (0,
                    I.$oV)(p) : [p]);
                    g.extraClasses && i.classList.add(...g.extraClasses),
                    v.push(i),
                    f = g.end
                }
                if (f < this.b.length) {
                    const g = this.b.substring(f);
                    this.g ? v.push(...(0,
                    I.$oV)(g)) : v.push(g)
                }
                if (t.$QT(this.a, ...v),
                this.m?.hoverDelegate?.showNativeHover)
                    this.a.title = this.c;
                else if (!this.j && this.c !== "") {
                    const g = this.m?.hoverDelegate ?? (0,
                    C.$KU)("mouse");
                    this.j = this.B((0,
                    n.$wV)().setupManagedHover(g, this.a, this.c))
                } else
                    this.j && this.j.update(this.c);
                this.h = !0
            }
            static escapeNewLines(v, f) {
                let g = 0
                  , p = 0;
                return v.replace(/\r\n|\r|\n/g, (i,c)=>{
                    p = i === `\r
` ? -1 : 0,
                    c += g;
                    for (const h of f)
                        h.end <= c || (h.start >= c && (h.start += p),
                        h.end >= c && (h.end += p));
                    return g += p,
                    "\u23CE"
                }
                )
            }
        }
        e.$GW = E
    }),
    define(ge[521], be([1, 0, 7, 272, 90, 148]), function(ce, e, t, n, C, I) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$IW = void 0;
        class L {
            constructor(E) {
                this.b = E
            }
            set text(E) {
                (0,
                t.$QT)(this.b, ...(0,
                I.$oV)(E ?? ""))
            }
            set title(E) {
                !this.a && E ? this.a = (0,
                n.$wV)().setupManagedHover((0,
                C.$KU)("mouse"), this.b, E) : this.a && this.a.update(E)
            }
            dispose() {
                this.a?.dispose()
            }
        }
        e.$IW = L
    }),
    define(ge[1338], be([1, 0, 7]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$4U = void 0;
        class n {
            constructor(I) {
                this.d = I,
                this.a = new Map,
                this.b = new Set,
                this.c = !1
            }
            alloc(I) {
                let L = this.g(I).pop()
                  , y = !1;
                if (L)
                    y = this.b.has(L.domNode),
                    y && this.b.delete(L.domNode);
                else {
                    const E = (0,
                    t.$)(".monaco-list-row")
                      , v = this.h(I).renderTemplate(E);
                    L = {
                        domNode: E,
                        templateId: I,
                        templateData: v
                    }
                }
                return {
                    row: L,
                    isReusingConnectedDomNode: y
                }
            }
            release(I) {
                I && this.e(I)
            }
            transact(I) {
                if (this.c)
                    throw new Error("Already in transaction");
                this.c = !0;
                try {
                    I()
                } finally {
                    for (const L of this.b)
                        this.f(L);
                    this.b.clear(),
                    this.c = !1
                }
            }
            e(I) {
                const {domNode: L, templateId: y} = I;
                L && (this.c ? this.b.add(L) : this.f(L)),
                this.g(y).push(I)
            }
            f(I) {
                I.classList.remove("scrolling"),
                I.remove()
            }
            g(I) {
                let L = this.a.get(I);
                return L || (L = [],
                this.a.set(I, L)),
                L
            }
            dispose() {
                this.a.forEach((I,L)=>{
                    for (const y of I)
                        this.h(L).disposeTemplate(y.templateData),
                        y.templateData = null
                }
                ),
                this.a.clear(),
                this.b.clear()
            }
            h(I) {
                const L = this.d.get(I);
                if (!L)
                    throw new Error(`No renderer found for ${I}`);
                return L
            }
        }
        e.$4U = n
    }),
    define(ge[1339], be([1, 0, 11, 2, 175]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$vU = void 0;
        class I extends n.$Uc {
            constructor(y, E, $) {
                super(),
                this.a = y,
                this.b = E,
                this.c = $,
                this.f = null,
                this.m = !1,
                this.j = !1,
                this.g = !1,
                this.h = !1,
                this.n = this.B(new t.$Ph)
            }
            setVisibility(y) {
                this.a !== y && (this.a = y,
                this.s())
            }
            setShouldBeVisible(y) {
                this.g = y,
                this.s()
            }
            r() {
                return this.a === C.ScrollbarVisibility.Hidden ? !1 : this.a === C.ScrollbarVisibility.Visible ? !0 : this.g
            }
            s() {
                const y = this.r();
                this.h !== y && (this.h = y,
                this.ensureVisibility())
            }
            setIsNeeded(y) {
                this.j !== y && (this.j = y,
                this.ensureVisibility())
            }
            setDomNode(y) {
                this.f = y,
                this.f.setClassName(this.c),
                this.setShouldBeVisible(!1)
            }
            ensureVisibility() {
                if (!this.j) {
                    this.u(!1);
                    return
                }
                this.h ? this.t() : this.u(!0)
            }
            t() {
                this.m || (this.m = !0,
                this.n.setIfNotSet(()=>{
                    this.f?.setClassName(this.b)
                }
                , 0))
            }
            u(y) {
                this.n.cancel(),
                this.m && (this.m = !1,
                this.f?.setClassName(this.c + (y ? " fade" : "")))
            }
        }
        e.$vU = I
    }),
    define(ge[1340], be([1, 0, 7, 162, 13, 5, 17, 2, 12]), function(ce, e, t, n, C, I, L, y, E) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$yV = void 0,
        t = xe(t),
        C = xe(C);
        class $ extends y.$Uc {
            constructor(f, g, p, i) {
                super(),
                this.f = 0,
                this.b = i || Object.create(null),
                this.c = [],
                this.a = document.createElement("select"),
                this.a.className = "monaco-select-box",
                typeof this.b.ariaLabel == "string" && this.a.setAttribute("aria-label", this.b.ariaLabel),
                typeof this.b.ariaDescription == "string" && this.a.setAttribute("aria-description", this.b.ariaDescription),
                this.g = this.B(new I.$le),
                this.h = p,
                this.j(),
                this.setOptions(f, g)
            }
            j() {
                this.B(n.$nU.addTarget(this.a)),
                [n.EventType.Tap].forEach(f=>{
                    this.B(t.$GS(this.a, f, g=>{
                        this.a.focus()
                    }
                    ))
                }
                ),
                this.B(t.$HS(this.a, "click", f=>{
                    t.$JT.stop(f, !0)
                }
                )),
                this.B(t.$HS(this.a, "change", f=>{
                    this.a.title = f.target.value,
                    this.g.fire({
                        index: f.target.selectedIndex,
                        selected: f.target.value
                    })
                }
                )),
                this.B(t.$HS(this.a, "keydown", f=>{
                    let g = !1;
                    E.$k ? (f.keyCode === L.KeyCode.DownArrow || f.keyCode === L.KeyCode.UpArrow || f.keyCode === L.KeyCode.Space) && (g = !0) : (f.keyCode === L.KeyCode.DownArrow && f.altKey || f.keyCode === L.KeyCode.Space || f.keyCode === L.KeyCode.Enter) && (g = !0),
                    g && f.stopPropagation()
                }
                ))
            }
            get onDidSelect() {
                return this.g.event
            }
            setOptions(f, g) {
                (!this.c || !C.$tb(this.c, f)) && (this.c = f,
                this.a.options.length = 0,
                this.c.forEach((p,i)=>{
                    this.a.add(this.m(p.text, i, p.isDisabled))
                }
                )),
                g !== void 0 && this.select(g)
            }
            select(f) {
                this.c.length === 0 ? this.f = 0 : f >= 0 && f < this.c.length ? this.f = f : f > this.c.length - 1 ? this.select(this.c.length - 1) : this.f < 0 && (this.f = 0),
                this.a.selectedIndex = this.f,
                this.f < this.c.length && typeof this.c[this.f].text == "string" ? this.a.title = this.c[this.f].text : this.a.title = ""
            }
            setAriaLabel(f) {
                this.b.ariaLabel = f,
                this.a.setAttribute("aria-label", f)
            }
            focus() {
                this.a && (this.a.tabIndex = 0,
                this.a.focus())
            }
            blur() {
                this.a && (this.a.tabIndex = -1,
                this.a.blur())
            }
            setEnabled(f) {
                this.a.disabled = !f
            }
            setFocusable(f) {
                this.a.tabIndex = f ? 0 : -1
            }
            render(f) {
                f.classList.add("select-container"),
                f.appendChild(this.a),
                this.setOptions(this.c, this.f),
                this.applyStyles()
            }
            style(f) {
                this.h = f,
                this.applyStyles()
            }
            applyStyles() {
                this.a && (this.a.style.backgroundColor = this.h.selectBackground ?? "",
                this.a.style.color = this.h.selectForeground ?? "",
                this.a.style.borderColor = this.h.selectBorder ?? "")
            }
            m(f, g, p) {
                const i = document.createElement("option");
                return i.value = f,
                i.text = f,
                i.disabled = !!p,
                i
            }
        }
        e.$yV = $
    }),
    define(ge[743], be([1, 0, 215, 13, 11, 461, 518, 5, 89]), function(ce, e, t, n, C, I, L, y, E) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$aX = void 0,
        e.$$W = $,
        e.$_W = v;
        function $(p) {
            return typeof p == "object" && "visibility"in p && "data"in p
        }
        function v(p) {
            switch (p) {
            case !0:
                return t.TreeVisibility.Visible;
            case !1:
                return t.TreeVisibility.Hidden;
            default:
                return p
            }
        }
        function f(p) {
            return typeof p.collapsible == "boolean"
        }
        class g {
            constructor(i, c, h, a={}) {
                this.p = i,
                this.q = c,
                this.rootRef = [],
                this.d = new y.$te,
                this.f = new y.$le,
                this.onDidChangeCollapseState = this.d.wrapEvent(this.f.event),
                this.g = new y.$le,
                this.onDidChangeRenderNodeCount = this.d.wrapEvent(this.g.event),
                this.m = new y.$le,
                this.onDidSplice = this.m.event,
                this.o = new C.$Ch(I.$ge),
                this.h = typeof a.collapseByDefault > "u" ? !1 : a.collapseByDefault,
                this.j = a.allowNonCollapsibleParents ?? !1,
                this.k = a.filter,
                this.l = typeof a.autoExpandSingleChildren > "u" ? !1 : a.autoExpandSingleChildren,
                this.c = {
                    parent: void 0,
                    element: h,
                    children: [],
                    depth: 0,
                    visibleChildrenCount: 0,
                    visibleChildIndex: -1,
                    collapsible: !1,
                    collapsed: !1,
                    renderNodeCount: 0,
                    visibility: t.TreeVisibility.Visible,
                    visible: !0,
                    filterData: void 0
                }
            }
            splice(i, c, h=E.Iterable.empty(), a={}) {
                if (i.length === 0)
                    throw new t.$9W(this.p,"Invalid tree location");
                a.diffIdentityProvider ? this.s(a.diffIdentityProvider, i, c, h, a) : this.t(i, c, h, a)
            }
            s(i, c, h, a=E.Iterable.empty(), d, u=d.diffDepth ?? 0) {
                const {parentNode: s} = this.H(c);
                if (!s.lastDiffIds)
                    return this.t(c, h, a, d);
                const r = [...a]
                  , l = c[c.length - 1]
                  , o = new L.$Ut({
                    getElements: ()=>s.lastDiffIds
                },{
                    getElements: ()=>[...s.children.slice(0, l), ...r, ...s.children.slice(l + h)].map(T=>i.getId(T.element).toString())
                }).ComputeDiff(!1);
                if (o.quitEarly)
                    return s.lastDiffIds = void 0,
                    this.t(c, h, r, d);
                const b = c.slice(0, -1)
                  , m = (T,D,k)=>{
                    if (u > 0)
                        for (let P = 0; P < k; P++)
                            T--,
                            D--,
                            this.s(i, [...b, T, 0], Number.MAX_SAFE_INTEGER, r[D].children, d, u - 1)
                }
                ;
                let w = Math.min(s.children.length, l + h)
                  , S = r.length;
                for (const T of o.changes.sort((D,k)=>k.originalStart - D.originalStart))
                    m(w, S, w - (T.originalStart + T.originalLength)),
                    w = T.originalStart,
                    S = T.modifiedStart - l,
                    this.t([...b, w], T.originalLength, E.Iterable.slice(r, S, S + T.modifiedLength), d);
                m(w, S, w)
            }
            t(i, c, h=E.Iterable.empty(), {onDidCreateNode: a, onDidDeleteNode: d, diffIdentityProvider: u}) {
                const {parentNode: s, listIndex: r, revealed: l, visible: o} = this.H(i)
                  , b = []
                  , m = E.Iterable.map(h, O=>this.x(O, s, s.visible ? t.TreeVisibility.Visible : t.TreeVisibility.Hidden, l, b, a))
                  , w = i[i.length - 1];
                let S = 0;
                for (let O = w; O >= 0 && O < s.children.length; O--) {
                    const R = s.children[O];
                    if (R.visible) {
                        S = R.visibleChildIndex;
                        break
                    }
                }
                const T = [];
                let D = 0
                  , k = 0;
                for (const O of m)
                    T.push(O),
                    k += O.renderNodeCount,
                    O.visible && (O.visibleChildIndex = S + D++);
                const P = (0,
                n.$4b)(s.children, w, c, T);
                u ? s.lastDiffIds ? (0,
                n.$4b)(s.lastDiffIds, w, c, T.map(O=>u.getId(O.element).toString())) : s.lastDiffIds = s.children.map(O=>u.getId(O.element).toString()) : s.lastDiffIds = void 0;
                let A = 0;
                for (const O of P)
                    O.visible && A++;
                if (A !== 0)
                    for (let O = w + T.length; O < s.children.length; O++) {
                        const R = s.children[O];
                        R.visible && (R.visibleChildIndex -= A)
                    }
                if (s.visibleChildrenCount += D - A,
                l && o) {
                    const O = P.reduce((R,N)=>R + (N.visible ? N.renderNodeCount : 0), 0);
                    this.C(s, k - O),
                    this.q.splice(r, O, b)
                }
                if (P.length > 0 && d) {
                    const O = R=>{
                        d(R),
                        R.children.forEach(O)
                    }
                    ;
                    P.forEach(O)
                }
                this.m.fire({
                    insertedNodes: T,
                    deletedNodes: P
                });
                let M = s;
                for (; M; ) {
                    if (M.visibility === t.TreeVisibility.Recurse) {
                        this.o.trigger(()=>this.refilter());
                        break
                    }
                    M = M.parent
                }
            }
            rerender(i) {
                if (i.length === 0)
                    throw new t.$9W(this.p,"Invalid tree location");
                const {node: c, listIndex: h, revealed: a} = this.G(i);
                c.visible && a && this.q.splice(h, 1, [c])
            }
            updateElementHeight(i, c) {
                if (i.length === 0)
                    throw new t.$9W(this.p,"Invalid tree location");
                const {listIndex: h} = this.G(i);
                this.q.updateElementHeight(h, c)
            }
            has(i) {
                return this.E(i)
            }
            getListIndex(i) {
                const {listIndex: c, visible: h, revealed: a} = this.G(i);
                return h && a ? c : -1
            }
            getListRenderCount(i) {
                return this.F(i).renderNodeCount
            }
            isCollapsible(i) {
                return this.F(i).collapsible
            }
            setCollapsible(i, c) {
                const h = this.F(i);
                typeof c > "u" && (c = !h.collapsible);
                const a = {
                    collapsible: c
                };
                return this.d.bufferEvents(()=>this.u(i, a))
            }
            isCollapsed(i) {
                return this.F(i).collapsed
            }
            setCollapsed(i, c, h) {
                const a = this.F(i);
                typeof c > "u" && (c = !a.collapsed);
                const d = {
                    collapsed: c,
                    recursive: h || !1
                };
                return this.d.bufferEvents(()=>this.u(i, d))
            }
            u(i, c) {
                const {node: h, listIndex: a, revealed: d} = this.G(i)
                  , u = this.v(h, a, d, c);
                if (h !== this.c && this.l && u && !f(c) && h.collapsible && !h.collapsed && !c.recursive) {
                    let s = -1;
                    for (let r = 0; r < h.children.length; r++)
                        if (h.children[r].visible)
                            if (s > -1) {
                                s = -1;
                                break
                            } else
                                s = r;
                    s > -1 && this.u([...i, s], c)
                }
                return u
            }
            v(i, c, h, a) {
                const d = this.w(i, a, !1);
                if (!h || !i.visible || !d)
                    return d;
                const u = i.renderNodeCount
                  , s = this.y(i)
                  , r = u - (c === -1 ? 0 : 1);
                return this.q.splice(c + 1, r, s.slice(1)),
                d
            }
            w(i, c, h) {
                let a;
                if (i === this.c ? a = !1 : (f(c) ? (a = i.collapsible !== c.collapsible,
                i.collapsible = c.collapsible) : i.collapsible ? (a = i.collapsed !== c.collapsed,
                i.collapsed = c.collapsed) : a = !1,
                a && this.f.fire({
                    node: i,
                    deep: h
                })),
                !f(c) && c.recursive)
                    for (const d of i.children)
                        a = this.w(d, c, !0) || a;
                return a
            }
            expandTo(i) {
                this.d.bufferEvents(()=>{
                    let c = this.F(i);
                    for (; c.parent; )
                        c = c.parent,
                        i = i.slice(0, i.length - 1),
                        c.collapsed && this.u(i, {
                            collapsed: !1,
                            recursive: !1
                        })
                }
                )
            }
            refilter() {
                const i = this.c.renderNodeCount
                  , c = this.A(this.c);
                this.q.splice(0, i, c),
                this.o.cancel()
            }
            x(i, c, h, a, d, u) {
                const s = {
                    parent: c,
                    element: i.element,
                    children: [],
                    depth: c.depth + 1,
                    visibleChildrenCount: 0,
                    visibleChildIndex: -1,
                    collapsible: typeof i.collapsible == "boolean" ? i.collapsible : typeof i.collapsed < "u",
                    collapsed: typeof i.collapsed > "u" ? this.h : i.collapsed,
                    renderNodeCount: 1,
                    visibility: t.TreeVisibility.Visible,
                    visible: !0,
                    filterData: void 0
                }
                  , r = this.D(s, h);
                s.visibility = r,
                a && d.push(s);
                const l = i.children || E.Iterable.empty()
                  , o = a && r !== t.TreeVisibility.Hidden && !s.collapsed;
                let b = 0
                  , m = 1;
                for (const w of l) {
                    const S = this.x(w, s, r, o, d, u);
                    s.children.push(S),
                    m += S.renderNodeCount,
                    S.visible && (S.visibleChildIndex = b++)
                }
                return this.j || (s.collapsible = s.collapsible || s.children.length > 0),
                s.visibleChildrenCount = b,
                s.visible = r === t.TreeVisibility.Recurse ? b > 0 : r === t.TreeVisibility.Visible,
                s.visible ? s.collapsed || (s.renderNodeCount = m) : (s.renderNodeCount = 0,
                a && d.pop()),
                u?.(s),
                s
            }
            y(i) {
                const c = i.renderNodeCount
                  , h = [];
                return this.z(i, h),
                this.C(i.parent, h.length - c),
                h
            }
            z(i, c) {
                if (i.visible === !1)
                    return 0;
                if (c.push(i),
                i.renderNodeCount = 1,
                !i.collapsed)
                    for (const h of i.children)
                        i.renderNodeCount += this.z(h, c);
                return this.g.fire(i),
                i.renderNodeCount
            }
            A(i) {
                const c = i.renderNodeCount
                  , h = [];
                return this.B(i, i.visible ? t.TreeVisibility.Visible : t.TreeVisibility.Hidden, h),
                this.C(i.parent, h.length - c),
                h
            }
            B(i, c, h, a=!0) {
                let d;
                if (i !== this.c) {
                    if (d = this.D(i, c),
                    d === t.TreeVisibility.Hidden)
                        return i.visible = !1,
                        i.renderNodeCount = 0,
                        !1;
                    a && h.push(i)
                }
                const u = h.length;
                i.renderNodeCount = i === this.c ? 0 : 1;
                let s = !1;
                if (!i.collapsed || d !== t.TreeVisibility.Hidden) {
                    let r = 0;
                    for (const l of i.children)
                        s = this.B(l, d, h, a && !i.collapsed) || s,
                        l.visible && (l.visibleChildIndex = r++);
                    i.visibleChildrenCount = r
                } else
                    i.visibleChildrenCount = 0;
                return i !== this.c && (i.visible = d === t.TreeVisibility.Recurse ? s : d === t.TreeVisibility.Visible,
                i.visibility = d),
                i.visible ? i.collapsed || (i.renderNodeCount += h.length - u) : (i.renderNodeCount = 0,
                a && h.pop()),
                this.g.fire(i),
                i.visible
            }
            C(i, c) {
                if (c !== 0)
                    for (; i; )
                        i.renderNodeCount += c,
                        this.g.fire(i),
                        i = i.parent
            }
            D(i, c) {
                const h = this.k ? this.k.filter(i.element, c) : t.TreeVisibility.Visible;
                return typeof h == "boolean" ? (i.filterData = void 0,
                h ? t.TreeVisibility.Visible : t.TreeVisibility.Hidden) : $(h) ? (i.filterData = h.data,
                v(h.visibility)) : (i.filterData = void 0,
                v(h))
            }
            E(i, c=this.c) {
                if (!i || i.length === 0)
                    return !0;
                const [h,...a] = i;
                return h < 0 || h > c.children.length ? !1 : this.E(a, c.children[h])
            }
            F(i, c=this.c) {
                if (!i || i.length === 0)
                    return c;
                const [h,...a] = i;
                if (h < 0 || h > c.children.length)
                    throw new t.$9W(this.p,"Invalid tree location");
                return this.F(a, c.children[h])
            }
            G(i) {
                if (i.length === 0)
                    return {
                        node: this.c,
                        listIndex: -1,
                        revealed: !0,
                        visible: !1
                    };
                const {parentNode: c, listIndex: h, revealed: a, visible: d} = this.H(i)
                  , u = i[i.length - 1];
                if (u < 0 || u > c.children.length)
                    throw new t.$9W(this.p,"Invalid tree location");
                const s = c.children[u];
                return {
                    node: s,
                    listIndex: h,
                    revealed: a,
                    visible: d && s.visible
                }
            }
            H(i, c=this.c, h=0, a=!0, d=!0) {
                const [u,...s] = i;
                if (u < 0 || u > c.children.length)
                    throw new t.$9W(this.p,"Invalid tree location");
                for (let r = 0; r < u; r++)
                    h += c.children[r].renderNodeCount;
                return a = a && !c.collapsed,
                d = d && c.visible,
                s.length === 0 ? {
                    parentNode: c,
                    listIndex: h,
                    revealed: a,
                    visible: d
                } : this.H(s, c.children[u], h + 1, a, d)
            }
            getNode(i=[]) {
                return this.F(i)
            }
            getNodeLocation(i) {
                const c = [];
                let h = i;
                for (; h.parent; )
                    c.push(h.parent.children.indexOf(h)),
                    h = h.parent;
                return c.reverse()
            }
            getParentNodeLocation(i) {
                if (i.length !== 0)
                    return i.length === 1 ? [] : (0,
                    n.$sb)(i)[0]
            }
            getFirstElementChild(i) {
                const c = this.F(i);
                if (c.children.length !== 0)
                    return c.children[0].element
            }
            getLastElementAncestor(i=[]) {
                const c = this.F(i);
                if (c.children.length !== 0)
                    return this.I(c)
            }
            I(i) {
                return i.children.length === 0 ? i.element : this.I(i.children[i.children.length - 1])
            }
        }
        e.$aX = g
    }),
    define(ge[610], be([1, 0, 743, 215, 89]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$hX = void 0;
        class I {
            get size() {
                return this.d.size
            }
            constructor(y, E, $={}) {
                this.k = y,
                this.rootRef = null,
                this.d = new Map,
                this.f = new Map,
                this.c = new t.$aX(y,E,null,$),
                this.onDidSplice = this.c.onDidSplice,
                this.onDidChangeCollapseState = this.c.onDidChangeCollapseState,
                this.onDidChangeRenderNodeCount = this.c.onDidChangeRenderNodeCount,
                $.sorter && (this.j = {
                    compare(v, f) {
                        return $.sorter.compare(v.element, f.element)
                    }
                }),
                this.h = $.identityProvider
            }
            setChildren(y, E=C.Iterable.empty(), $={}) {
                const v = this.o(y);
                this.l(v, this.m(E), $)
            }
            l(y, E=C.Iterable.empty(), $) {
                const v = new Set
                  , f = new Set
                  , g = i=>{
                    if (i.element === null)
                        return;
                    const c = i;
                    if (v.add(c.element),
                    this.d.set(c.element, c),
                    this.h) {
                        const h = this.h.getId(c.element).toString();
                        f.add(h),
                        this.f.set(h, c)
                    }
                    $.onDidCreateNode?.(c)
                }
                  , p = i=>{
                    if (i.element === null)
                        return;
                    const c = i;
                    if (v.has(c.element) || this.d.delete(c.element),
                    this.h) {
                        const h = this.h.getId(c.element).toString();
                        f.has(h) || this.f.delete(h)
                    }
                    $.onDidDeleteNode?.(c)
                }
                ;
                this.c.splice([...y, 0], Number.MAX_VALUE, E, {
                    ...$,
                    onDidCreateNode: g,
                    onDidDeleteNode: p
                })
            }
            m(y=C.Iterable.empty()) {
                return this.j && (y = [...y].sort(this.j.compare.bind(this.j))),
                C.Iterable.map(y, E=>{
                    let $ = this.d.get(E.element);
                    if (!$ && this.h) {
                        const g = this.h.getId(E.element).toString();
                        $ = this.f.get(g)
                    }
                    if (!$) {
                        let g;
                        return typeof E.collapsed > "u" ? g = void 0 : E.collapsed === n.ObjectTreeElementCollapseState.Collapsed || E.collapsed === n.ObjectTreeElementCollapseState.PreserveOrCollapsed ? g = !0 : E.collapsed === n.ObjectTreeElementCollapseState.Expanded || E.collapsed === n.ObjectTreeElementCollapseState.PreserveOrExpanded ? g = !1 : g = !!E.collapsed,
                        {
                            ...E,
                            children: this.m(E.children),
                            collapsed: g
                        }
                    }
                    const v = typeof E.collapsible == "boolean" ? E.collapsible : $.collapsible;
                    let f;
                    return typeof E.collapsed > "u" || E.collapsed === n.ObjectTreeElementCollapseState.PreserveOrCollapsed || E.collapsed === n.ObjectTreeElementCollapseState.PreserveOrExpanded ? f = $.collapsed : E.collapsed === n.ObjectTreeElementCollapseState.Collapsed ? f = !0 : E.collapsed === n.ObjectTreeElementCollapseState.Expanded ? f = !1 : f = !!E.collapsed,
                    {
                        ...E,
                        collapsible: v,
                        collapsed: f,
                        children: this.m(E.children)
                    }
                }
                )
            }
            rerender(y) {
                const E = this.o(y);
                this.c.rerender(E)
            }
            updateElementHeight(y, E) {
                const $ = this.o(y);
                this.c.updateElementHeight($, E)
            }
            resort(y=null, E=!0) {
                if (!this.j)
                    return;
                const $ = this.o(y)
                  , v = this.c.getNode($);
                this.l($, this.n(v, E), {})
            }
            n(y, E, $=!0) {
                let v = [...y.children];
                return (E || $) && (v = v.sort(this.j.compare.bind(this.j))),
                C.Iterable.map(v, f=>({
                    element: f.element,
                    collapsible: f.collapsible,
                    collapsed: f.collapsed,
                    children: this.n(f, E, !1)
                }))
            }
            getFirstElementChild(y=null) {
                const E = this.o(y);
                return this.c.getFirstElementChild(E)
            }
            getLastElementAncestor(y=null) {
                const E = this.o(y);
                return this.c.getLastElementAncestor(E)
            }
            has(y) {
                return this.d.has(y)
            }
            getListIndex(y) {
                const E = this.o(y);
                return this.c.getListIndex(E)
            }
            getListRenderCount(y) {
                const E = this.o(y);
                return this.c.getListRenderCount(E)
            }
            isCollapsible(y) {
                const E = this.o(y);
                return this.c.isCollapsible(E)
            }
            setCollapsible(y, E) {
                const $ = this.o(y);
                return this.c.setCollapsible($, E)
            }
            isCollapsed(y) {
                const E = this.o(y);
                return this.c.isCollapsed(E)
            }
            setCollapsed(y, E, $) {
                const v = this.o(y);
                return this.c.setCollapsed(v, E, $)
            }
            expandTo(y) {
                const E = this.o(y);
                this.c.expandTo(E)
            }
            refilter() {
                this.c.refilter()
            }
            getNode(y=null) {
                if (y === null)
                    return this.c.getNode(this.c.rootRef);
                const E = this.d.get(y);
                if (!E)
                    throw new n.$9W(this.k,`Tree element not found: ${y}`);
                return E
            }
            getNodeLocation(y) {
                return y.element
            }
            getParentNodeLocation(y) {
                if (y === null)
                    throw new n.$9W(this.k,"Invalid getParentNodeLocation call");
                const E = this.d.get(y);
                if (!E)
                    throw new n.$9W(this.k,`Tree element not found: ${y}`);
                const $ = this.c.getNodeLocation(E)
                  , v = this.c.getParentNodeLocation($);
                return this.c.getNode(v).element
            }
            o(y) {
                if (y === null)
                    return [];
                const E = this.d.get(y);
                if (!E)
                    throw new n.$9W(this.k,`Tree element not found: ${y}`);
                return this.c.getNodeLocation(E)
            }
        }
        e.$hX = I
    }),
    define(ge[1341], be([1, 0, 610, 215, 13, 5, 89]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$mX = e.$lX = e.$kX = void 0,
        e.$iX = E,
        e.$jX = v;
        function y(u) {
            const s = [u.element]
              , r = u.incompressible || !1;
            return {
                element: {
                    elements: s,
                    incompressible: r
                },
                children: L.Iterable.map(L.Iterable.from(u.children), y),
                collapsible: u.collapsible,
                collapsed: u.collapsed
            }
        }
        function E(u) {
            const s = [u.element]
              , r = u.incompressible || !1;
            let l, o;
            for (; [o,l] = L.Iterable.consume(L.Iterable.from(u.children), 2),
            !(o.length !== 1 || o[0].incompressible); )
                u = o[0],
                s.push(u.element);
            return {
                element: {
                    elements: s,
                    incompressible: r
                },
                children: L.Iterable.map(L.Iterable.concat(o, l), E),
                collapsible: u.collapsible,
                collapsed: u.collapsed
            }
        }
        function $(u, s=0) {
            let r;
            return s < u.element.elements.length - 1 ? r = [$(u, s + 1)] : r = L.Iterable.map(L.Iterable.from(u.children), l=>$(l, 0)),
            s === 0 && u.element.incompressible ? {
                element: u.element.elements[s],
                children: r,
                incompressible: !0,
                collapsible: u.collapsible,
                collapsed: u.collapsed
            } : {
                element: u.element.elements[s],
                children: r,
                collapsible: u.collapsible,
                collapsed: u.collapsed
            }
        }
        function v(u) {
            return $(u, 0)
        }
        function f(u, s, r) {
            return u.element === s ? {
                ...u,
                children: r
            } : {
                ...u,
                children: L.Iterable.map(L.Iterable.from(u.children), l=>f(l, s, r))
            }
        }
        const g = u=>({
            getId(s) {
                return s.elements.map(r=>u.getId(r).toString()).join("\0")
            }
        });
        class p {
            get onDidSplice() {
                return this.c.onDidSplice
            }
            get onDidChangeCollapseState() {
                return this.c.onDidChangeCollapseState
            }
            get onDidChangeRenderNodeCount() {
                return this.c.onDidChangeRenderNodeCount
            }
            get size() {
                return this.d.size
            }
            constructor(s, r, l={}) {
                this.h = s,
                this.rootRef = null,
                this.d = new Map,
                this.c = new t.$hX(s,r,l),
                this.f = typeof l.compressionEnabled > "u" ? !0 : l.compressionEnabled,
                this.g = l.identityProvider
            }
            setChildren(s, r=L.Iterable.empty(), l) {
                const o = l.diffIdentityProvider && g(l.diffIdentityProvider);
                if (s === null) {
                    const M = L.Iterable.map(r, this.f ? E : y);
                    this.i(null, M, {
                        diffIdentityProvider: o,
                        diffDepth: 1 / 0
                    });
                    return
                }
                const b = this.d.get(s);
                if (!b)
                    throw new n.$9W(this.h,"Unknown compressed tree node");
                const m = this.c.getNode(b)
                  , w = this.c.getParentNodeLocation(b)
                  , S = this.c.getNode(w)
                  , T = v(m)
                  , D = f(T, s, r)
                  , k = (this.f ? E : y)(D)
                  , P = l.diffIdentityProvider ? (M,O)=>l.diffIdentityProvider.getId(M) === l.diffIdentityProvider.getId(O) : void 0;
                if ((0,
                C.$tb)(k.element.elements, m.element.elements, P)) {
                    this.i(b, k.children || L.Iterable.empty(), {
                        diffIdentityProvider: o,
                        diffDepth: 1
                    });
                    return
                }
                const A = S.children.map(M=>M === m ? k : M);
                this.i(S.element, A, {
                    diffIdentityProvider: o,
                    diffDepth: m.depth - S.depth
                })
            }
            isCompressionEnabled() {
                return this.f
            }
            setCompressionEnabled(s) {
                if (s === this.f)
                    return;
                this.f = s;
                const l = this.c.getNode().children
                  , o = L.Iterable.map(l, v)
                  , b = L.Iterable.map(o, s ? E : y);
                this.i(null, b, {
                    diffIdentityProvider: this.g,
                    diffDepth: 1 / 0
                })
            }
            i(s, r, l) {
                const o = new Set
                  , b = w=>{
                    for (const S of w.element.elements)
                        o.add(S),
                        this.d.set(S, w.element)
                }
                  , m = w=>{
                    for (const S of w.element.elements)
                        o.has(S) || this.d.delete(S)
                }
                ;
                this.c.setChildren(s, r, {
                    ...l,
                    onDidCreateNode: b,
                    onDidDeleteNode: m
                })
            }
            has(s) {
                return this.d.has(s)
            }
            getListIndex(s) {
                const r = this.getCompressedNode(s);
                return this.c.getListIndex(r)
            }
            getListRenderCount(s) {
                const r = this.getCompressedNode(s);
                return this.c.getListRenderCount(r)
            }
            getNode(s) {
                if (typeof s > "u")
                    return this.c.getNode();
                const r = this.getCompressedNode(s);
                return this.c.getNode(r)
            }
            getNodeLocation(s) {
                const r = this.c.getNodeLocation(s);
                return r === null ? null : r.elements[r.elements.length - 1]
            }
            getParentNodeLocation(s) {
                const r = this.getCompressedNode(s)
                  , l = this.c.getParentNodeLocation(r);
                return l === null ? null : l.elements[l.elements.length - 1]
            }
            getFirstElementChild(s) {
                const r = this.getCompressedNode(s);
                return this.c.getFirstElementChild(r)
            }
            getLastElementAncestor(s) {
                const r = typeof s > "u" ? void 0 : this.getCompressedNode(s);
                return this.c.getLastElementAncestor(r)
            }
            isCollapsible(s) {
                const r = this.getCompressedNode(s);
                return this.c.isCollapsible(r)
            }
            setCollapsible(s, r) {
                const l = this.getCompressedNode(s);
                return this.c.setCollapsible(l, r)
            }
            isCollapsed(s) {
                const r = this.getCompressedNode(s);
                return this.c.isCollapsed(r)
            }
            setCollapsed(s, r, l) {
                const o = this.getCompressedNode(s);
                return this.c.setCollapsed(o, r, l)
            }
            expandTo(s) {
                const r = this.getCompressedNode(s);
                this.c.expandTo(r)
            }
            rerender(s) {
                const r = this.getCompressedNode(s);
                this.c.rerender(r)
            }
            updateElementHeight(s, r) {
                const l = this.getCompressedNode(s);
                l && this.c.updateElementHeight(l, r)
            }
            refilter() {
                this.c.refilter()
            }
            resort(s=null, r=!0) {
                const l = this.getCompressedNode(s);
                this.c.resort(l, r)
            }
            getCompressedNode(s) {
                if (s === null)
                    return null;
                const r = this.d.get(s);
                if (!r)
                    throw new n.$9W(this.h,`Tree element not found: ${s}`);
                return r
            }
        }
        e.$kX = p;
        const i = u=>u[u.length - 1];
        e.$lX = i;
        class c {
            get element() {
                return this.d.element === null ? null : this.c(this.d.element)
            }
            get children() {
                return this.d.children.map(s=>new c(this.c,s))
            }
            get depth() {
                return this.d.depth
            }
            get visibleChildrenCount() {
                return this.d.visibleChildrenCount
            }
            get visibleChildIndex() {
                return this.d.visibleChildIndex
            }
            get collapsible() {
                return this.d.collapsible
            }
            get collapsed() {
                return this.d.collapsed
            }
            get visible() {
                return this.d.visible
            }
            get filterData() {
                return this.d.filterData
            }
            constructor(s, r) {
                this.c = s,
                this.d = r
            }
        }
        function h(u, s) {
            return {
                splice(r, l, o) {
                    s.splice(r, l, o.map(b=>u.map(b)))
                },
                updateElementHeight(r, l) {
                    s.updateElementHeight(r, l)
                }
            }
        }
        function a(u, s) {
            return {
                ...s,
                identityProvider: s.identityProvider && {
                    getId(r) {
                        return s.identityProvider.getId(u(r))
                    }
                },
                sorter: s.sorter && {
                    compare(r, l) {
                        return s.sorter.compare(r.elements[0], l.elements[0])
                    }
                },
                filter: s.filter && {
                    filter(r, l) {
                        return s.filter.filter(u(r), l)
                    }
                }
            }
        }
        class d {
            get onDidSplice() {
                return I.Event.map(this.f.onDidSplice, ({insertedNodes: s, deletedNodes: r})=>({
                    insertedNodes: s.map(l=>this.d.map(l)),
                    deletedNodes: r.map(l=>this.d.map(l))
                }))
            }
            get onDidChangeCollapseState() {
                return I.Event.map(this.f.onDidChangeCollapseState, ({node: s, deep: r})=>({
                    node: this.d.map(s),
                    deep: r
                }))
            }
            get onDidChangeRenderNodeCount() {
                return I.Event.map(this.f.onDidChangeRenderNodeCount, s=>this.d.map(s))
            }
            constructor(s, r, l={}) {
                this.rootRef = null,
                this.c = l.elementMapper || e.$lX;
                const o = b=>this.c(b.elements);
                this.d = new n.$0W(b=>new c(o,b)),
                this.f = new p(s,h(this.d, r),a(o, l))
            }
            setChildren(s, r=L.Iterable.empty(), l={}) {
                this.f.setChildren(s, r, l)
            }
            isCompressionEnabled() {
                return this.f.isCompressionEnabled()
            }
            setCompressionEnabled(s) {
                this.f.setCompressionEnabled(s)
            }
            has(s) {
                return this.f.has(s)
            }
            getListIndex(s) {
                return this.f.getListIndex(s)
            }
            getListRenderCount(s) {
                return this.f.getListRenderCount(s)
            }
            getNode(s) {
                return this.d.map(this.f.getNode(s))
            }
            getNodeLocation(s) {
                return s.element
            }
            getParentNodeLocation(s) {
                return this.f.getParentNodeLocation(s)
            }
            getFirstElementChild(s) {
                const r = this.f.getFirstElementChild(s);
                return r === null || typeof r > "u" ? r : this.c(r.elements)
            }
            getLastElementAncestor(s) {
                const r = this.f.getLastElementAncestor(s);
                return r === null || typeof r > "u" ? r : this.c(r.elements)
            }
            isCollapsible(s) {
                return this.f.isCollapsible(s)
            }
            setCollapsible(s, r) {
                return this.f.setCollapsible(s, r)
            }
            isCollapsed(s) {
                return this.f.isCollapsed(s)
            }
            setCollapsed(s, r, l) {
                return this.f.setCollapsed(s, r, l)
            }
            expandTo(s) {
                return this.f.expandTo(s)
            }
            rerender(s) {
                return this.f.rerender(s)
            }
            updateElementHeight(s, r) {
                this.f.updateElementHeight(s, r)
            }
            refilter() {
                return this.f.refilter()
            }
            resort(s=null, r=!0) {
                return this.f.resort(s, r)
            }
            getCompressedTreeNode(s=null) {
                return this.f.getNode(s)
            }
        }
        e.$mX = d
    }),
    define(ge[182], be([1, 0, 7, 100, 134, 162, 2]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$rU = void 0,
        t = xe(t);
        class y extends L.$Uc {
            f($, v) {
                this.B(t.$GS($, t.$HT.CLICK, f=>v(new C.$yS(t.getWindow($),f))))
            }
            j($, v) {
                this.B(t.$GS($, t.$HT.MOUSE_DOWN, f=>v(new C.$yS(t.getWindow($),f))))
            }
            m($, v) {
                this.B(t.$GS($, t.$HT.MOUSE_OVER, f=>v(new C.$yS(t.getWindow($),f))))
            }
            u($, v) {
                this.B(t.$GS($, t.$HT.MOUSE_LEAVE, f=>v(new C.$yS(t.getWindow($),f))))
            }
            z($, v) {
                this.B(t.$GS($, t.$HT.KEY_DOWN, f=>v(new n.$DS(f))))
            }
            C($, v) {
                this.B(t.$GS($, t.$HT.KEY_UP, f=>v(new n.$DS(f))))
            }
            D($, v) {
                this.B(t.$GS($, t.$HT.INPUT, v))
            }
            F($, v) {
                this.B(t.$GS($, t.$HT.BLUR, v))
            }
            G($, v) {
                this.B(t.$GS($, t.$HT.FOCUS, v))
            }
            H($, v) {
                this.B(t.$GS($, t.$HT.CHANGE, v))
            }
            I($) {
                return I.$nU.ignoreTarget($)
            }
        }
        e.$rU = y
    }),
    define(ge[744], be([1, 0, 520, 182, 11, 32, 7]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$tU = e.$sU = void 0,
        L = xe(L),
        e.$sU = 11;
        class y extends n.$rU {
            constructor($) {
                super(),
                this.a = $.onActivate,
                this.bgDomNode = document.createElement("div"),
                this.bgDomNode.className = "arrow-background",
                this.bgDomNode.style.position = "absolute",
                this.bgDomNode.style.width = $.bgWidth + "px",
                this.bgDomNode.style.height = $.bgHeight + "px",
                typeof $.top < "u" && (this.bgDomNode.style.top = "0px"),
                typeof $.left < "u" && (this.bgDomNode.style.left = "0px"),
                typeof $.bottom < "u" && (this.bgDomNode.style.bottom = "0px"),
                typeof $.right < "u" && (this.bgDomNode.style.right = "0px"),
                this.domNode = document.createElement("div"),
                this.domNode.className = $.className,
                this.domNode.classList.add(...I.ThemeIcon.asClassNameArray($.icon)),
                this.domNode.style.position = "absolute",
                this.domNode.style.width = e.$sU + "px",
                this.domNode.style.height = e.$sU + "px",
                typeof $.top < "u" && (this.domNode.style.top = $.top + "px"),
                typeof $.left < "u" && (this.domNode.style.left = $.left + "px"),
                typeof $.bottom < "u" && (this.domNode.style.bottom = $.bottom + "px"),
                typeof $.right < "u" && (this.domNode.style.right = $.right + "px"),
                this.g = this.B(new t.$qU),
                this.B(L.$HS(this.bgDomNode, L.$HT.POINTER_DOWN, v=>this.h(v))),
                this.B(L.$HS(this.domNode, L.$HT.POINTER_DOWN, v=>this.h(v))),
                this.b = this.B(new L.$SS),
                this.c = this.B(new C.$Ph)
            }
            h($) {
                if (!$.target || !($.target instanceof Element))
                    return;
                const v = ()=>{
                    this.b.cancelAndSet(()=>this.a(), 1e3 / 24, L.getWindow($))
                }
                ;
                this.a(),
                this.b.cancel(),
                this.c.cancelAndSet(v, 200),
                this.g.startMonitoring($.target, $.pointerId, $.buttons, f=>{}
                , ()=>{
                    this.b.cancel(),
                    this.c.cancel()
                }
                ),
                $.preventDefault()
            }
        }
        e.$tU = y
    }),
    define(ge[941], be([1, 0, 7, 155, 520, 744, 1339, 182, 12]), function(ce, e, t, n, C, I, L, y, E) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$wU = void 0,
        t = xe(t),
        E = xe(E);
        const $ = 140;
        class v extends y.$rU {
            constructor(g) {
                super(),
                this.g = g.lazyRender,
                this.a = g.host,
                this.b = g.scrollable,
                this.c = g.scrollByPage,
                this.h = g.scrollbarState,
                this.n = this.B(new L.$vU(g.visibility,"visible scrollbar " + g.extraScrollbarClassName,"invisible scrollbar " + g.extraScrollbarClassName)),
                this.n.setIsNeeded(this.h.isNeeded()),
                this.r = this.B(new C.$qU),
                this.s = !0,
                this.domNode = (0,
                n.$pU)(document.createElement("div")),
                this.domNode.setAttribute("role", "presentation"),
                this.domNode.setAttribute("aria-hidden", "true"),
                this.n.setDomNode(this.domNode),
                this.domNode.setPosition("absolute"),
                this.B(t.$GS(this.domNode.domNode, t.$HT.POINTER_DOWN, p=>this.M(p)))
            }
            t(g) {
                const p = this.B(new I.$tU(g));
                this.domNode.domNode.appendChild(p.bgDomNode),
                this.domNode.domNode.appendChild(p.domNode)
            }
            w(g, p, i, c) {
                this.slider = (0,
                n.$pU)(document.createElement("div")),
                this.slider.setClassName("slider"),
                this.slider.setPosition("absolute"),
                this.slider.setTop(g),
                this.slider.setLeft(p),
                typeof i == "number" && this.slider.setWidth(i),
                typeof c == "number" && this.slider.setHeight(c),
                this.slider.setLayerHinting(!0),
                this.slider.setContain("strict"),
                this.domNode.domNode.appendChild(this.slider.domNode),
                this.B(t.$GS(this.slider.domNode, t.$HT.POINTER_DOWN, h=>{
                    h.button === 0 && (h.preventDefault(),
                    this.O(h))
                }
                )),
                this.f(this.slider.domNode, h=>{
                    h.leftButton && h.stopPropagation()
                }
                )
            }
            y(g) {
                return this.h.setVisibleSize(g) && (this.n.setIsNeeded(this.h.isNeeded()),
                this.s = !0,
                this.g || this.render()),
                this.s
            }
            J(g) {
                return this.h.setScrollSize(g) && (this.n.setIsNeeded(this.h.isNeeded()),
                this.s = !0,
                this.g || this.render()),
                this.s
            }
            L(g) {
                return this.h.setScrollPosition(g) && (this.n.setIsNeeded(this.h.isNeeded()),
                this.s = !0,
                this.g || this.render()),
                this.s
            }
            beginReveal() {
                this.n.setShouldBeVisible(!0)
            }
            beginHide() {
                this.n.setShouldBeVisible(!1)
            }
            render() {
                this.s && (this.s = !1,
                this.Q(this.h.getRectangleLargeSize(), this.h.getRectangleSmallSize()),
                this.R(this.h.getSliderSize(), this.h.getArrowSize() + this.h.getSliderPosition()))
            }
            M(g) {
                g.target === this.domNode.domNode && this.N(g)
            }
            delegatePointerDown(g) {
                const p = this.domNode.domNode.getClientRects()[0].top
                  , i = p + this.h.getSliderPosition()
                  , c = p + this.h.getSliderPosition() + this.h.getSliderSize()
                  , h = this.U(g);
                i <= h && h <= c ? g.button === 0 && (g.preventDefault(),
                this.O(g)) : this.N(g)
            }
            N(g) {
                let p, i;
                if (g.target === this.domNode.domNode && typeof g.offsetX == "number" && typeof g.offsetY == "number")
                    p = g.offsetX,
                    i = g.offsetY;
                else {
                    const h = t.$3S(this.domNode.domNode);
                    p = g.pageX - h.left,
                    i = g.pageY - h.top
                }
                const c = this.S(p, i);
                this.P(this.c ? this.h.getDesiredScrollPositionFromOffsetPaged(c) : this.h.getDesiredScrollPositionFromOffset(c)),
                g.button === 0 && (g.preventDefault(),
                this.O(g))
            }
            O(g) {
                if (!g.target || !(g.target instanceof Element))
                    return;
                const p = this.U(g)
                  , i = this.W(g)
                  , c = this.h.clone();
                this.slider.toggleClassName("active", !0),
                this.r.startMonitoring(g.target, g.pointerId, g.buttons, h=>{
                    const a = this.W(h)
                      , d = Math.abs(a - i);
                    if (E.$j && d > $) {
                        this.P(c.getScrollPosition());
                        return
                    }
                    const s = this.U(h) - p;
                    this.P(c.getDesiredScrollPositionFromDelta(s))
                }
                , ()=>{
                    this.slider.toggleClassName("active", !1),
                    this.a.onDragEnd()
                }
                ),
                this.a.onDragStart()
            }
            P(g) {
                const p = {};
                this.writeScrollPosition(p, g),
                this.b.setScrollPositionNow(p)
            }
            updateScrollbarSize(g) {
                this.X(g),
                this.h.setScrollbarSize(g),
                this.s = !0,
                this.g || this.render()
            }
            isNeeded() {
                return this.h.isNeeded()
            }
        }
        e.$wU = v
    }),
    define(ge[1342], be([1, 0, 134, 941, 744, 738, 26, 175]), function(ce, e, t, n, C, I, L, y) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$xU = void 0;
        class E extends n.$wU {
            constructor(v, f, g) {
                const p = v.getScrollDimensions()
                  , i = v.getCurrentScrollPosition();
                if (super({
                    lazyRender: f.lazyRender,
                    host: g,
                    scrollbarState: new I.$uU(f.horizontalHasArrows ? f.arrowSize : 0,f.horizontal === y.ScrollbarVisibility.Hidden ? 0 : f.horizontalScrollbarSize,f.vertical === y.ScrollbarVisibility.Hidden ? 0 : f.verticalScrollbarSize,p.width,p.scrollWidth,i.scrollLeft),
                    visibility: f.horizontal,
                    extraScrollbarClassName: "horizontal",
                    scrollable: v,
                    scrollByPage: f.scrollByPage
                }),
                f.horizontalHasArrows) {
                    const c = (f.arrowSize - C.$sU) / 2
                      , h = (f.horizontalScrollbarSize - C.$sU) / 2;
                    this.t({
                        className: "scra",
                        icon: L.$5j.scrollbarButtonLeft,
                        top: h,
                        left: c,
                        bottom: void 0,
                        right: void 0,
                        bgWidth: f.arrowSize,
                        bgHeight: f.horizontalScrollbarSize,
                        onActivate: ()=>this.a.onMouseWheel(new t.$AS(null,1,0))
                    }),
                    this.t({
                        className: "scra",
                        icon: L.$5j.scrollbarButtonRight,
                        top: h,
                        left: void 0,
                        bottom: void 0,
                        right: c,
                        bgWidth: f.arrowSize,
                        bgHeight: f.horizontalScrollbarSize,
                        onActivate: ()=>this.a.onMouseWheel(new t.$AS(null,-1,0))
                    })
                }
                this.w(Math.floor((f.horizontalScrollbarSize - f.horizontalSliderSize) / 2), 0, void 0, f.horizontalSliderSize)
            }
            R(v, f) {
                this.slider.setWidth(v),
                this.slider.setLeft(f)
            }
            Q(v, f) {
                this.domNode.setWidth(v),
                this.domNode.setHeight(f),
                this.domNode.setLeft(0),
                this.domNode.setBottom(0)
            }
            onDidScroll(v) {
                return this.s = this.J(v.scrollWidth) || this.s,
                this.s = this.L(v.scrollLeft) || this.s,
                this.s = this.y(v.width) || this.s,
                this.s
            }
            S(v, f) {
                return v
            }
            U(v) {
                return v.pageX
            }
            W(v) {
                return v.pageY
            }
            X(v) {
                this.slider.setHeight(v)
            }
            writeScrollPosition(v, f) {
                v.scrollLeft = f
            }
            updateOptions(v) {
                this.updateScrollbarSize(v.horizontal === y.ScrollbarVisibility.Hidden ? 0 : v.horizontalScrollbarSize),
                this.h.setOppositeScrollbarSize(v.vertical === y.ScrollbarVisibility.Hidden ? 0 : v.verticalScrollbarSize),
                this.n.setVisibility(v.horizontal),
                this.c = v.scrollByPage
            }
        }
        e.$xU = E
    }),
    define(ge[1343], be([1, 0, 134, 941, 744, 738, 26, 175]), function(ce, e, t, n, C, I, L, y) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$yU = void 0;
        class E extends n.$wU {
            constructor(v, f, g) {
                const p = v.getScrollDimensions()
                  , i = v.getCurrentScrollPosition();
                if (super({
                    lazyRender: f.lazyRender,
                    host: g,
                    scrollbarState: new I.$uU(f.verticalHasArrows ? f.arrowSize : 0,f.vertical === y.ScrollbarVisibility.Hidden ? 0 : f.verticalScrollbarSize,0,p.height,p.scrollHeight,i.scrollTop),
                    visibility: f.vertical,
                    extraScrollbarClassName: "vertical",
                    scrollable: v,
                    scrollByPage: f.scrollByPage
                }),
                f.verticalHasArrows) {
                    const c = (f.arrowSize - C.$sU) / 2
                      , h = (f.verticalScrollbarSize - C.$sU) / 2;
                    this.t({
                        className: "scra",
                        icon: L.$5j.scrollbarButtonUp,
                        top: c,
                        left: h,
                        bottom: void 0,
                        right: void 0,
                        bgWidth: f.verticalScrollbarSize,
                        bgHeight: f.arrowSize,
                        onActivate: ()=>this.a.onMouseWheel(new t.$AS(null,0,1))
                    }),
                    this.t({
                        className: "scra",
                        icon: L.$5j.scrollbarButtonDown,
                        top: void 0,
                        left: h,
                        bottom: c,
                        right: void 0,
                        bgWidth: f.verticalScrollbarSize,
                        bgHeight: f.arrowSize,
                        onActivate: ()=>this.a.onMouseWheel(new t.$AS(null,0,-1))
                    })
                }
                this.w(0, Math.floor((f.verticalScrollbarSize - f.verticalSliderSize) / 2), f.verticalSliderSize, void 0)
            }
            R(v, f) {
                this.slider.setHeight(v),
                this.slider.setTop(f)
            }
            Q(v, f) {
                this.domNode.setWidth(f),
                this.domNode.setHeight(v),
                this.domNode.setRight(0),
                this.domNode.setTop(0)
            }
            onDidScroll(v) {
                return this.s = this.J(v.scrollHeight) || this.s,
                this.s = this.L(v.scrollTop) || this.s,
                this.s = this.y(v.height) || this.s,
                this.s
            }
            S(v, f) {
                return f
            }
            U(v) {
                return v.pageY
            }
            W(v) {
                return v.pageX
            }
            X(v) {
                this.slider.setWidth(v)
            }
            writeScrollPosition(v, f) {
                v.scrollTop = f
            }
            updateOptions(v) {
                this.updateScrollbarSize(v.vertical === y.ScrollbarVisibility.Hidden ? 0 : v.verticalScrollbarSize),
                this.h.setOppositeScrollbarSize(0),
                this.n.setVisibility(v.vertical),
                this.c = v.scrollByPage
            }
        }
        e.$yU = E
    }),
    define(ge[183], be([1, 0, 13, 11, 105, 208, 56, 67, 12, 31]), function(ce, e, t, n, C, I, L, y, E, $) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$xk = e.$wk = void 0,
        e.$vk = v,
        e.$yk = c,
        e.$zk = O,
        e.$Ak = R,
        e.$Bk = N,
        e.$Ck = z,
        e.$Dk = V,
        e.$Ek = q;
        function v() {
            return Object.create(null)
        }
        e.$wk = "**",
        e.$xk = "/";
        const f = "[/\\\\]"
          , g = "[^/\\\\]"
          , p = /\//g;
        function i(H, U) {
            switch (H) {
            case 0:
                return "";
            case 1:
                return `${g}*?`;
            default:
                return `(?:${f}|${g}+${f}${U ? `|${f}${g}+` : ""})*?`
            }
        }
        function c(H, U) {
            if (!H)
                return [];
            const K = [];
            let G = !1
              , Z = !1
              , x = "";
            for (const X of H) {
                switch (X) {
                case U:
                    if (!G && !Z) {
                        K.push(x),
                        x = "";
                        continue
                    }
                    break;
                case "{":
                    G = !0;
                    break;
                case "}":
                    G = !1;
                    break;
                case "[":
                    Z = !0;
                    break;
                case "]":
                    Z = !1;
                    break
                }
                x += X
            }
            return x && K.push(x),
            K
        }
        function h(H) {
            if (!H)
                return "";
            let U = "";
            const K = c(H, e.$xk);
            if (K.every(G=>G === e.$wk))
                U = ".*";
            else {
                let G = !1;
                K.forEach((Z,x)=>{
                    if (Z === e.$wk) {
                        if (G)
                            return;
                        U += i(2, x === K.length - 1)
                    } else {
                        let X = !1
                          , Y = ""
                          , Q = !1
                          , _ = "";
                        for (const ae of Z) {
                            if (ae !== "}" && X) {
                                Y += ae;
                                continue
                            }
                            if (Q && (ae !== "]" || !_)) {
                                let re;
                                ae === "-" ? re = ae : (ae === "^" || ae === "!") && !_ ? re = "^" : ae === e.$xk ? re = "" : re = (0,
                                $.$hf)(ae),
                                _ += re;
                                continue
                            }
                            switch (ae) {
                            case "{":
                                X = !0;
                                continue;
                            case "[":
                                Q = !0;
                                continue;
                            case "}":
                                {
                                    const se = `(?:${c(Y, ",").map(ee=>h(ee)).join("|")})`;
                                    U += se,
                                    X = !1,
                                    Y = "";
                                    break
                                }
                            case "]":
                                {
                                    U += "[" + _ + "]",
                                    Q = !1,
                                    _ = "";
                                    break
                                }
                            case "?":
                                U += g;
                                continue;
                            case "*":
                                U += i(1);
                                continue;
                            default:
                                U += (0,
                                $.$hf)(ae)
                            }
                        }
                        x < K.length - 1 && (K[x + 1] !== e.$wk || x + 2 < K.length) && (U += f)
                    }
                    G = Z === e.$wk
                }
                )
            }
            return U
        }
        const a = /^\*\*\/\*\.[\w\.-]+$/
          , d = /^\*\*\/([\w\.-]+)\/?$/
          , u = /^{\*\*\/\*?[\w\.-]+\/?(,\*\*\/\*?[\w\.-]+\/?)*}$/
          , s = /^{\*\*\/\*?[\w\.-]+(\/(\*\*)?)?(,\*\*\/\*?[\w\.-]+(\/(\*\*)?)?)*}$/
          , r = /^\*\*((\/[\w\.-]+)+)\/?$/
          , l = /^([\w\.-]+(\/[\w\.-]+)*)\/?$/
          , o = new L.$Dc(1e4)
          , b = function() {
            return !1
        }
          , m = function() {
            return null
        };
        function w(H, U) {
            if (!H)
                return m;
            let K;
            typeof H != "string" ? K = H.pattern : K = H,
            K = K.trim();
            const G = `${K}_${!!U.trimForExclusions}`;
            let Z = o.get(G);
            if (Z)
                return S(Z, H);
            let x;
            return a.test(K) ? Z = D(K.substr(4), K) : (x = d.exec(T(K, U))) ? Z = k(x[1], K) : (U.trimForExclusions ? s : u).test(K) ? Z = P(K, U) : (x = r.exec(T(K, U))) ? Z = A(x[1].substr(1), K, !0) : (x = l.exec(T(K, U))) ? Z = A(x[1], K, !1) : Z = M(K),
            o.set(G, Z),
            S(Z, H)
        }
        function S(H, U) {
            if (typeof U == "string")
                return H;
            const K = function(G, Z) {
                return (0,
                I.$Eg)(G, U.base, !E.$l) ? H((0,
                $.$mf)(G.substr(U.base.length), y.sep), Z) : null
            };
            return K.allBasenames = H.allBasenames,
            K.allPaths = H.allPaths,
            K.basenames = H.basenames,
            K.patterns = H.patterns,
            K
        }
        function T(H, U) {
            return U.trimForExclusions && H.endsWith("/**") ? H.substr(0, H.length - 2) : H
        }
        function D(H, U) {
            return function(K, G) {
                return typeof K == "string" && K.endsWith(H) ? U : null
            }
        }
        function k(H, U) {
            const K = `/${H}`
              , G = `\\${H}`
              , Z = function(X, Y) {
                return typeof X != "string" ? null : Y ? Y === H ? U : null : X === H || X.endsWith(K) || X.endsWith(G) ? U : null
            }
              , x = [H];
            return Z.basenames = x,
            Z.patterns = [U],
            Z.allBasenames = x,
            Z
        }
        function P(H, U) {
            const K = W(H.slice(1, -1).split(",").map(Y=>w(Y, U)).filter(Y=>Y !== m), H)
              , G = K.length;
            if (!G)
                return m;
            if (G === 1)
                return K[0];
            const Z = function(Y, Q) {
                for (let _ = 0, ae = K.length; _ < ae; _++)
                    if (K[_](Y, Q))
                        return H;
                return null
            }
              , x = K.find(Y=>!!Y.allBasenames);
            x && (Z.allBasenames = x.allBasenames);
            const X = K.reduce((Y,Q)=>Q.allPaths ? Y.concat(Q.allPaths) : Y, []);
            return X.length && (Z.allPaths = X),
            Z
        }
        function A(H, U, K) {
            const G = y.sep === y.$gc.sep
              , Z = G ? H : H.replace(p, y.sep)
              , x = y.sep + Z
              , X = y.$gc.sep + H;
            let Y;
            return K ? Y = function(Q, _) {
                return typeof Q == "string" && (Q === Z || Q.endsWith(x) || !G && (Q === H || Q.endsWith(X))) ? U : null
            }
            : Y = function(Q, _) {
                return typeof Q == "string" && (Q === Z || !G && Q === H) ? U : null
            }
            ,
            Y.allPaths = [(K ? "*/" : "./") + H],
            Y
        }
        function M(H) {
            try {
                const U = new RegExp(`^${h(H)}$`);
                return function(K) {
                    return U.lastIndex = 0,
                    typeof K == "string" && U.test(K) ? H : null
                }
            } catch {
                return m
            }
        }
        function O(H, U, K) {
            return !H || typeof U != "string" ? !1 : R(H)(U, void 0, K)
        }
        function R(H, U={}) {
            if (!H)
                return b;
            if (typeof H == "string" || N(H)) {
                const K = w(H, U);
                if (K === m)
                    return b;
                const G = function(Z, x) {
                    return !!K(Z, x)
                };
                return K.allBasenames && (G.allBasenames = K.allBasenames),
                K.allPaths && (G.allPaths = K.allPaths),
                G
            }
            return B(H, U)
        }
        function N(H) {
            const U = H;
            return U ? typeof U.base == "string" && typeof U.pattern == "string" : !1
        }
        function z(H) {
            return H.allBasenames || []
        }
        function V(H) {
            return H.allPaths || []
        }
        function B(H, U) {
            const K = W(Object.getOwnPropertyNames(H).map(Y=>j(Y, H[Y], U)).filter(Y=>Y !== m))
              , G = K.length;
            if (!G)
                return m;
            if (!K.some(Y=>!!Y.requiresSiblings)) {
                if (G === 1)
                    return K[0];
                const Y = function(ae, re) {
                    let se;
                    for (let ee = 0, J = K.length; ee < J; ee++) {
                        const te = K[ee](ae, re);
                        if (typeof te == "string")
                            return te;
                        (0,
                        n.$rh)(te) && (se || (se = []),
                        se.push(te))
                    }
                    return se ? (async()=>{
                        for (const ee of se) {
                            const J = await ee;
                            if (typeof J == "string")
                                return J
                        }
                        return null
                    }
                    )() : null
                }
                  , Q = K.find(ae=>!!ae.allBasenames);
                Q && (Y.allBasenames = Q.allBasenames);
                const _ = K.reduce((ae,re)=>re.allPaths ? ae.concat(re.allPaths) : ae, []);
                return _.length && (Y.allPaths = _),
                Y
            }
            const Z = function(Y, Q, _) {
                let ae, re;
                for (let se = 0, ee = K.length; se < ee; se++) {
                    const J = K[se];
                    J.requiresSiblings && _ && (Q || (Q = (0,
                    y.$nc)(Y)),
                    ae || (ae = Q.substr(0, Q.length - (0,
                    y.$oc)(Y).length)));
                    const te = J(Y, Q, ae, _);
                    if (typeof te == "string")
                        return te;
                    (0,
                    n.$rh)(te) && (re || (re = []),
                    re.push(te))
                }
                return re ? (async()=>{
                    for (const se of re) {
                        const ee = await se;
                        if (typeof ee == "string")
                            return ee
                    }
                    return null
                }
                )() : null
            }
              , x = K.find(Y=>!!Y.allBasenames);
            x && (Z.allBasenames = x.allBasenames);
            const X = K.reduce((Y,Q)=>Q.allPaths ? Y.concat(Q.allPaths) : Y, []);
            return X.length && (Z.allPaths = X),
            Z
        }
        function j(H, U, K) {
            if (U === !1)
                return m;
            const G = w(H, K);
            if (G === m)
                return m;
            if (typeof U == "boolean")
                return G;
            if (U) {
                const Z = U.when;
                if (typeof Z == "string") {
                    const x = (X,Y,Q,_)=>{
                        if (!_ || !G(X, Y))
                            return null;
                        const ae = Z.replace("$(basename)", ()=>Q)
                          , re = _(ae);
                        return (0,
                        n.$rh)(re) ? re.then(se=>se ? H : null) : re ? H : null
                    }
                    ;
                    return x.requiresSiblings = !0,
                    x
                }
            }
            return G
        }
        function W(H, U) {
            const K = H.filter(Y=>!!Y.basenames);
            if (K.length < 2)
                return H;
            const G = K.reduce((Y,Q)=>{
                const _ = Q.basenames;
                return _ ? Y.concat(_) : Y
            }
            , []);
            let Z;
            if (U) {
                Z = [];
                for (let Y = 0, Q = G.length; Y < Q; Y++)
                    Z.push(U)
            } else
                Z = K.reduce((Y,Q)=>{
                    const _ = Q.patterns;
                    return _ ? Y.concat(_) : Y
                }
                , []);
            const x = function(Y, Q) {
                if (typeof Y != "string")
                    return null;
                if (!Q) {
                    let ae;
                    for (ae = Y.length; ae > 0; ae--) {
                        const re = Y.charCodeAt(ae - 1);
                        if (re === C.CharCode.Slash || re === C.CharCode.Backslash)
                            break
                    }
                    Q = Y.substr(ae)
                }
                const _ = G.indexOf(Q);
                return _ !== -1 ? Z[_] : null
            };
            x.basenames = G,
            x.patterns = Z,
            x.allBasenames = G;
            const X = H.filter(Y=>!Y.basenames);
            return X.push(x),
            X
        }
        function q(H, U) {
            return (0,
            t.$tb)(H, U, (K,G)=>typeof K == "string" && typeof G == "string" ? K === G : typeof K != "string" && typeof G != "string" ? K.base === G.base && K.pattern === G.pattern : !1)
        }
    }),
    define(ge[80], be([1, 0, 14, 225, 23, 31, 9]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$4k = e.MarkdownStringTextNewlineStyle = void 0,
        e.$5k = $,
        e.$6k = v,
        e.$7k = f,
        e.$8k = g,
        e.$9k = p,
        e.$0k = i,
        e.$$k = c,
        e.$_k = h;
        var y;
        (function(a) {
            a[a.Paragraph = 0] = "Paragraph",
            a[a.Break = 1] = "Break"
        }
        )(y || (e.MarkdownStringTextNewlineStyle = y = {}));
        class E {
            constructor(d="", u=!1) {
                if (this.value = d,
                typeof this.value != "string")
                    throw (0,
                    t.$6)("value");
                typeof u == "boolean" ? (this.isTrusted = u,
                this.supportThemeIcons = !1,
                this.supportHtml = !1) : (this.isTrusted = u.isTrusted ?? void 0,
                this.supportThemeIcons = u.supportThemeIcons ?? !1,
                this.supportHtml = u.supportHtml ?? !1)
            }
            appendText(d, u=y.Paragraph) {
                return this.value += g(this.supportThemeIcons ? (0,
                n.$Xk)(d) : d).replace(/([ \t]+)/g, (s,r)=>"&nbsp;".repeat(r.length)).replace(/\>/gm, "\\>").replace(/\n/g, u === y.Break ? `\\
` : `

`),
                this
            }
            appendMarkdown(d) {
                return this.value += d,
                this
            }
            appendCodeblock(d, u) {
                return this.value += `
${p(u, d)}
`,
                this
            }
            appendLink(d, u, s) {
                return this.value += "[",
                this.value += this.c(u, "]"),
                this.value += "](",
                this.value += this.c(String(d), ")"),
                s && (this.value += ` "${this.c(this.c(s, '"'), ")")}"`),
                this.value += ")",
                this
            }
            c(d, u) {
                const s = new RegExp((0,
                I.$hf)(u),"g");
                return d.replace(s, (r,l)=>d.charAt(l - 1) !== "\\" ? `\\${r}` : r)
            }
        }
        e.$4k = E;
        function $(a) {
            return v(a) ? !a.value : Array.isArray(a) ? a.every($) : !0
        }
        function v(a) {
            return a instanceof E ? !0 : a && typeof a == "object" ? typeof a.value == "string" && (typeof a.isTrusted == "boolean" || typeof a.isTrusted == "object" || a.isTrusted === void 0) && (typeof a.supportThemeIcons == "boolean" || a.supportThemeIcons === void 0) : !1
        }
        function f(a, d) {
            return a === d ? !0 : !a || !d ? !1 : a.value === d.value && a.isTrusted === d.isTrusted && a.supportThemeIcons === d.supportThemeIcons && a.supportHtml === d.supportHtml && (a.baseUri === d.baseUri || !!a.baseUri && !!d.baseUri && (0,
            C.$_g)(L.URI.from(a.baseUri), L.URI.from(d.baseUri)))
        }
        function g(a) {
            return a.replace(/[\\`*_{}[\]()#+\-!~]/g, "\\$&")
        }
        function p(a, d) {
            const u = a.match(/^`+/gm)?.reduce((r,l)=>r.length > l.length ? r : l).length ?? 0
              , s = u >= 3 ? u + 1 : 3;
            return [`${"`".repeat(s)}${d}`, a, `${"`".repeat(s)}`].join(`
`)
        }
        function i(a) {
            return a.replace(/"/g, "&quot;")
        }
        function c(a) {
            return a && a.replace(/\\([\\`*_{}[\]()#+\-.!~])/g, "$1")
        }
        function h(a) {
            const d = []
              , u = a.split("|").map(r=>r.trim());
            a = u[0];
            const s = u[1];
            if (s) {
                const r = /height=(\d+)/.exec(s)
                  , l = /width=(\d+)/.exec(s)
                  , o = r ? r[1] : ""
                  , b = l ? l[1] : ""
                  , m = isFinite(parseInt(b))
                  , w = isFinite(parseInt(o));
                m && d.push(`width="${b}"`),
                w && d.push(`height="${o}"`)
            }
            return {
                href: a,
                dimensions: d
            }
        }
    }),
    define(ge[200], be([1, 0, 7, 742, 217, 393, 100, 134, 148, 14, 5, 80, 225, 457, 17, 147, 2, 321, 156, 19, 65, 23, 31, 9]), function(ce, e, t, n, C, I, L, y, E, $, v, f, g, p, i, c, h, a, d, u, s, r, l, o) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$rV = void 0,
        e.$qV = m,
        e.$sV = P,
        e.$tV = A,
        e.$uV = H,
        t = xe(t),
        n = xe(n);
        const b = Object.freeze({
            image: (J,te,ne)=>{
                let le = []
                  , ie = [];
                return J && ({href: J, dimensions: le} = (0,
                f.$_k)(J),
                ie.push(`src="${(0,
                f.$0k)(J)}"`)),
                ne && ie.push(`alt="${(0,
                f.$0k)(ne)}"`),
                te && ie.push(`title="${(0,
                f.$0k)(te)}"`),
                le.length && (ie = ie.concat(le)),
                "<img " + ie.join(" ") + ">"
            }
            ,
            paragraph: J=>`<p>${J}</p>`,
            link: (J,te,ne)=>typeof J != "string" ? "" : (J === ne && (ne = (0,
            f.$$k)(ne)),
            te = typeof te == "string" ? (0,
            f.$0k)((0,
            f.$$k)(te)) : "",
            J = (0,
            f.$$k)(J),
            J = J.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;"),
            `<a href="${J}" title="${te || J}" draggable="false">${ne}</a>`)
        });
        function m(J, te={}, ne={}) {
            const le = new h.$Tc;
            let ie = !1;
            const oe = (0,
            I.$TU)(te)
              , fe = function(ye) {
                let Le;
                try {
                    Le = (0,
                    d.$bi)(decodeURIComponent(ye))
                } catch {}
                return Le ? (Le = (0,
                s.$go)(Le, De=>{
                    if (J.uris && J.uris[De])
                        return o.URI.revive(J.uris[De])
                }
                ),
                encodeURIComponent(JSON.stringify(Le))) : ye
            }
              , he = function(ye, Le) {
                const De = J.uris && J.uris[ye];
                let Pe = o.URI.revive(De);
                return Le ? ye.startsWith(u.Schemas.data + ":") ? ye : (Pe || (Pe = o.URI.parse(ye)),
                u.$Zg.uriToBrowserUri(Pe).toString(!0)) : !Pe || o.URI.parse(ye).toString() === Pe.toString() ? ye : (Pe.query && (Pe = Pe.with({
                    query: fe(Pe.query)
                })),
                Pe.toString())
            }
              , ue = new a.marked.Renderer;
            ue.image = b.image,
            ue.link = b.link,
            ue.paragraph = b.paragraph;
            const de = []
              , $e = [];
            if (te.codeBlockRendererSync ? ue.code = (ye,Le)=>{
                const De = p.$qQ.nextId()
                  , Pe = te.codeBlockRendererSync(w(Le), ye);
                return $e.push([De, Pe]),
                `<div class="code" data-code="${De}">${(0,
                l.$gf)(ye)}</div>`
            }
            : te.codeBlockRenderer && (ue.code = (ye,Le)=>{
                const De = p.$qQ.nextId()
                  , Pe = te.codeBlockRenderer(w(Le), ye);
                return de.push(Pe.then(ze=>[De, ze])),
                `<div class="code" data-code="${De}">${(0,
                l.$gf)(ye)}</div>`
            }
            ),
            te.actionHandler) {
                const ye = function(Pe) {
                    let ze = Pe.target;
                    if (!(ze.tagName !== "A" && (ze = ze.parentElement,
                    !ze || ze.tagName !== "A")))
                        try {
                            let Be = ze.dataset.href;
                            Be && (J.baseUri && (Be = S(o.URI.from(J.baseUri), Be)),
                            te.actionHandler.callback(Be, Pe))
                        } catch (Be) {
                            (0,
                            $.$Y)(Be)
                        } finally {
                            Pe.preventDefault()
                        }
                }
                  , Le = te.actionHandler.disposables.add(new C.$UU(oe,"click"))
                  , De = te.actionHandler.disposables.add(new C.$UU(oe,"auxclick"));
                te.actionHandler.disposables.add(v.Event.any(Le.event, De.event)(Pe=>{
                    const ze = new y.$yS(t.getWindow(oe),Pe);
                    !ze.leftButton && !ze.middleButton || ye(ze)
                }
                )),
                te.actionHandler.disposables.add(t.$GS(oe, "keydown", Pe=>{
                    const ze = new L.$DS(Pe);
                    !ze.equals(i.KeyCode.Space) && !ze.equals(i.KeyCode.Enter) || ye(ze)
                }
                ))
            }
            J.supportHtml || (ne.sanitizer = ye=>te.sanitizerOptions?.replaceWithPlaintext ? (0,
            l.$gf)(ye) : (J.isTrusted ? ye.match(/^(<span[^>]+>)|(<\/\s*span>)$/) : void 0) ? ye : "",
            ne.sanitize = !0,
            ne.silent = !0),
            ne.renderer = ue;
            let pe = J.value ?? "";
            pe.length > 1e5 && (pe = `${pe.substr(0, 1e5)}\u2026`),
            J.supportThemeIcons && (pe = (0,
            g.$Yk)(pe));
            let ve;
            if (te.fillInIncompleteTokens) {
                const ye = {
                    ...a.marked.defaults,
                    ...ne
                }
                  , Le = a.marked.lexer(pe, ye)
                  , De = H(Le);
                ve = a.marked.parser(De, ye)
            } else
                ve = a.marked.parse(pe, ne);
            J.supportThemeIcons && (ve = (0,
            E.$oV)(ve).map(Le=>typeof Le == "string" ? Le : Le.outerHTML).join(""));
            const we = new DOMParser().parseFromString(D({
                isTrusted: J.isTrusted,
                ...te.sanitizerOptions
            }, ve), "text/html");
            if (we.body.querySelectorAll("img, audio, video, source").forEach(ye=>{
                const Le = ye.getAttribute("src");
                if (Le) {
                    let De = Le;
                    try {
                        J.baseUri && (De = S(o.URI.from(J.baseUri), De))
                    } catch {}
                    if (ye.setAttribute("src", he(De, !0)),
                    te.remoteImageIsAllowed) {
                        const Pe = o.URI.parse(De);
                        Pe.scheme !== u.Schemas.file && Pe.scheme !== u.Schemas.data && !te.remoteImageIsAllowed(Pe) && ye.replaceWith(t.$("", void 0, ye.outerHTML))
                    }
                }
            }
            ),
            we.body.querySelectorAll("a").forEach(ye=>{
                const Le = ye.getAttribute("href");
                if (ye.setAttribute("href", ""),
                !Le || /^data:|javascript:/i.test(Le) || /^command:/i.test(Le) && !J.isTrusted || /^command:(\/\/\/)?_workbench\.downloadResource/i.test(Le))
                    ye.replaceWith(...ye.childNodes);
                else {
                    let De = he(Le, !1);
                    J.baseUri && (De = S(o.URI.from(J.baseUri), Le)),
                    ye.dataset.href = De
                }
            }
            ),
            oe.innerHTML = D({
                isTrusted: J.isTrusted,
                ...te.sanitizerOptions
            }, we.body.innerHTML),
            de.length > 0)
                Promise.all(de).then(ye=>{
                    if (ie)
                        return;
                    const Le = new Map(ye)
                      , De = oe.querySelectorAll("div[data-code]");
                    for (const Pe of De) {
                        const ze = Le.get(Pe.dataset.code ?? "");
                        ze && t.$QT(Pe, ze)
                    }
                    te.asyncRenderCallback?.()
                }
                );
            else if ($e.length > 0) {
                const ye = new Map($e)
                  , Le = oe.querySelectorAll("div[data-code]");
                for (const De of Le) {
                    const Pe = ye.get(De.dataset.code ?? "");
                    Pe && t.$QT(De, Pe)
                }
            }
            if (te.asyncRenderCallback)
                for (const ye of oe.getElementsByTagName("img")) {
                    const Le = le.add(t.$GS(ye, "load", ()=>{
                        Le.dispose(),
                        te.asyncRenderCallback()
                    }
                    ))
                }
            return {
                element: oe,
                dispose: ()=>{
                    ie = !0,
                    le.dispose()
                }
            }
        }
        function w(J) {
            if (!J)
                return "";
            const te = J.split(/[\s+|:|,|\{|\?]/, 1);
            return te.length ? te[0] : J
        }
        function S(J, te) {
            return /^\w[\w\d+.-]*:/.test(te) ? te : J.path.endsWith("/") ? (0,
            r.$jh)(J, te).toString() : (0,
            r.$jh)((0,
            r.$fh)(J), te).toString()
        }
        const T = ["area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr"];
        function D(J, te) {
            const {config: ne, allowedSchemes: le} = k(J)
              , ie = new h.$Tc;
            ie.add(ee("uponSanitizeAttribute", (oe,fe)=>{
                if (fe.attrName === "style" || fe.attrName === "class") {
                    if (oe.tagName === "SPAN") {
                        if (fe.attrName === "style") {
                            fe.keepAttr = /^(color\:(#[0-9a-fA-F]+|var\(--vscode(-[a-zA-Z]+)+\));)?(background-color\:(#[0-9a-fA-F]+|var\(--vscode(-[a-zA-Z]+)+\));)?(border-radius:[0-9]+px;)?$/.test(fe.attrValue);
                            return
                        } else if (fe.attrName === "class") {
                            fe.keepAttr = /^codicon codicon-[a-z\-]+( codicon-modifier-[a-z\-]+)?$/.test(fe.attrValue);
                            return
                        }
                    }
                    fe.keepAttr = !1;
                    return
                } else if (oe.tagName === "INPUT" && oe.attributes.getNamedItem("type")?.value === "checkbox") {
                    if (fe.attrName === "type" && fe.attrValue === "checkbox" || fe.attrName === "disabled" || fe.attrName === "checked") {
                        fe.keepAttr = !0;
                        return
                    }
                    fe.keepAttr = !1
                }
            }
            )),
            ie.add(ee("uponSanitizeElement", (oe,fe)=>{
                if (fe.tagName === "input" && (oe.attributes.getNamedItem("type")?.value === "checkbox" ? oe.setAttribute("disabled", "") : J.replaceWithPlaintext || oe.remove()),
                J.replaceWithPlaintext && !fe.allowedTags[fe.tagName] && fe.tagName !== "body" && oe.parentElement) {
                    let he, ue;
                    if (fe.tagName === "#comment")
                        he = `<!--${oe.textContent}-->`;
                    else {
                        const ve = T.includes(fe.tagName)
                          , me = oe.attributes.length ? " " + Array.from(oe.attributes).map(we=>`${we.name}="${we.value}"`).join(" ") : "";
                        he = `<${fe.tagName}${me}>`,
                        ve || (ue = `</${fe.tagName}>`)
                    }
                    const de = document.createDocumentFragment()
                      , $e = oe.parentElement.ownerDocument.createTextNode(he);
                    de.appendChild($e);
                    const pe = ue ? oe.parentElement.ownerDocument.createTextNode(ue) : void 0;
                    for (; oe.firstChild; )
                        de.appendChild(oe.firstChild);
                    pe && de.appendChild(pe),
                    oe.parentElement.replaceChild(de, oe)
                }
            }
            )),
            ie.add(t.$$T(le));
            try {
                return n.sanitize(te, {
                    ...ne,
                    RETURN_TRUSTED_TYPE: !0
                })
            } finally {
                ie.dispose()
            }
        }
        e.$rV = ["align", "autoplay", "alt", "checked", "class", "colspan", "controls", "data-code", "data-href", "disabled", "draggable", "height", "href", "loop", "muted", "playsinline", "poster", "rowspan", "src", "style", "target", "title", "type", "width", "start"];
        function k(J) {
            const te = [u.Schemas.http, u.Schemas.https, u.Schemas.mailto, u.Schemas.data, u.Schemas.file, u.Schemas.vscodeFileResource, u.Schemas.vscodeRemote, u.Schemas.vscodeRemoteResource];
            return J.isTrusted && te.push(u.Schemas.command),
            {
                config: {
                    ALLOWED_TAGS: J.allowedTags ?? [...t.$_T],
                    ALLOWED_ATTR: e.$rV,
                    ALLOW_UNKNOWN_PROTOCOLS: !0
                },
                allowedSchemes: te
            }
        }
        function P(J) {
            return typeof J == "string" ? J : A(J)
        }
        function A(J, te) {
            let ne = J.value ?? "";
            ne.length > 1e5 && (ne = `${ne.substr(0, 1e5)}\u2026`);
            const le = a.marked.parse(ne, {
                renderer: te ? N.value : R.value
            }).replace(/&(#\d+|[a-zA-Z]+);/g, ie=>M.get(ie) ?? ie);
            return D({
                isTrusted: !1
            }, le).toString()
        }
        const M = new Map([["&quot;", '"'], ["&nbsp;", " "], ["&amp;", "&"], ["&#39;", "'"], ["&lt;", "<"], ["&gt;", ">"]]);
        function O() {
            const J = new a.marked.Renderer;
            return J.code = te=>te,
            J.blockquote = te=>te,
            J.html = te=>"",
            J.heading = (te,ne,le)=>te + `
`,
            J.hr = ()=>"",
            J.list = (te,ne)=>te,
            J.listitem = te=>te + `
`,
            J.paragraph = te=>te + `
`,
            J.table = (te,ne)=>te + ne + `
`,
            J.tablerow = te=>te,
            J.tablecell = (te,ne)=>te + " ",
            J.strong = te=>te,
            J.em = te=>te,
            J.codespan = te=>te,
            J.br = ()=>`
`,
            J.del = te=>te,
            J.image = (te,ne,le)=>"",
            J.text = te=>te,
            J.link = (te,ne,le)=>le,
            J
        }
        const R = new c.$T(J=>O())
          , N = new c.$T(()=>{
            const J = O();
            return J.code = te=>`
\`\`\`
${te}
\`\`\`
`,
            J
        }
        );
        function z(J) {
            let te = "";
            return J.forEach(ne=>{
                te += ne.raw
            }
            ),
            te
        }
        function V(J) {
            if (J.tokens)
                for (let te = J.tokens.length - 1; te >= 0; te--) {
                    const ne = J.tokens[te];
                    if (ne.type === "text") {
                        const le = ne.raw.split(`
`)
                          , ie = le[le.length - 1];
                        if (ie.includes("`"))
                            return G(J);
                        if (ie.includes("**"))
                            return _(J);
                        if (ie.match(/\*\w/))
                            return Z(J);
                        if (ie.match(/(^|\s)__\w/))
                            return ae(J);
                        if (ie.match(/(^|\s)_\w/))
                            return x(J);
                        if (B(ie) || j(ie) && J.tokens.slice(0, te).some(oe=>oe.type === "text" && oe.raw.match(/\[[^\]]*$/))) {
                            const oe = J.tokens.slice(te + 1);
                            return oe[0]?.type === "link" && oe[1]?.type === "text" && oe[1].raw.match(/^ *"[^"]*$/) || ie.match(/^[^"]* +"[^"]*$/) ? Y(J) : X(J)
                        } else if (ie.match(/(^|\s)\[\w*/))
                            return Q(J)
                    }
                }
        }
        function B(J) {
            return !!J.match(/(^|\s)\[.*\]\(\w*/)
        }
        function j(J) {
            return !!J.match(/^[^\[]*\]\([^\)]*$/)
        }
        function W(J) {
            const te = J.items[J.items.length - 1]
              , ne = te.tokens ? te.tokens[te.tokens.length - 1] : void 0;
            let le;
            if (ne?.type === "text" && !("inRawBlock"in te) && (le = V(ne)),
            !le || le.type !== "paragraph")
                return;
            const ie = z(J.items.slice(0, -1))
              , oe = te.raw.match(/^(\s*(-|\d+\.|\*) +)/)?.[0];
            if (!oe)
                return;
            const fe = oe + z(te.tokens.slice(0, -1)) + le.raw
              , he = a.marked.lexer(ie + fe)[0];
            if (he.type === "list")
                return he
        }
        const q = 3;
        function H(J) {
            for (let te = 0; te < q; te++) {
                const ne = U(J);
                if (ne)
                    J = ne;
                else
                    break
            }
            return J
        }
        function U(J) {
            let te, ne;
            for (te = 0; te < J.length; te++) {
                const le = J[te];
                let ie;
                if (le.type === "paragraph" && (ie = le.raw.match(/(\n|^)(````*)/))) {
                    const oe = ie[2];
                    ne = K(J.slice(te), oe);
                    break
                }
                if (le.type === "paragraph" && le.raw.match(/(\n|^)\|/)) {
                    ne = se(J.slice(te));
                    break
                }
                if (te === J.length - 1 && le.type === "list") {
                    const oe = W(le);
                    if (oe) {
                        ne = [oe];
                        break
                    }
                }
                if (te === J.length - 1 && le.type === "paragraph") {
                    const oe = V(le);
                    if (oe) {
                        ne = [oe];
                        break
                    }
                }
            }
            if (ne) {
                const le = [...J.slice(0, te), ...ne];
                return le.links = J.links,
                le
            }
            return null
        }
        function K(J, te) {
            const ne = z(J);
            return a.marked.lexer(ne + `
${te}`)
        }
        function G(J) {
            return re(J, "`")
        }
        function Z(J) {
            return re(J, "*")
        }
        function x(J) {
            return re(J, "_")
        }
        function X(J) {
            return re(J, ")")
        }
        function Y(J) {
            return re(J, '")')
        }
        function Q(J) {
            return re(J, "](https://microsoft.com)")
        }
        function _(J) {
            return re(J, "**")
        }
        function ae(J) {
            return re(J, "__")
        }
        function re(J, te) {
            const ne = z(Array.isArray(J) ? J : [J]);
            return a.marked.lexer(ne + te)[0]
        }
        function se(J) {
            const te = z(J)
              , ne = te.split(`
`);
            let le, ie = !1;
            for (let oe = 0; oe < ne.length; oe++) {
                const fe = ne[oe].trim();
                if (typeof le > "u" && fe.match(/^\s*\|/)) {
                    const he = fe.match(/(\|[^\|]+)(?=\||$)/g);
                    he && (le = he.length)
                } else if (typeof le == "number")
                    if (fe.match(/^\s*\|/)) {
                        if (oe !== ne.length - 1)
                            return;
                        ie = !0
                    } else
                        return
            }
            if (typeof le == "number" && le > 0) {
                const oe = ie ? ne.slice(0, -1).join(`
`) : te
                  , fe = !!oe.match(/\|\s*$/)
                  , he = oe + (fe ? "" : "|") + `
|${" --- |".repeat(le)}`;
                return a.marked.lexer(he)
            }
        }
        function ee(J, te) {
            return n.addHook(J, te),
            (0,
            h.$Sc)(()=>n.removeHook(J))
        }
    }),
    define(ge[176], be([1, 0, 13, 208, 67, 12, 23, 31]), function(ce, e, t, n, C, I, L, y) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Zw = E,
        e.$1w = v,
        e.$2w = g,
        e.$3w = p,
        e.$4w = a,
        e.$5w = u,
        e.$6w = s,
        e.$7w = r,
        e.$8w = l,
        e.$9w = o;
        function E(m, w) {
            const {os: S, tildify: T, relative: D} = w;
            if (D) {
                const A = $(m, D, S);
                if (typeof A == "string")
                    return A
            }
            let k = m.fsPath;
            if (S === I.OperatingSystem.Windows && !I.$j ? k = k.replace(/\//g, "\\") : S !== I.OperatingSystem.Windows && I.$j && (k = k.replace(/\\/g, "/")),
            S !== I.OperatingSystem.Windows && T?.userHome) {
                const A = T.userHome.fsPath;
                let M;
                m.scheme !== T.userHome.scheme && m.path[0] === C.$gc.sep && m.path[1] !== C.$gc.sep ? M = T.userHome.with({
                    path: m.path
                }).fsPath : M = k,
                k = g(M, A, S)
            }
            return (S === I.OperatingSystem.Windows ? C.$fc : C.$gc).normalize(v(k, S === I.OperatingSystem.Windows))
        }
        function $(m, w, S) {
            const T = S === I.OperatingSystem.Windows ? C.$fc : C.$gc
              , D = S === I.OperatingSystem.Linux ? L.$9g : L.$$g
              , k = w.getWorkspace()
              , P = (0,
            t.$Nb)(k.folders);
            if (!P)
                return;
            m.scheme !== P.uri.scheme && m.path[0] === C.$gc.sep && m.path[1] !== C.$gc.sep && (m = P.uri.with({
                path: m.path
            }));
            const A = w.getWorkspaceFolder(m);
            if (!A)
                return;
            let M;
            if (D.isEqual(A.uri, m) ? M = "" : M = D.relativePath(A.uri, m) ?? "",
            M && (M = T.normalize(M)),
            k.folders.length > 1 && !w.noPrefix) {
                const O = A.name ? A.name : D.basenameOrAuthority(A.uri);
                M = M ? `${O} \u2022 ${M}` : O
            }
            return M
        }
        function v(m, w=I.$j) {
            return (0,
            n.$Jg)(m, w) ? m.charAt(0).toUpperCase() + m.slice(1) : m
        }
        let f = Object.create(null);
        function g(m, w, S=I.OS) {
            if (S === I.OperatingSystem.Windows || !m || !w)
                return m;
            let T = f.original === w ? f.normalized : void 0;
            T || (T = w,
            I.$j && (T = (0,
            n.$yg)(T)),
            T = `${(0,
            y.$nf)(T, C.$gc.sep)}${C.$gc.sep}`,
            f = {
                original: w,
                normalized: T
            });
            let D = m;
            return I.$j && (D = (0,
            n.$yg)(D)),
            (S === I.OperatingSystem.Linux ? D.startsWith(T) : (0,
            y.$Gf)(D, T)) ? `~/${D.substr(T.length)}` : m
        }
        function p(m, w) {
            return m.replace(/^~($|\/|\\)/, `${w}$1`)
        }
        const i = "\u2026"
          , c = "\\\\"
          , h = "~";
        function a(m, w=C.sep) {
            const S = new Array(m.length);
            let T = !1;
            for (let D = 0; D < m.length; D++) {
                const k = m[D];
                if (k === "") {
                    S[D] = `.${w}`;
                    continue
                }
                if (!k) {
                    S[D] = k;
                    continue
                }
                T = !0;
                let P = ""
                  , A = k;
                A.indexOf(c) === 0 ? (P = A.substr(0, A.indexOf(c) + c.length),
                A = A.substr(A.indexOf(c) + c.length)) : A.indexOf(w) === 0 ? (P = A.substr(0, A.indexOf(w) + w.length),
                A = A.substr(A.indexOf(w) + w.length)) : A.indexOf(h) === 0 && (P = A.substr(0, A.indexOf(h) + h.length),
                A = A.substr(A.indexOf(h) + h.length));
                const M = A.split(w);
                for (let O = 1; T && O <= M.length; O++)
                    for (let R = M.length - O; T && R >= 0; R--) {
                        T = !1;
                        let N = M.slice(R, R + O).join(w);
                        for (let z = 0; !T && z < m.length; z++)
                            if (z !== D && m[z] && m[z].indexOf(N) > -1) {
                                const V = R + O === M.length
                                  , B = R > 0 && m[z].indexOf(w) > -1 ? w + N : N
                                  , j = m[z].endsWith(B);
                                T = !V || j
                            }
                        if (!T) {
                            let z = "";
                            (M[0].endsWith(":") || P !== "") && (R === 1 && (R = 0,
                            O++,
                            N = M[0] + w + N),
                            R > 0 && (z = M[0] + w),
                            z = P + z),
                            R > 0 && (z = z + i + w),
                            z = z + N,
                            R + O < M.length && (z = z + w + i),
                            S[D] = z
                        }
                    }
                T && (S[D] = k)
            }
            return S
        }
        var d;
        (function(m) {
            m[m.TEXT = 0] = "TEXT",
            m[m.VARIABLE = 1] = "VARIABLE",
            m[m.SEPARATOR = 2] = "SEPARATOR"
        }
        )(d || (d = {}));
        function u(m, w=Object.create(null)) {
            const S = [];
            let T = !1
              , D = "";
            for (const k of m)
                if (k === "$" || T && k === "{")
                    D && S.push({
                        value: D,
                        type: d.TEXT
                    }),
                    D = "",
                    T = !0;
                else if (k === "}" && T) {
                    const P = w[D];
                    if (typeof P == "string")
                        P.length && S.push({
                            value: P,
                            type: d.VARIABLE
                        });
                    else if (P) {
                        const A = S[S.length - 1];
                        (!A || A.type !== d.SEPARATOR) && S.push({
                            value: P.label,
                            type: d.SEPARATOR
                        })
                    }
                    D = "",
                    T = !1
                } else
                    D += k;
            return D && !T && S.push({
                value: D,
                type: d.TEXT
            }),
            S.filter((k,P)=>{
                if (k.type === d.SEPARATOR) {
                    const A = S[P - 1]
                      , M = S[P + 1];
                    return [A, M].every(O=>O && (O.type === d.VARIABLE || O.type === d.TEXT) && O.value.length > 0)
                }
                return !0
            }
            ).map(k=>k.value).join("")
        }
        function s(m, w) {
            return I.$k || w ? m.replace(/\(&&\w\)|&&/g, "").replace(/&/g, I.$k ? "&" : "&&") : m.replace(/&&|&/g, S=>S === "&" ? "&&" : "&")
        }
        function r(m, w) {
            return I.$k || w ? m.replace(/\(&&\w\)|&&/g, "") : I.$j ? m.replace(/&&|&/g, S=>S === "&" ? "&&" : "&") : m.replace(/&&/g, "_")
        }
        function l(m) {
            return m.replace(/&/g, "&&")
        }
        function o(m) {
            if (m.endsWith("]")) {
                const w = m.lastIndexOf(" [", m.length - 2);
                if (w !== -1) {
                    const S = b(m.substring(0, w))
                      , T = m.substring(w);
                    return {
                        name: S.name + T,
                        parentPath: S.parentPath
                    }
                }
            }
            return b(m)
        }
        function b(m) {
            const w = m.indexOf("/") !== -1 ? C.$gc : C.$fc
              , S = w.basename(m)
              , T = w.dirname(m);
            return S.length ? {
                name: S,
                parentPath: T
            } : {
                name: T,
                parentPath: ""
            }
        }
    }),
    define(ge[745], be([1, 0, 119, 289, 67, 23, 9]), function(ce, e, t, n, C, I, L) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$PL = void 0,
        C = xe(C);
        class y {
            get childrenCount() {
                return this.a.size
            }
            get children() {
                return this.a.values()
            }
            get name() {
                return C.$gc.basename(this.relativePath)
            }
            constructor(f, g, p, i=void 0, c=void 0) {
                this.uri = f,
                this.relativePath = g,
                this.context = p,
                this.element = i,
                this.parent = c,
                this.a = new Map
            }
            get(f) {
                return this.a.get(f)
            }
            set(f, g) {
                this.a.set(f, g)
            }
            delete(f) {
                this.a.delete(f)
            }
            clear() {
                this.a.clear()
            }
        }
        Ee([t.$0h], y.prototype, "name", null);
        function E(v, f) {
            typeof v.element < "u" && f.push(v.element);
            for (const g of v.children)
                E(g, f);
            return f
        }
        class $ {
            static getRoot(f) {
                for (; f.parent; )
                    f = f.parent;
                return f
            }
            static collect(f) {
                return E(f, [])
            }
            static isResourceNode(f) {
                return f instanceof y
            }
            constructor(f, g=L.URI.file("/"), p=I.$9g) {
                this.a = p,
                this.root = new y(g,"",f)
            }
            add(f, g) {
                const p = this.a.relativePath(this.root.uri, f) || f.path
                  , i = new n.$Ji(!1).reset(p);
                let c = this.root
                  , h = "";
                for (; ; ) {
                    const a = i.value();
                    h = h + "/" + a;
                    let d = c.get(a);
                    if (d ? i.hasNext() || (d.element = g) : (d = new y(this.a.joinPath(this.root.uri, h),h,this.root.context,i.hasNext() ? void 0 : g,c),
                    c.set(a, d)),
                    c = d,
                    !i.hasNext())
                        return;
                    i.next()
                }
            }
            delete(f) {
                const g = this.a.relativePath(this.root.uri, f) || f.path
                  , p = new n.$Ji(!1).reset(g);
                return this.b(this.root, p)
            }
            b(f, g) {
                const p = g.value()
                  , i = f.get(p);
                if (i) {
                    if (g.hasNext()) {
                        const c = this.b(i, g.next());
                        return typeof c < "u" && i.childrenCount === 0 && f.delete(p),
                        c
                    }
                    return f.delete(p),
                    i.element
                }
            }
            clear() {
                this.root.clear()
            }
            getNode(f) {
                const g = this.a.relativePath(this.root.uri, f) || f.path
                  , p = new n.$Ji(!1).reset(g);
                let i = this.root;
                for (; ; ) {
                    const c = p.value()
                      , h = i.get(c);
                    if (!h || !p.hasNext())
                        return h;
                    i = h,
                    p.next()
                }
            }
        }
        e.$PL = $
    }),
    define(ge[746], be([1, 0, 70, 174, 9]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$Nn = e.$Mn = void 0,
        e.$On = E,
        e.$Pn = v,
        e.$Qn = f;
        function I(g) {
            return g.toJSON()
        }
        class L {
            constructor(p) {
                this.a = p
            }
            transformIncoming(p) {
                const i = this.a.transformIncoming(p);
                return i === p ? p : I(C.URI.from(i))
            }
            transformOutgoing(p) {
                const i = this.a.transformOutgoing(p);
                return i === p ? p : I(C.URI.from(i))
            }
            transformOutgoingURI(p) {
                const i = this.a.transformOutgoing(p);
                return i === p ? p : C.URI.from(i)
            }
            transformOutgoingScheme(p) {
                return this.a.transformOutgoingScheme(p)
            }
        }
        e.$Mn = L,
        e.$Nn = new class {
            transformIncoming(g) {
                return g
            }
            transformOutgoing(g) {
                return g
            }
            transformOutgoingURI(g) {
                return g
            }
            transformOutgoingScheme(g) {
                return g
            }
        }
        ;
        function y(g, p, i) {
            if (!g || i > 200)
                return null;
            if (typeof g == "object") {
                if (g instanceof C.URI)
                    return p.transformOutgoing(g);
                for (const c in g)
                    if (Object.hasOwnProperty.call(g, c)) {
                        const h = y(g[c], p, i + 1);
                        h !== null && (g[c] = h)
                    }
            }
            return null
        }
        function E(g, p) {
            const i = y(g, p, 0);
            return i === null ? g : i
        }
        function $(g, p, i, c) {
            if (!g || c > 200)
                return null;
            if (typeof g == "object") {
                if (g.$mid === n.MarshalledId.Uri)
                    return i ? C.URI.revive(p.transformIncoming(g)) : p.transformIncoming(g);
                if (g instanceof t.$Ne)
                    return null;
                for (const h in g)
                    if (Object.hasOwnProperty.call(g, h)) {
                        const a = $(g[h], p, i, c + 1);
                        a !== null && (g[h] = a)
                    }
            }
            return null
        }
        function v(g, p) {
            const i = $(g, p, !1, 0);
            return i === null ? g : i
        }
        function f(g, p) {
            const i = $(g, p, !0, 0);
            return i === null ? g : i
        }
    }),
    define(ge[87], be([1, 0]), function(ce, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$2g = void 0,
        e.$1g = n;
        const t = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
        function n(C) {
            return t.test(C)
        }
        e.$2g = function() {
            if (typeof crypto == "object" && typeof crypto.randomUUID == "function")
                return crypto.randomUUID.bind(crypto);
            let C;
            typeof crypto == "object" && typeof crypto.getRandomValues == "function" ? C = crypto.getRandomValues.bind(crypto) : C = function(y) {
                for (let E = 0; E < y.length; E++)
                    y[E] = Math.floor(Math.random() * 256);
                return y
            }
            ;
            const I = new Uint8Array(16)
              , L = [];
            for (let y = 0; y < 256; y++)
                L.push(y.toString(16).padStart(2, "0"));
            return function() {
                C(I),
                I[6] = I[6] & 15 | 64,
                I[8] = I[8] & 63 | 128;
                let E = 0
                  , $ = "";
                return $ += L[I[E++]],
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += "-",
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += "-",
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += "-",
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += "-",
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += L[I[E++]],
                $ += L[I[E++]],
                $
            }
        }()
    }),
    define(ge[360], be([1, 0, 13, 89, 87]), function(ce, e, t, n, C) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$tu = e.$ru = void 0,
        e.$pu = I,
        e.$qu = L,
        e.$su = $;
        function I(f) {
            return {
                asString: async()=>f,
                asFile: ()=>{}
                ,
                value: typeof f == "string" ? f : void 0
            }
        }
        function L(f, g, p) {
            const i = {
                id: (0,
                C.$2g)(),
                name: f,
                uri: g,
                data: p
            };
            return {
                asString: async()=>"",
                asFile: ()=>i,
                value: void 0
            }
        }
        class y {
            constructor() {
                this.a = new Map
            }
            get size() {
                let g = 0;
                for (const p of this.a)
                    g++;
                return g
            }
            has(g) {
                return this.a.has(this.b(g))
            }
            matches(g) {
                const p = [...this.a.keys()];
                return n.Iterable.some(this, ([i,c])=>c.asFile()) && p.push("files"),
                v(E(g), p)
            }
            get(g) {
                return this.a.get(this.b(g))?.[0]
            }
            append(g, p) {
                const i = this.a.get(g);
                i ? i.push(p) : this.a.set(this.b(g), [p])
            }
            replace(g, p) {
                this.a.set(this.b(g), [p])
            }
            delete(g) {
                this.a.delete(this.b(g))
            }
            *[Symbol.iterator]() {
                for (const [g,p] of this.a)
                    for (const i of p)
                        yield[g, i]
            }
            b(g) {
                return E(g)
            }
        }
        e.$ru = y;
        function E(f) {
            return f.toLowerCase()
        }
        function $(f, g) {
            return v(E(f), g.map(E))
        }
        function v(f, g) {
            if (f === "*/*")
                return g.length > 0;
            if (g.includes(f))
                return !0;
            const p = f.match(/^([a-z]+)\/([a-z]+|\*)$/i);
            if (!p)
                return !1;
            const [i,c,h] = p;
            return h === "*" ? g.some(a=>a.startsWith(c + "/")) : !1
        }
        e.$tu = Object.freeze({
            create: f=>(0,
            t.$Lb)(f.map(g=>g.toString())).join(`\r
`),
            split: f=>f.split(`\r
`),
            parse: f=>e.$tu.split(f).filter(g=>!g.startsWith("#"))
        })
    }),
    define(ge[1344], be([1, 0, 18]), function(ce, e, t) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.$NX = e.$MX = e.$LX = e.$KX = e.$JX = void 0,
        e.$OX = $;
        class n {
            constructor(f) {
                this.a = f
            }
            verify(f) {
                return this.b(f) ? f : this.a
            }
        }
        class C extends n {
            b(f) {
                return typeof f == "boolean"
            }
        }
        e.$JX = C;
        class I extends n {
            b(f) {
                return typeof f == "number"
            }
        }
        e.$KX = I;
        class L extends n {
            b(f) {
                return f instanceof Set
            }
        }
        e.$LX = L;
        class y extends n {
            constructor(f, g) {
                super(f),
                this.c = g
            }
            b(f) {
                return this.c.includes(f)
            }
        }
        e.$MX = y;
        class E extends n {
            constructor(f, g) {
                super(f),
                this.c = g
            }
            verify(f) {
                return this.b(f) ? $(this.c, f) : this.a
            }
            b(f) {
                return (0,
                t.$gg)(f)
            }
        }
        e.$NX = E;
        function $(v, f) {
            const g = Object.create(null);
            for (const p in v)
                if (Object.hasOwnProperty.call(v, p)) {
                    const i = v[p];
                    g[p] = i.verify(f[p])
                }
            return g
        }
    }),
    define(ge[522], be([1, 0, 14, 5, 2, 65, 12, 31]), function(ce, e, t, n, C, I, L, y) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
        e.SimpleWorkerServer = e.SimpleWorkerClient = void 0,
        e.logOnceWebWorkerWarning = v,
        e.create = o,
        y = xe(y);
        const E = "$initialize";
        let $ = !1;
        function v(b) {
            L.$p && ($ || ($ = !0,
            console.warn("Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq")),
            console.warn(b.message))
        }
        var f;
        (function(b) {
            b[b.Request = 0] = "Request",
            b[b.Reply = 1] = "Reply",
            b[b.SubscribeEvent = 2] = "SubscribeEvent",
            b[b.Event = 3] = "Event",
            b[b.UnsubscribeEvent = 4] = "UnsubscribeEvent"
        }
        )(f || (f = {}));
        class g {
            constructor(m, w, S, T) {
                this.vsWorker = m,
                this.req = w,
                this.method = S,
                this.args = T,
                this.type = f.Request
            }
        }
        class p {
            constructor(m, w, S, T) {
                this.vsWorker = m,
                this.seq = w,
                this.res = S,
                this.err = T,
                this.type = f.Reply
            }
        }
        class i {
            constructor(m, w, S, T) {
                this.vsWorker = m,
                this.req = w,
                this.eventName = S,
                this.arg = T,
                this.type = f.SubscribeEvent
            }
        }
        class c {
            constructor(m, w, S) {
                this.vsWorker = m,
                this.req = w,
                this.event = S,
                this.type = f.Event
            }
        }
        class h {
            constructor(m, w) {
                this.vsWorker = m,
                this.req = w,
                this.type = f.UnsubscribeEvent
            }
        }
        class a {
            constructor(m) {
                this.a = -1,
                this.g = m,
                this.b = 0,
                this.c = Object.create(null),
                this.d = new Map,
                this.f = new Map
            }
            setWorkerId(m) {
                this.a = m
            }
            sendMessage(m, w) {
                const S = String(++this.b);
                return new Promise((T,D)=>{
                    this.c[S] = {
                        resolve: T,
                        reject: D
                    },
                    this.o(new g(this.a,S,m,w))
                }
                )
            }
            listen(m, w) {
                let S = null;
                const T = new n.$le({
                    onWillAddFirstListener: ()=>{
                        S = String(++this.b),
                        this.d.set(S, T),
                        this.o(new i(this.a,S,m,w))
                    }
                    ,
                    onDidRemoveLastListener: ()=>{
                        this.d.delete(S),
                        this.o(new h(this.a,S)),
                        S = null
                    }
                });
                return T.event
            }
            handleMessage(m) {
                !m || !m.vsWorker || this.a !== -1 && m.vsWorker !== this.a || this.h(m)
            }
        }
    });
});


           